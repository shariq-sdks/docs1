get:
  summary: /api/client/authorization/get/list/{subject} API
  description: |
    Get a list of client applications that an end-user has authorized.
    
    The subject parameter is required and can be provided either in the path or as a query parameter.
  security:
    - ServiceCredentials: []
  parameters:
    - in: path
      name: subject
      schema:
        type: string
      required: true
      description: |
        Unique user ID of an end-user.
    - in: query
      name: subject
      schema:
        type: string
      required: true
      description: |
        Unique user ID of an end-user.
    - in: query
      name: developer
      schema:
        type: string
      required: false
      description: |
        Unique ID of a client developer.
    - in: query
      name: start
      schema:
        type: integer
        format: int32
      required: false
      description:
        Start index of search results (inclusive). The default value is 0.
    - in: query
      name: end
      schema:
        type: integer
        format: int32
      required: false
      description: |
        End index of search results (exclusive). The default value is 5.
  responses:
    '200':
      description: ""
      content:
        application/json:
          schema:
            $ref: ../model/response/client_authorization_get_list_response.yaml
          example:
            {
              "clients": [
                {
                  "applicationType": "WEB",
                  "attributes": [
                    {
                      "key": "attribute1-key",
                      "value": "attribute1-value"
                    },
                    {
                      "key": "attribute2-key",
                      "value": "attribute2-value"
                    }
                  ],
                  "authTimeRequired": false,
                  "bcUserCodeRequired": false,
                  "clientId": 26478243745571,
                  "clientIdAlias": "my-client",
                  "clientIdAliasEnabled": true,
                  "clientName": "My client",
                  "clientSecret": "gXz97ISgLs4HuXwOZWch8GEmgL4YMvUJwu3er_kDVVGcA0UOhA9avLPbEmoeZdagi9yC_-tEiT2BdRyH9dbrQQ",
                  "clientType": "CONFIDENTIAL",
                  "createdAt": 1639468356000,
                  "defaultMaxAge": 0,
                  "derivedSectorIdentifier": "my-client.example.com",
                  "developer": "john",
                  "dynamicallyRegistered": false,
                  "frontChannelRequestObjectEncryptionRequired": false,
                  "grantTypes": [
                    "AUTHORIZATION_CODE",
                    "REFRESH_TOKEN"
                  ],
                  "idTokenSignAlg": "RS256",
                  "modifiedAt": 1639468356000,
                  "number": 6164,
                  "parRequired": false,
                  "redirectUris": [
                    "https://my-client.example.com/cb1",
                    "https://my-client.example.com/cb2"
                  ],
                  "requestObjectEncryptionAlgMatchRequired": false,
                  "requestObjectEncryptionEncMatchRequired": false,
                  "requestObjectRequired": false,
                  "responseTypes": [
                    "CODE",
                    "TOKEN"
                  ],
                  "serviceNumber": 5041,
                  "subjectType": "PUBLIC",
                  "tlsClientCertificateBoundAccessTokens": false,
                  "tokenAuthMethod": "CLIENT_SECRET_BASIC"
                }
              ],
              "end": 5,
              "start": 0,
              "subject": "john",
              "totalCount": 1
            }
    '400':
      description: ""
      content:
        application/json:
          schema:
            $ref: ../model/response/result.yaml
          example:
            resultCode: A001201
            resultMessage: '[A001201] /client/authorization/get/list, TLS must be used.'
    '401':
      description: ""
      content:
        application/json:
          schema:
            $ref: ../model/response/result.yaml
          example:
            resultCode: A001202
            resultMessage: '[A001202] /client/authorization/get/list, Authorization header is missing.'
    '403':
      description: ""
      content:
        application/json:
          schema:
            $ref: ../model/response/result.yaml
          example:
            resultCode: A001215
            resultMessage: '[A001215] /client/authorization/get/list, The service (API Key = 21653835348762) is locked.'
    '500':
      description: ""
      content:
        application/json:
          schema:
            $ref: ../model/response/result.yaml
          example:
            resultCode: A001101
            resultMessage: '[A001101] /client/authorization/get/list, Authlete Server error.'
  operationId: 'client_authorization_get_list_api'
  x-code-samples:
    - lang: shell
      label: curl
      source: |
        curl -v https://api.authlete.com/api/client/authorization/get/list/john?start=0\&end=5 \
        -u '21653835348762:uE4NgqeIpuSV_XejQ7Ds3jsgA1yXhjR1MXJ1LbPuyls'

    - lang: java
      label: java
      source: |
        AuthleteConfiguration conf = ...;
        AuthleteApi api = AuthleteApiFactory.create(conf);

        ClientAuthorizationGetListRequest req = new ClientAuthorizationGetListRequest();
        req.setSubject("john");
        req.setStart(0);
        req.setEnd(5);

        api.getClientAuthorizationList(req);

    - lang: cs
      label: C#
      source: |
        IAuthleteConfiguration conf = new AuthletePropertiesConfiguration();
        IAuthleteApi api = new AuthleteApi(conf);

        ClientAuthorizationGetListRequest req = new ClientAuthorizationGetListRequest();
        req.Subject = "john";
        req.Start = 0;
        req.End = 5;

        await api.GetClientAuthorizationList(req);

    - lang: php
      label: PHP
      source: |
        $conf = ...;
        $api = new AuthleteApiImpl($conf);

        $req = new ClientAuthorizationGetListRequest();
        $req.setSubject("john");
        $req.setStart(0);
        $req.setEnd(5);

        $api.getClientAuthorizationList($req);

    - lang: ruby
      source: |
        conf = ...
        api = Authlete::Api.new(conf)

        req = Authlete::Model::Request::ClientAuthorizationGetListRequest.new
        req.subject = 'john'
        req.start = 0
        req.end = 5

        api.get_client_authorization_list(req)

    - lang: python
      source: |
        conf = ...
        api = AuthleteApiImpl(conf)

        req = ClientAuthorizationGetListRequest()
        req.subject = 'john'
        req.start = 0
        req.end = 5

        api.getClientAuthorizationList(req)

    - lang: go
      source: |
        conf := ...
        api := api.New(&conf)

        req := dto.ClientAuthorizationGetListRequest{}
        req.Subject = "john"
        req.Start = 0
        req.End = 5

        api.GetClientAuthorizationList(&req)

    - lang: ts
      label: deno
      source: |
        // This API is not supported yet.

  tags:
    - Client Management

A000101:
  code: A000101
  message: "Authlete Server error."
  description: "Sorry, an unexpected error occurred on Authlete's side."
A000102:
  code: A000102
  message: "Server Error: {Error Message}"
A000103:
  code: A000103
  message: "Internal Server Error."
A000104:
  code: A000104
  message: "Other Web Error: {Error Message}"
A000201:
  code: A000201
  message: "Client Error: {Error Message}"
A000202:
  code: A000202
  message: "Redirection to {URI}: {Error Message}"
A001101:
  code: A001101
  message: "{API Path}, Authlete Server error."
  description: "Sorry, an unexpected error occurred on Authlete's side."
A001201:
  code: A001201
  message: "{API Path}, TLS must be used."
  description: "Check if the API's URL you specified starts with `https://`, not `http://`."
A001202:
  code: A001202
  message: "{API Path}, Authorization header is missing."
  description: "This API requires [Basic Authentication](http://tools.ietf.org/html/rfc2617#section-2). Include `Authorization` HTTP header in your API call."
A001203:
  code: A001203
  message: "{API Path}, Credentials in Authorization header are malformed: {Header Value}"
  description: "Check if the format of the value of `Authorization` HTTP header in your API call complies with the specification of [Basic Authentication](http://tools.ietf.org/html/rfc2617#section-2)."
A001212:
  code: A001212
  message: "{API Path}, The client (ID = {Client ID}) does not exist."
  description: "Check if the client ID you specified is correct."
A001213:
  code: A001213
  message: "{API Path}, The client (ID = {Client ID}) does not belong to the service."
A001214:
  code: A001214
  message: "{API Path}, The client (ID = {Client ID}) has been deleted."
  description: "The client application has been logically deleted, so it cannot be used."
A001215:
  code: A001215
  message: "{API Path}, The client (ID = {Client ID}) is locked."
  description: "The client application is currently locked for some reasons, so it cannot be used."
A001216:
  code: A001216
  message: "{API Path}, The client ID is invalid."
A001217:
  code: A001217
  message: "{API Path}, This API is not usable under the current configuration."
  description: "Consult our support team if you want to use this API."
A001218:
  code: A001218
  message: "{API Path}, The client (identifier = {Client Identifier}) does not exist."
  description: "Check if the client identifier you specified is correct. If you used a client alias, check if the feature of client ID alias is enabled both in the client configuration and in the service configuration."
A001219:
  code: A001219
  message: "{API Path}, The client (identifier = {Client Identifier}) does not belong to the service."
A001220:
  code: A001220
  message: "{API Path}, The client (identifier = {Client Identifier}) has been deleted."
A001221:
  code: A001221
  message: "{API Path}, The client (identifier = {Client Identifier}) is locked."
A001222:
  code: A001222
  message: "{API Path}, The client (identifier = {Client Identifier}) exists but the configuration of the client does not allow 'Client ID Alias'."
A001223:
  code: A001223
  message: "{API Path}, The feature '{Feature}' must be enabled to use this API."
A001300:
  code: A001300
  message: "{API Path}, Unable to load introspected token data from external server ('{Introspection URL}')."
A001301:
  code: A001301
  message: "{API Path}, Expected a DPoP header but none was provided."
A001302:
  code: A001302
  message: "{API Path}, Thumbprint of the provided DPoP key does not match the expected DPoP thumbprint."
A001303:
  code: A001303
  message: "{API Path}, There was an error processing the DPoP header: {Error}"
A001304:
  code: A001304
  message: "{API Path}, The DPoP signature algorithm ({Algorithm}) must not be symmetric or 'none'."
A001305:
  code: A001305
  message: "{API Path}, The DPoP header did not include a public key in JWK format."
A001306:
  code: A001306
  message: "The DPoP signature algorithm is missing."
A001307:
  code: A001307
  message: "{API Path}, The token required an MTLS certificate but none was provided."
A001308:
  code: A001308
  message: "{API Path}, The certificate thumbprint of the request does not match the certificate thumbprint of the access token."
A001309:
  code: A001309
  message: "{API Path}, There was an error processing the presented certificate."
A002101:
  code: A002101
  message: "{API Path}, Failed to get service owner information from 'service_owner' table."
  description: "Sorry, an error occurred on the server side in getting the information about the service owner from the database."
A002201:
  code: A002201
  message: "{API Path}, No service owner has the API credentials."
  description: "Check if the pair of API key and API secret you specified is correct."
A002202:
  code: A002202
  message: "{API Path}, The service owner (API Key = {Service Owner's API Key}) has been deleted."
  description: "The service owner has been logically deleted, so services and client applications that belong to the service owner cannot be used."
A002203:
  code: A002203
  message: "{API Path}, The service owner (API Key = {Service Owner's API Key}) is locked."
  description: "The service owner is currently locked for some reasons, so services and client applications that belong to the service owner cannot be used."
A002204:
  code: A002204
  message: "{API Path}, The service owner (API Key = {Service Owner's API Key}) has not been verified."
A002205:
  code: A002205
  message: "{API Path}, The API credentials do not match those of the service owner (API Key = {Service Owner's API Key})."
  description: "Check if the pair of API key and API secret you specified is correct."
A003101:
  code: A003101
  message: "{API Path}, No service owner owns the service (API Key = {Service's API Key})."
  description: "Sorry, there is an inconsistency on Authlete's side."
A003102:
  code: A003102
  message: "{API Path}, The service owner (API Key = {Service Owner's API Key}) of the service (API Key = {Service's API Key}) has not been verified."
  description: "Sorry, there is an inconsistency on Authlete's side."
A003103:
  code: A003103
  message: "{API Path}, Failed to get service information from 'service' table."
  description: "Sorry, an error occurred on the server side in getting the information about the service from the database."
A003104:
  code: A003104
  message: "{API Path}, Failed to get service owner information from 'service_owner' table."
  description: "Sorry, an error occurred on the server side in getting the information about the service owner from the database."
A003201:
  code: A003201
  message: "{API Path}, No service has the API credentials."
  description: "Check if the pair of API key and API secret you specified is correct."
A003202:
  code: A003202
  message: "{API Path}, The service (API Key = {Service's API Key}) has been deleted."
  description: "The service has been logically deleted, so it cannot be used."
A003203:
  code: A003203
  message: "{API Path}, The service (API Key = {Service's API Key}) is locked."
  description: "The service is currently locked for some reasons, so it cannot be used."
A003204:
  code: A003204
  message: "{API Path}, The API credentials do not match those of the service (API Key = {Service's API Key})."
  description: "Check if the API secret you specified is correct."
A003205:
  code: A003205
  message: "{API Path}, The service owner (API Key = {Service Owner's API Key}) of the service (API Key = {Service's API Key}) has been deleted."
  description: "The service owner of the service has been logically deleted, so the service cannot be used."
A003206:
  code: A003206
  message: "{API Path}, The service owner (API Key = {Service Owner's API Key}) of the service (API Key = {Service's API Key}) is locked."
  description: "The service owner of the service is currently locked for some reasons, so the service cannot be used."
A004001:
  code: A004001
  message: "Authlete has successfully issued a ticket to the service (API Key = {Service's API Key}) for the authorization request from the client (ID = {Client ID}). [response_type={Response Type}, openid={Boolean}]"
  description: "The call of `/api/auth/authorization` API succeeded."
A004201:
  code: A004201
  message: "The authorization request from the service does not contain 'parameters' parameter."
  description: "Include the `parameters` request parameter when you call Authlete's `/api/auth/authorization` API."
A004202:
  code: A004202
  message: "The format of the value of 'parameters' request parameter is wrong."
  description: "Check if the value of the `parameters` request parameter given to Authlete's `/api/auth/authorization` API complies with `x-www-form-urlencoded`."
A004301:
  code: A004301
  message: "The authorization request does not contain any request parameters."
A004302:
  code: A004302
  message: "The value of 'response_type' ({Response Type}) is not allowed when 'scope' does not contain 'openid'."
A004303:
  code: A004303
  message: "'consent' must be explicitly included in 'prompt' parameter when 'offline_access' is included in 'scope'."
A005101:
  code: A005101
  message: "JOSEObject.parse(String) returned an instance of unknown class: {Class Name}"
A005102:
  code: A005102
  message: "Failed to convert a JWK to a PublicKey."
A005103:
  code: A005103
  message: "The key type '{Key Type}' cannot have a private key."
A005104:
  code: A005104
  message: "Failed to put the JWK Set of the client (ID = {Client ID}) into 'client_jwks' table."
A005105:
  code: A005105
  message: "Failed to create a decrypter for the JWE passed by 'request' parameter. (client_id={Client ID}, alg={Algorithm}, enc={Algorithm})"
A005106:
  code: A005106
  message: "Failed to create a decrypter for the JWE pointed to by 'request_uri' parameter. (client_id={Client ID}, alg={Algorithm}, enc={Algorithm})"
A005107:
  code: A005107
  message: "Failed to create a decrypter for the JWE passed by 'request' parameter due to an unexpected key length. (client_id={Client ID}, alg={Algorithm}, enc={Algorithm}, expected key length={Key Length})"
A005108:
  code: A005108
  message: "The JWK Set of the service is marked as hosted but not found in 'service_jwks' table."
A005109:
  code: A005109
  message: "Failed to convert a JWK to a PrivateKey."
A005110:
  code: A005110
  message: "Failed to store the fetched request object into the local database."
A005111:
  code: A005111
  message: "Failed to get request URI information from 'request_uri' table."
A005112:
  code: A005112
  message: "Failed to get an entity from 'client_jwks' table."
A005113:
  code: A005113
  message: "Failed to get an entity from 'service_jwks' table."
A005114:
  code: A005114
  message: "Failed to create a decrypter for the JWE pointed to by 'request_uri' parameter due to an unexpected key length. (client_id={Client ID}, alg={Algorithm}, enc={Algorithm}, expected key length={Key Length})"
A005115:
  code: A005115
  message: "An error occurred while hardware-secured keys were checked to create a JWE decrypter: {Error Message}"
A005201:
  code: A005201
  message: "The request object passed by 'request' parameter cannot be decrypted because this service has not registered its JWK Set."
  description: "The client application should not encrypt the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests), or the service should register its JWK Set into Authlete."
A005202:
  code: A005202
  message: "The request object pointed to by 'request_uri' parameter cannot be decrypted because this service has not registered its JWK Set."
  description: "The [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL should not be encrypted (the developer of the client application should fix it), or the service should register its JWK Set into Authlete."
A005203:
  code: A005203
  message: "The request object passed by 'request' parameter cannot be decrypted because this service has not registered its JWK Set."
  description: "The client application should not encrypt the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests), or the service should register its JWK Set into Authlete."
A005204:
  code: A005204
  message: "The request object pointed to by 'request_uri' parameter cannot be decrypted because this service has not registered its JWK Set."
  description: "The [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL should not be encrypted (the developer of the client application should fix it), or the service should register its JWK Set into Authlete."
A005301:
  code: A005301
  message: "The value of 'request' parameter failed to be parsed as a JOSE."
  description: "The client application should be fixed to construct a valid [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests)."
A005302:
  code: A005302
  message: "The payload of the JWE passed by 'request' parameter failed to be parsed as a JOSE."
  description: "The client application should be fixed to construct a valid [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests)."
A005303:
  code: A005303
  message: "The value pointed to by 'request_uri' parameter failed to be parsed as a JOSE."
  description: "The developer of the client application should fix the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`)."
A005304:
  code: A005304
  message: "The payload of the JWE pointed to by 'request_uri' parameter failed to be parsed as a JOSE."
  description: "The developer of the client application should fix the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`)."
A005305:
  code: A005305
  message: "The payload of the JWE passed by 'request' parameter must not be a JWE."
  description: "The client application should be fixed to construct a valid [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests)."
A005306:
  code: A005306
  message: "The payload of the JWE pointed to by 'request_uri' parameter must not be a JWE."
  description: "The developer of the client application should fix the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`)."
A005307:
  code: A005307
  message: "The JWS header of the request object passed by 'request' parameter does not contain 'alg' parameter."
  description: "The client application should be fixed to include the `alg` parameter."
A005308:
  code: A005308
  message: "The JWS header of the payload of the JWE passed by 'request' parameter does not contain 'alg' parameter."
  description: "The client application should be fixed to include the `alg` parameter."
A005309:
  code: A005309
  message: "The JWS header of the request object pointed to by 'request_uri' parameter does not contain 'alg' parameter."
  description: "The developer of the client application should fix the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`) to include the `alg` parameter."
A005310:
  code: A005310
  message: "The JWS header of the payload of the JWE pointed to by 'request_uri' parameter does not contain 'alg' parameter."
  description: "The developer of the client application should fix the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`) to include the `alg` parameter."
A005311:
  code: A005311
  message: "Failed to fetch the JWK Set of the client (ID = {Client ID}) from the location pointed to by 'jwks_uri' ({URL}): {Error Message}"
  description: "Authlete tried to fetch the JWK Set of the client application from the registered URL but in vain. The developer of the client application should check if the URL is valid and it returns a valid JWK Set."
A005312:
  code: A005312
  message: "The algorithm in the JWS header of the request object passed by 'request' parameter does not match the registered one ({Algorithm})."
  description: "The client application should be fixed to use the registered algorithm for signing the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests), or the developer of the client application should change the registered value of the `requestSignAlg` property."
A005313:
  code: A005313
  message: "The algorithm in the JWS header of the payload of the JWE passed by 'request' parameter does not match the registered one ({Algorithm})."
  description: "The client application should be fixed to use the registered algorithm for signing the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests), or the developer of the client application should change the registered value of the `requestSignAlg` property."
A005314:
  code: A005314
  message: "The algorithm in the JWS header of the request object pointed to by 'request_uri' parameter does not match the registered one ({Algorithm})."
  description: "The [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`) should be signed with the registered algorithm, or the developer of the client application should change the registered value of the `requestSignAlg` property."
A005315:
  code: A005315
  message: "The algorithm in the JWS header of the payload of the JWE pointed to by 'request' parameter does not match the registered one ({Algorithm})."
  description: "The client application should be signed with the registered algorithm, or the developer of the client application should change the registered value of the `requestSignAlg` property."
A005316:
  code: A005316
  message: "The algorithm in the JWS header of the request object passed by 'request' parameter is symmetric ({Algorithm}), but the client type is not confidential."
  description: "The client application should not use the algorithm for signing the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests). The developer of the client application should either change the client type to confidential (= change the registered value of the `clientType` property to `CONFIDENTIAL`) or change the registered algorithm to one of asymmetric algorithms (= change the registered value of the `requestSignAlg` property) and fix the application code to use the asymmetric algorithm."
A005317:
  code: A005317
  message: "The algorithm in the JWS header of the JWE passed by 'request' parameter is symmetric ({Algorithm}), but the client type is not confidential."
  description: "The client application should not use the algorithm for signing the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests). The developer of the client application should either change the client type to confidential (= change the registered value of the `clientType` property to `CONFIDENTIAL`) or change the registered algorithm to one of asymmetric algorithms (= change the registered value of the `requestSignAlg` property) and fix the application code to use the asymmetric algorithm."
A005318:
  code: A005318
  message: "The algorithm in the JWS header of the request object pointed to by 'request_uri' parameter is symmetric ({Algorithm}), but the client type is not confidential."
  description: "The algorithm should not be used to sign the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`). The developer of the client application should either change the client type to confidential (= change the registered value of the `clientType` property to `CONFIDENTIAL`) or change the registered algorithm to one of asymmetric algorithms (= change the registered value of the `requestSignAlg` property) and sign the request object with the asymmetric algorithm."
A005319:
  code: A005319
  message: "The algorithm in the JWS header of the JWE pointed to by 'request_uri' parameter is symmetric ({Algorithm}), but the client type is not confidential."
  description: "The algorithm should not be used to sign the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`). The developer of the client application should either change the client type to confidential (= change the registered value of the `clientType` property to `CONFIDENTIAL`) or change the registered algorithm to one of asymmetric algorithms (= change the registered value of the `requestSignAlg` property) and sign the request object with the asymmetric algorithm."
A005320:
  code: A005320
  message: "The algorithm in the JWS header of the request object passed by 'request' parameter is not supported."
  description: "The client application should be fixed to use one of the supported algorithms for signing the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests)."
A005321:
  code: A005321
  message: "The algorithm in the JWS header of the payload of the JWE passed by 'request' parameter is not supported."
  description: "The client application should be fixed to use one of the supported algorithms for signing the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests)."
A005322:
  code: A005322
  message: "The algorithm in the JWS header of the request object pointed to by 'request_uri' parameter is not supported."
  description: "The [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`) should be signed with one of the supported algorithms."
A005323:
  code: A005323
  message: "The algorithm in the JWS header of the payload of the JWE pointed to by 'request_uri' parameter is not supported."
  description: "The client application should be fixed to use one of the supported algorithms for signing the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests)."
A005324:
  code: A005324
  message: "The signature of the request object passed by 'request' parameter failed to be verified: {Error Message}"
  description: "The client application should be fixed to sign the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) correctly."
A005325:
  code: A005325
  message: "The signature of the payload of the JWE passed by 'request' parameter failed to be verified: {Error Message}"
  description: "The client application should be fixed to sign the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) correctly."
A005326:
  code: A005326
  message: "The signature of the request object pointed to by 'request_uri' parameter failed to be verified: {Error Message}"
  description: "The [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`) should be signed correctly."
A005327:
  code: A005327
  message: "The signature of the payload of the JWE pointed to by 'request_uri' parameter failed to be verified: {Error Message}"
  description: "The [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`) should be signed correctly."
A005328:
  code: A005328
  message: "The signature of the request object passed by 'request' parameter was not verified."
  description: "The client application should be fixed to use the correct private or shared key for signing the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests)."
A005329:
  code: A005329
  message: "The signature of the payload of the JWE passed by 'request' parameter was not verified."
  description: "The client application should be fixed to use the correct private or shared key for signing the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests)."
A005330:
  code: A005330
  message: "The signature of the request object pointed to by 'request_uri' parameter was not verified."
  description: "The [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`) should be signed with the correct private or shared key."
A005331:
  code: A005331
  message: "The signature of the payload of the JWE pointed to by 'request_uri' parameter was not verified."
  description: "The [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`) should be signed with the correct private or shared key."
A005332:
  code: A005332
  message: "The request object passed by 'request' parameter is signed using a private key, but neither 'jwks_uri' nor 'jwks' to get its associated public key is registered."
  description: "The developer of the client application should register the JWK Set (containing the paired public key) of the client application into the service (as the value of the `jwks` property), or make it accessible somewhere and register its URL into the service (as the value of the `jwksUri` property)."
A005333:
  code: A005333
  message: "The payload of the JWE passed by 'request' parameter is signed using a private key, but neither 'jwks_uri' nor 'jwks' to get its associated public key is registered."
  description: "The developer of the client application should register the JWK Set (containing the paired public key) of the client application into the service (as the value of the `jwks` property), or make it accessible somewhere and register its URL into the service (as the value of the `jwksUri` property)."
A005334:
  code: A005334
  message: "The request object pointed to by 'request_uri' parameter is signed using a private key, but neither 'jwks_uri' nor 'jwks' to get its associated public key is registered."
  description: "The developer of the client application should register the JWK Set (containing the paired public key) of the client application into the service (as the value of the `jwks` property), or make it accessible somewhere and register its URL into the service (as the value of the `jwksUri` property)."
A005335:
  code: A005335
  message: "The payload of the JWE pointed by 'request_uri' parameter is signed using a private key, but neither 'jwks_uri' nor 'jwks' to get its associated public key is registered."
  description: "The developer of the client application should register the JWK Set (containing the paired public key) of the client application into the service (as the value of the `jwks` property), or make it accessible somewhere and register its URL into the service (as the value of the `jwksUri` property)."
A005336:
  code: A005336
  message: "The request object passed by 'request' parameter is not signed but the registered value of 'request_object_signing_alg' is neither 'none' nor null."
  description: "The client application should be fixed to sign the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) with the registered algorithm (the value of the `requestSignAlg` property), or the developer of the client application should change the value of the registered algorithm to `none` or `null`."
A005337:
  code: A005337
  message: "The payload of the JWE passed by 'request' parameter is not signed but the registered value of 'request_object_signing_alg' is neither 'none' nor null."
  description: "The client application should be fixed to sign the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) with the registered algorithm (the value of the `requestSignAlg` property), or the developer of the client application should change the value of the registered algorithm to `none` or `null`."
A005338:
  code: A005338
  message: "The request object pointed to by 'request_uri' parameter is not signed but the registered value of 'request_object_signing_alg' is neither 'none' nor null."
  description: "The [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`) should be signed with the registered algorithm (the value of the `requestSignAlg` property), or the developer of the client application should change the value of the registered algorithm to `none` or `null`."
A005339:
  code: A005339
  message: "The payload of the JWE pointed to by 'request_uri' parameter is not signed but the registered value of 'request_object_signing_alg' is neither 'none' nor null."
  description: "The [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`) should be signed with the registered algorithm (the value of the `requestSignAlg` property), or the developer of the client application should change the value of the registered algorithm to `none` or `null`."
A005340:
  code: A005340
  message: "The JWK Set pointed to by 'jwks_uri' does not contain the public key to verify the signature of the request object passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
  description: "The developer of the client application should check if the JWK Set pointed to by the registered URL (the value of `jwksUri` property) contains the public key for the combination of the algorithm and the key ID."
A005341:
  code: A005341
  message: "The JWK Set pointed to by 'jwks_uri' does not contain the public key to verify the signature of the payload of the JWE passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
  description: "The developer of the client application should check if the JWK Set pointed to by the registered URL (the value of `jwksUri` property) contains the public key for the combination of the algorithm and the key ID."
A005342:
  code: A005342
  message: "The JWK Set pointed to by 'jwks_uri' does not contain the public key to verify the signature of the request object pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
  description: "The developer of the client application should check if the JWK Set pointed to by the registered URL (the value of `jwksUri` property) contains the public key for the combination of the algorithm and the key ID."
A005343:
  code: A005343
  message: "The JWK Set pointed to by 'jwks_uri' does not contain the public key to verify the signature of the payload of the JWE pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
  description: "The developer of the client application should check if the JWK Set pointed to by the registered URL (the value of `jwksUri` property) contains the public key for the combination of the algorithm and the key ID."
A005344:
  code: A005344
  message: "The JWK Set pointed to by 'jwks_uri' contains multiple candidate public keys to verify the signature of the request object passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
  description: "Either or both the client application and the JWK Set pointed to by the registered URL (the value of `jwksUri` property) should be fixed so that Authlete can identify the public key to use for signature verification. For example, unique key IDs should be assigned to the candidate public keys and the client application should specify one of the key IDs in the request object as the value of `kid`."
A005345:
  code: A005345
  message: "The JWK Set pointed to by 'jwks_uri' contains multiple candidate public keys to verify the signature of the payload of the JWE passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
  description: "Either or both the client application and the JWK Set pointed to by the registered URL (the value of `jwksUri` property) should be fixed so that Authlete can identify the public key to use for signature verification. For example, unique key IDs should be assigned to the candidate public keys and the client application should specify one of the key IDs in the request object as the value of `kid`."
A005346:
  code: A005346
  message: "The JWK Set pointed to by 'jwks_uri' contains multiple candidate public keys to verify the signature of the request object pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
  description: "Either or both the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`) and the JWK Set pointed to by the registered URL (the value of `jwksUri` property) should be fixed so that Authlete can identify the public key to use for signature verification. For example, unique key IDs should be assigned to the candidate public keys and the request object should include one of the key IDs as the value of `kid`."
A005347:
  code: A005347
  message: "The JWK Set pointed to by 'jwks_uri' contains multiple candidate public keys to verify the signature of the payload of the JWE pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
  description: "Either or both the [request object](http://openid.net/specs/openid-connect-core-1_0.html#JWTRequests) pointed to by the URL (`request_uri`) and the JWK Set pointed to by the registered URL (the value of `jwksUri` property) should be fixed so that Authlete can identify the public key to use for signature verification. For example, unique key IDs should be assigned to the candidate public keys and the request object should include one of the key IDs as the value of `kid`."
A005348:
  code: A005348
  message: "Failed to parse the JWK Set of the client (ID = {Client ID}) fetched from the location pointed to by 'jwks_uri' ({URL}) as JWKSet: {Error Message}"
  description: "Check if the JWK Set is formatted correctly."
A005349:
  code: A005349
  message: "The JWK Set of the client (ID = {Client ID}) was not found in the database, unexpectedly."
  description: "This may happen while the configuration of the client application is temporarily inconsistent. Try later again."
A005350:
  code: A005350
  message: "The client (ID = {Client ID}) was not found in the database, unexpectedly."
  description: "Probably, the client application was deleted while the API call was being processed."
A005351:
  code: A005351
  message: "The client (ID = {Client ID}) has not registered its JWK Set."
  description: "The developer of the client application should register the JWK Set of the client application."
A005352:
  code: A005352
  message: "The registered JWK Set does not contain the public key to verify the signature of the request object passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
  description: "The developer of the client application should update the JWK Set (= the value of `jwks` property) to include the public key."
A005353:
  code: A005353
  message: "The registered JWK Set does not contain the public key to verify the signature of the payload of the JWE passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
  description: "The developer of the client application should update the JWK Set (= the value of `jwks` property) to include the public key."
A005354:
  code: A005354
  message: "The registered JWK Set does not contain the public key to verify the signature of the request object pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
  description: "The developer of the client application should update the JWK Set (= the value of `jwks` property) to include the public key."
A005355:
  code: A005355
  message: "The registered JWK Set does not contain the public key to verify the signature of the payload of the JWE pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
  description: "The developer of the client application should update the JWK Set (= the value of `jwks` property) to include the public key."
A005356:
  code: A005356
  message: "The registered JWK Set contains multiple candidate public keys to verify the signature of the request object passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
  description: "Either or both the client application and the registered JWK Set (the value of `jwks` property) should be fixed so that Authlete can identify the public key to use for signature verification. For example, unique key IDs should be assigned to the candidate public keys and the client application should specify one of the key IDs in the request object as the value of `kid`."
A005357:
  code: A005357
  message: "The registered JWK Set contains multiple candidate public keys to verify the signature of the payload of the JWE passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
A005358:
  code: A005358
  message: "The registered JWK Set contains multiple candidate public keys to verify the signature of the request object pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
A005359:
  code: A005359
  message: "The registered JWK Set contains multiple candidate public keys to verify the signature of the payload of the JWE pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
A005360:
  code: A005360
  message: "The JWE header of the request object passed by 'request' parameter does not contain 'alg' parameter."
A005361:
  code: A005361
  message: "The JWE header of the request object pointed to by 'request_uri' parameter does not contain 'alg' parameter."
A005362:
  code: A005362
  message: "The JWE header of the request object passed by 'request' parameter does not contain 'enc' parameter."
A005363:
  code: A005363
  message: "The JWE header of the request object pointed to by 'request_uri' parameter does not contain 'enc' parameter."
A005364:
  code: A005364
  message: "Failed to decrypt the JWE passed by 'request' parameter (alg={Algorithm}, enc={Algorithm}): {Error Message}"
A005365:
  code: A005365
  message: "Failed to decrypt the JWE pointed to by 'request_uri' parameter (alg={Algorithm}, enc={Algorithm}): {Error Message}"
A005366:
  code: A005366
  message: "The value of 'enc' in the header of the JWE passed by 'request' parameter is not supported."
A005367:
  code: A005367
  message: "The value of 'enc' in the header of the JWE pointed to by 'request_uri' parameter is not supported."
A005368:
  code: A005368
  message: "The value of 'alg' in the header of the JWE passed by 'request' parameter is not supported."
A005369:
  code: A005369
  message: "The value of 'alg' in the header of the JWE pointed to by 'request_uri' parameter is not supported."
A005370:
  code: A005370
  message: "The value of 'alg' in the header of the JWE passed by 'request' parameter is symmetric ({Algorithm}), but the client type is not confidential."
A005371:
  code: A005371
  message: "The value of 'alg' in the header of the JWE pointed to by 'request_uri' parameter is symmetric ({Algorithm}), but the client type is not confidential."
A005372:
  code: A005372
  message: "The request object passed by 'request' parameter is encrypted, but this service does not accept encrypted request objects."
A005373:
  code: A005373
  message: "The request object pointed to by 'request_uri' parameter is encrypted, but this service does not accept encrypted request objects."
A005374:
  code: A005374
  message: "The private key to decrypt the request object passed by 'request' parameter is not found. (alg={Algorithm}, kid={Key ID})"
A005375:
  code: A005375
  message: "The private key to decrypt the request object pointed to by 'request_uri' parameter is not found. (alg={Algorithm}, kid={Key ID})"
A005376:
  code: A005376
  message: "There are multiple candidate private keys to decrypt the request object passed 'request' parameter. (alg={Algorithm}, kid={Key ID})"
A005377:
  code: A005377
  message: "There are multiple candidate private keys to decrypt the request object pointed to 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
A005378:
  code: A005378
  message: "Failed to parse the request object passed by 'request' parameter as a JSON."
A005379:
  code: A005379
  message: "Failed to parse the payload of the JWE passed by 'request' parameter as a JSON. "
A005380:
  code: A005380
  message: "Failed to parse the request object pointed to by 'request_uri' parameter as a JSON."
A005381:
  code: A005381
  message: "Failed to parse the payload of the JWE pointed to by 'request_uri' parameter as a JSON."
A005382:
  code: A005382
  message: "Failed to fetch the request object of the client (ID = {Client ID}) from the location pointed to by 'request_uri' ({URL}): {Error Message}"
A005383:
  code: A005383
  message: "The request object pointed to by 'request_uri' parameter is not signed but the scheme of the URI is not https."
A005384:
  code: A005384
  message: "The value of 'request_uri' parameter is not registered: {URL}"
A005385:
  code: A005385
  message: "The client (ID = {Client ID}) has not registered the content of the request object for the request URI ({URL}) although the content is marked as hosted."
A005386:
  code: A005386
  message: "The value of 'request_uri' parameter is not registered: {URL}"
A005387:
  code: A005387
  message: "The request object passed by 'request' parameter contains 'client_id' but its value is not a string."
A005388:
  code: A005388
  message: "The payload of the JWE passed by 'request' parameter contains 'client_id' but its value is not a string."
A005389:
  code: A005389
  message: "The request object pointed to by 'request_uri' parameter contains 'client_id' but its value is not a string. "
A005390:
  code: A005390
  message: "The payload of the JWE pointed to by 'request_uri' parameter contains 'client_id' but its value is not a string."
A005391:
  code: A005391
  message: "The value of 'client_id' ({Client ID}) in the request object passed by 'request' parameter is different from the one specified by 'client_id' parameter ({Client ID})."
A005392:
  code: A005392
  message: "The value of 'client_id' ({Client ID}) in the payload of the JWE passed by 'request' parameter is different from the one specified by 'client_id' parameter ({Client ID})."
A005393:
  code: A005393
  message: "The value of 'client_id' ({Client ID}) in the request object pointed to by 'request_uri' parameter is different from the one specified by 'client_id' parameter ({Client ID})."
A005394:
  code: A005394
  message: "The value of 'client_id' ({Client ID}) in the payload of the JWE pointed to by 'request_uri' parameter is different from the one specified by 'client_id' parameter ({Client ID})."
A005395:
  code: A005395
  message: "The request object passed by 'request' parameter contains 'response_type' but its value is not a string."
A005396:
  code: A005396
  message: "The payload of the JWE passed by 'request' parameter contains 'response_type' but its value is not a string."
A005397:
  code: A005397
  message: "The request object pointed to by 'request_uri' parameter contains 'response_type' but its value is not a string. "
A005398:
  code: A005398
  message: "The payload of the JWE pointed to by 'request_uri' parameter contains 'response_type' but its value is not a string."
A005399:
  code: A005399
  message: "The value of 'response_type' ({Response Type}) in the request object passed by 'request' parameter is invalid."
A006301:
  code: A006301
  message: "The value of 'response_type' ({Response Type}) in the payload of the JWE passed by 'request' parameter is invalid."
A006302:
  code: A006302
  message: "The value of 'response_type' ({Response Type}) in the request object pointed to by 'request_uri' parameter is invalid."
A006303:
  code: A006303
  message: "The value of 'response_type' ({Response Type}) in the payload of the JWE pointed to by 'request_uri' parameter is invalid."
A006304:
  code: A006304
  message: "The value of 'response_type' ({Response Type}) in the request object passed by 'request' parameter is different from the one specified by 'response_type' parameter ({Response Type})."
A006305:
  code: A006305
  message: "The value of 'response_type' ({Response Type}) in the payload of the JWE passed by 'request' parameter is different from the one specified by 'response_type' parameter ({Response Type})."
A006306:
  code: A006306
  message: "The value of 'response_type' ({Response Type}) in the request object pointed to by 'request_uri' parameter is different from the one specified by 'response_type' parameter ({Response Type})."
A006307:
  code: A006307
  message: "The value of 'response_type' ({Response Type}) in the payload of the JWE pointed to by 'request_uri' parameter is different from the one specified by 'response_type' parameter ({Response Type})."
A006308:
  code: A006308
  message: "The request object passed by 'request' parameter contains 'request' parameter, which is not allowed."
A006309:
  code: A006309
  message: "The payload of the JWE passed by 'request' parameter contains 'request' parameter, which is not allowed."
A006310:
  code: A006310
  message: "The request object pointed to by 'request_uri' parameter contains 'request' parameter, which is not allowed. "
A006311:
  code: A006311
  message: "The payload of the JWE pointed to by 'request_uri' parameter contains 'request' parameter, which is not allowed."
A006312:
  code: A006312
  message: "The request object passed by 'request' parameter contains 'request_uri' parameter, which is not allowed."
A006313:
  code: A006313
  message: "The payload of the JWE passed by 'request' parameter contains 'request_uri' parameter, which is not allowed."
A006314:
  code: A006314
  message: "The request object pointed to by 'request_uri' parameter contains 'request_uri' parameter, which is not allowed. "
A006315:
  code: A006315
  message: "The payload of the JWE pointed to by 'request_uri' parameter contains 'request_uri' parameter, which is not allowed."
A006316:
  code: A006316
  message: "Failed to create a verifier for the symmetric algorithm ({Algorithm}) specified in the JWS header of the request object passed by 'request' parameter."
A006317:
  code: A006317
  message: "Failed to create a verifier for the symmetric algorithm ({Algorithm}) specified in the JWS header of the JWE passed by 'request' parameter."
A006318:
  code: A006318
  message: "Failed to create a verifier for the symmetric algorithm ({Algorithm}) specified in the JWS header of the request object pointed to by 'request_uri' parameter."
A006319:
  code: A006319
  message: "Failed to create a verifier for the symmetric algorithm ({Algorithm}) specified in the JWS header of the JWE pointed to by 'request_uri' parameter."
A006320:
  code: A006320
  message: "Failed to create a verifier for the elliptic curve algorithm ({Algorithm}) specified in the JWS header of the request object passed by 'request' parameter."
A006321:
  code: A006321
  message: "Failed to create a verifier for the elliptic curve algorithm ({Algorithm}) specified in the JWS header of the JWE passed by 'request' parameter."
A006322:
  code: A006322
  message: "Failed to create a verifier for the elliptic curve algorithm ({Algorithm}) specified in the JWS header of the request object pointed to by 'request_uri' parameter."
A006323:
  code: A006323
  message: "Failed to create a verifier for the elliptic curve algorithm ({Algorithm}) specified in the JWS header of the JWE pointed to by 'request_uri' parameter."
A006324:
  code: A006324
  message: "Unable to delete the request URI from the database. Error message: {Error Message}"
A006325:
  code: A006325
  message: "The request URI was locally hosted but was either expired or contained no request object content."
A006326:
  code: A006326
  message: "The request object passed by 'request' parameter does not contain 'response_type' which is required by JAR (JWT Secured Authorization Request)."
A006327:
  code: A006327
  message: "The payload of the JWE passed by 'request' parameter does not contain 'response_type' which is required by JAR (JWT Secured Authorization Request)."
A006328:
  code: A006328
  message: "The request object pointed to by 'request_uri' parameter does not contain 'response_type' which is required by JAR (JWT Secured Authorization Request)."
A006329:
  code: A006329
  message: "The payload of the JWE pointed to by 'request_uri' parameter does not contain 'response_type' which is required by JAR (JWT Secured Authorization Request)."
A006330:
  code: A006330
  message: "The JWE alg of the request object passed by the 'request' parameter does not match the 'request_object_encryption_alg' client metadata: actual={JWE alg}, required={JWE alg}"
A006331:
  code: A006331
  message: "The JWE alg of the request object referenced by the 'request_uri' parameter does not match the 'request_object_encryption_alg' client metadata: actual={JWE alg}, required={JWE alg}"
A006332:
  code: A006332
  message: "The JWE enc of the request object passed by the 'request' parameter does not match the 'request_object_encryption_enc' client metadata: actual={JWE enc}, required={JWE enc}"
A006333:
  code: A006333
  message: "The JWE enc of the request object referenced by the 'request_uri' parameter does not match the 'request_object_encryption_enc' client metadata: actual={JWE enc}, required={JWE enc}"
A006334:
  code: A006334
  message: "The request object passed through the front channel is not encrypted."
A006335:
  code: A006335
  message: "The request object passed by the 'request' parameter contains 'exp' but its value is not a number."
A006336:
  code: A006336
  message: "The payload of the JWE passed by the 'request' parameter contains 'exp' but its value is not a number."
A006337:
  code: A006337
  message: "The request object pointed to by the 'request_uri' parameter contains 'exp' but its value is not a number."
A006338:
  code: A006338
  message: "The payload of the JWE pointed to by the 'request_uri' parameter contains 'exp' but its value is not a number."
A006339:
  code: A006339
  message: "The request object passed by the 'request' parameter has already expired."
A006340:
  code: A006340
  message: "The payload of the JWE passed by the 'request' parameter has already expired."
A006341:
  code: A006341
  message: "The request object pointed to by the 'request_uri' parameter has already expired."
A006342:
  code: A006342
  message: "The payload of the JWE pointed to by the 'request_uri' parameter has already expired."
A006343:
  code: A006343
  message: "The request object passed by the 'request' parameter contains 'nbf' but its value is not a number."
A006344:
  code: A006344
  message: "The payload of the JWE passed by the 'request' parameter contains 'nbf' but its value is not a number."
A006345:
  code: A006345
  message: "The request object pointed to by the 'request_uri' parameter contains 'nbf' but its value is not a number."
A006346:
  code: A006346
  message: "The payload of the JWE pointed to by the 'request_uri' parameter contains 'nbf' but its value is not a number."
A006347:
  code: A006347
  message: "The request object passed by the 'request' parameter has not started its validity period yet."
A006348:
  code: A006348
  message: "The payload of the JWE passed by the 'request' parameter not started its validity period yet."
A006349:
  code: A006349
  message: "The request object pointed to by the 'request_uri' parameter not started its validity period yet."
A006350:
  code: A006350
  message: "The payload of the JWE pointed to by the 'request_uri' parameter not started its validity period yet."
A006351:
  code: A006351
  message: "The request object passed by the 'request' parameter contains no 'aud' claim."
A006352:
  code: A006352
  message: "The payload of the JWE passed by the 'request' parameter contains no 'aud' claim."
A006353:
  code: A006353
  message: "The request object pointed to by the 'request_uri' parameter contains no 'aud' claim."
A006354:
  code: A006354
  message: "The payload of the JWE pointed to by the 'request_uri' parameter contains no 'aud' claim."
A006355:
  code: A006355
  message: "The value of the 'aud' claim in the request object passed by the 'request' parameter is neither a string nor an array."
A006356:
  code: A006356
  message: "The value of the 'aud' claim in the payload of the JWE passed by the 'request' parameter is neither a string nor an array."
A006357:
  code: A006357
  message: "The value of the 'aud' claim in the request object pointed to by the 'request_uri' parameter is neither a string nor an array."
A006358:
  code: A006358
  message: "The value of the 'aud' claim in the payload of the JWE pointed to by the 'request_uri' parameter is neither a string nor an array."
A006359:
  code: A006359
  message: "The value of the 'aud' claim in the request object passed by the 'request' parameter does not match the issuer identifier of this service."
A006360:
  code: A006360
  message: "The value of the 'aud' claim in the payload of the JWE passed by the 'request' parameter does not match the issuer identifier of this service."
A006361:
  code: A006361
  message: "The value of the 'aud' claim in the request object pointed to by the 'request_uri' parameter does not match the issuer identifier of this service."
A006362:
  code: A006362
  message: "The value of the 'aud' claim in the payload of the JWE pointed to by the 'request_uri' parameter does not match the issuer identifier of this service."
A006363:
  code: A006363
  message: "None of the element in the 'aud' claim in the request object passed by the 'request' parameter match the issuer identifier of this service."
A006364:
  code: A006364
  message: "None of the element in the 'aud' claim in the payload of the JWE passed by the 'request' parameter match the issuer identifier of this service."
A006365:
  code: A006365
  message: "None of the element in the 'aud' claim in the request object pointed to by the 'request_uri' parameter match the issuer identifier of this service."
A006366:
  code: A006366
  message: "None of the element in the 'aud' claim in the payload of the JWE pointed to by the 'request_uri' parameter match the issuer identifier of this service."
A007101:
  code: A007101
  message: "Failed to get the list of pre-defined scopes from 'scope' table."
A007102:
  code: A007102
  message: "Failed to get the list of scope attributes from 'scope_attributes' table."
A007301:
  code: A007301
  message: "The value of 'scope' parameter in the request object is not a string."
A007302:
  code: A007302
  message: "The authorization request contains multiple 'scope' parameters."
A007303:
  code: A007303
  message: "The value of 'scope' in the request object contains 'openid' but the authorization request does not have 'scope' parameter."
A007304:
  code: A007304
  message: "The value of 'scope' in the request object contains 'openid' but the authorization request parameter 'scope' does not contain 'openid'."
A007305:
  code: A007305
  message: "The authorization request has no 'scope' parameter or none of the given scopes is recognized as valid, and the service's default scope set is empty. The service's configuration does not allow requests that request no scope."
A008101:
  code: A008101
  message: "Failed to get the list of registered request URIs from 'request_uri' table."
A008301:
  code: A008301
  message: "The authorization request contains multiple 'request' parameters."
A008302:
  code: A008302
  message: "The authorization request contains multiple 'request_uri' parameters."
A008303:
  code: A008303
  message: "The value of 'request_uri' parameter is not registered."
A008304:
  code: A008304
  message: "The authorization request contains both 'request' parameter and 'request_uri' parameter."
A008305:
  code: A008305
  message: "The 'request_uri' parameter must be given because the 'require_pushed_authorization_requests' client metadata is true."
A008306:
  code: A008306
  message: "The 'request_uri' parameter must be given because the 'require_pushed_authorization_requests' server metadata is true."
A008307:
  code: A008307
  message: "The value of 'request_uri' parameter must be a request URI issued from the pushed authorization request endpoint because the 'require_pushed_authorization_requests' client metadata is true."
A008308:
  code: A008308
  message: "The value of 'request_uri' parameter must be a request URI issued from the pushed authorization request endpoint because the 'require_pushed_authorization_requests' server metadata is true."
A008309:
  code: A008309
  message: "The configuration of the client requires that authorization requests from the client always utilize a request object, but the authorization request does not conform to the requirement."
A008310:
  code: A008310
  message: "The configuration of the service requires that authorization requests to the service always utilize a request object, but the authorization request does not conform to the requirement."
A008311:
  code: A008311
  message: "The service is configured to conform to JAR (JWT Secured Authorization Request), so request objects must be always signed."
A009301:
  code: A009301
  message: "The authorization request does not contain 'response_type' parameter."
A009302:
  code: A009302
  message: "The value of 'response_type' parameter contained in the authorization request is empty."
A009303:
  code: A009303
  message: "The authorization request contains multiple 'response_type' parameters."
A009304:
  code: A009304
  message: "The value of 'response_type' parameter contained in the authorization request is invalid."
A009305:
  code: A009305
  message: "The response type '{Response Type}' is not supported by this service."
A009306:
  code: A009306
  message: "The client (ID = {Client ID}) does not declare it uses the response type '{Response Type}'."
A009307:
  code: A009307
  message: "'response_type' in the request object does not match the value of 'response_type' request parameter outside the request object."
A009308:
  code: A009308
  message: "The value of 'response_type' (%s) in the request object is different from the one specified by 'response_type' parameter (%s)."
A010101:
  code: A010101
  message: "Failed to get the client information from 'client' table."
A010102:
  code: A010102
  message: "Failed to get the client information by a client ID alias."
A010301:
  code: A010301
  message: "The authorization request does not contain 'client_id' parameter."
A010302:
  code: A010302
  message: "The value of 'client_id' parameter contained in the authorization request is empty."
A010303:
  code: A010303
  message: "The authorization request contains multiple 'client_id' parameters."
A010304:
  code: A010304
  message: "No client has the client ID ({Client ID})."
A010305:
  code: A010305
  message: "The client (ID = {Client ID}) does not belong to this service."
A010306:
  code: A010306
  message: "The client (ID = {Client ID}) has been deleted."
A010307:
  code: A010307
  message: "The client (ID = {Client ID}) is locked."
A010308:
  code: A010308
  message: "No client has the client ID ({Client ID}) or the client ID alias."
A010309:
  code: A010309
  message: "The client ID alias ({Client ID Alias}) of the client is not enabled."
A011101:
  code: A011101
  message: "Failed to get the list of registered redirect URIs from 'redirect_uri' table."
A011301:
  code: A011301
  message: "The value of 'redirect_uri' in the request object is not a string."
A011302:
  code: A011302
  message: "The authorization request contains multiple 'redirect_uri' parameters."
A011303:
  code: A011303
  message: "'redirect_uri' parameter must be explicitly specified when 'scope' parameter contains 'openid'."
A011304:
  code: A011304
  message: "The value of 'redirect_uri' ({URL}) is not registered."
A011305:
  code: A011305
  message: "The scheme of the redirect URI must be 'https' when 'response_type' of an authorization request from a 'web' client contains either 'token' or 'id_token'."
A011306:
  code: A011306
  message: "The host of the redirect URI must not be 'localhost' when 'response_type' of an authorization request from a 'web' client contains either 'token' or 'id_token'."
A011307:
  code: A011307
  message: "The scheme of the redirect URI must not be 'https' when the client's application type is 'native'."
A011308:
  code: A011308
  message: "The host of the redirect URI must be 'localhost' when the client's application type is 'native' and the scheme of the redirect URI is 'http'."
A011309:
  code: A011309
  message: "The client has not registered any redirect URI."
A011310:
  code: A011310
  message: "The client type is 'public', but the client has not registered any redirect URI."
A011311:
  code: A011311
  message: "An authorization request whose response_type contains either 'token' or 'id_token' requires the client to register at least one redirect URI even if the client type is 'confidential'."
A011312:
  code: A011312
  message: "'redirect_uri' parameter must be contained when a 'confidential' client that has not registered any redirect URI makes an authorization request of the authorization code grant type."
A011313:
  code: A011313
  message: "'redirect_uri' parameter must be contained when a client that has registered multiple redirect URIs makes an authorization request."
A011314:
  code: A011314
  message: "The value of 'redirect_uri' contained in the authorization request is not well-formed."
A011315:
  code: A011315
  message: "The value of 'redirect_uri' contained in the authorization request is not absolute."
A011316:
  code: A011316
  message: "The value of 'redirect_uri' contained in the authorization request has a fragment component."
A011317:
  code: A011317
  message: "The value of 'redirect_uri' ({URL}) is not registered."
A011318:
  code: A011318
  message: "The authorization request does not contain 'redirect_uri' parameter."
A011319:
  code: A011319
  message: "The value of 'redirect_uri' parameter contained in the authorization request is empty."
A012301:
  code: A012301
  message: "The value of 'response_mode' in the request object is not a string."
A012302:
  code: A012302
  message: "The authorization request contains multiple 'response_mode' parameters."
A012303:
  code: A012303
  message: "The value of 'response_mode' is not supported."
A012304:
  code: A012304
  message: "'response_mode=query' is not allowed when 'response_type' is '{Response Type}'."
A012305:
  code: A012305
  message: "The authorization request required the authorization response be encoded as JWT by specifying 'response_mode={Response Mode}', but the 'authorization_signed_response_alg' metadata of the client (ID = {Client ID}) is not set."
A012306:
  code: A012306
  message: "The authorization request required the authorization response be encoded as JWT by specifying 'response_mode={Response Mode}', but the 'authorization_signed_response_alg' metadata of the client (ID = {Client ID}) is 'none'. Change the registered value of the metadata."
A012307:
  code: A012307
  message: "The authorization request required the authorization response be encoded as JWT by specifying 'response_mode={Response Mode}', but the 'authorization_signed_response_alg' metadata of the client (ID = {Client ID}) is a symmetric algorithm ('{Algorithm}'). Change the algorithm to an asymmetric one or change the client type to 'confidential'."
A012308:
  code: A012308
  message: "The authorization request required the authorization response be encoded as JWT by specifying 'response_mode={Response Mode}', but the 'authorization_encrypted_response_alg' metadata of the client (ID = {Client ID}) is a symmetric algorithm ('{Algorithm}'). Change the algorithm to an asymmetric one or change the client type to 'confidential'."
A012309:
  code: A012309
  message: "For the response type ('{Response Type}'), the response mode ('{Response Mode}') is allowed only when the authorization response JWT is encrypted. Set the value of the 'authorization_encrypted_response_alg' metadata of the client (ID = {Client ID})."
A013301:
  code: A013301
  message: "The value of 'state' in the request object is not a string."
A013302:
  code: A013302
  message: "The authorization request contains multiple 'state' parameters."
A013303:
  code: A013303
  message: "The value of 'state' contains non-ASCII letters."
A013304:
  code: A013304
  message: "The length of 'state' exceeds the maximum length ({Number})."
A014301:
  code: A014301
  message: "The value of 'nonce' in the request object is not a string."
A014302:
  code: A014302
  message: "The authorization request contains multiple 'nonce' parameters."
A014303:
  code: A014303
  message: "'nonce' is required when 'response_type' contains 'id_token'."
A014304:
  code: A014304
  message: "The value of 'nonce' contains non-ASCII letters."
A014305:
  code: A014305
  message: "The length of 'nonce' exceeds the maximum length ({Number})."
A015301:
  code: A015301
  message: "The value of 'display' in the request object is not a string."
A015302:
  code: A015302
  message: "The authorization request contains multiple 'display' parameters."
A015303:
  code: A015303
  message: "The value of 'display' is not supported."
A015304:
  code: A015304
  message: "The authorization request does not contain 'display' parameter but the default value 'page' is not supported by this service."
A015305:
  code: A015305
  message: "This service does not support the specified value of 'display'."
A016301:
  code: A016301
  message: "The value of 'prompt' in the request object is not a string."
A016302:
  code: A016302
  message: "The authorization request contains multiple 'prompt' parameters."
A016303:
  code: A016303
  message: "The value of 'prompt' contains an invalid element."
A016304:
  code: A016304
  message: "When 'none' is included, the 'prompt' request parameter must not include any other value."
A017301:
  code: A017301
  message: "The value of 'max_age' in the request object is not a number."
A017302:
  code: A017302
  message: "The authorization request contains multiple 'max_age' parameters."
A017303:
  code: A017303
  message: "The value of 'max_age' failed to be parsed as a number."
A017304:
  code: A017304
  message: "The value of 'max_age' is not an integer."
A017305:
  code: A017305
  message: "The value of 'max_age' is out of the range of 'int'."
A018101:
  code: A018101
  message: "Failed to get the list of supported UI locales of the service from 'ui_locale' table."
A018301:
  code: A018301
  message: "The value of 'ui_locales' in the request object is not a string."
A018302:
  code: A018302
  message: "The authorization request contains multiple 'ui_locales' parameters."
A019101:
  code: A019101
  message: "Failed to insert a new record into the 'authorization_ticket' table."
A020101:
  code: A020101
  message: "Failed to get the list of supported claim locales of the service from 'claim_locale' table."
A020301:
  code: A020301
  message: "The value of 'claims_locales' in the request object is not a string."
A020302:
  code: A020302
  message: "The authorization request contains multiple 'claims_locales' parameters."
A021101:
  code: A021101
  message: "Failed to get the list of the default ACRs of the client from 'default_acr' table."
A021102:
  code: A021102
  message: "Failed to get the list of supported ACRs of the service from 'acr' table."
A021301:
  code: A021301
  message: "The value of 'acr_values' in the request object is not a string."
A021302:
  code: A021302
  message: "The authorization request contains multiple 'acr_values' parameters."
A021303:
  code: A021303
  message: "ACR values cannot be specified by any means ('claim', 'acr_values' or 'default_acr_values') because this service supports no ACR value."
A021304:
  code: A021304
  message: "The ACR value '{ACR}' is not supported by this service."
A022301:
  code: A022301
  message: "The value of 'claims' in the request object is not a JSON object."
A022302:
  code: A022302
  message: "The authorization request contains multiple 'claims' parameters."
A022303:
  code: A022303
  message: "The value of 'claims' parameter in the authorization request is not a JSON object."
A022304:
  code: A022304
  message: "The value of 'userinfo' in 'claims' is not a JSON object."
A022305:
  code: A022305
  message: "The value of 'id_token' in 'claims' is not a JSON object."
A022306:
  code: A022306
  message: "The structure of '{Context}/verified_claims' in the 'claims' request parameter is wrong: {Error Message}"
A022307:
  code: A022307
  message: "'{Context}/verified_claims' in the 'claims' request parameter is invalid: {Error Message}"
A023301:
  code: A023301
  message: "The value of '{Property Name}' in 'claims' is not a JSON object."
A023302:
  code: A023302
  message: "The value of 'essential' of '{Property Name}' in 'claims' is not a boolean value."
A023303:
  code: A023303
  message: "The value of 'value' of '{Property Name}' in 'claims' cannot be cast to {Type}."
A023304:
  code: A023304
  message: "The value of 'values' of '{Property Name}' in 'claims' is not an array."
A023305:
  code: A023305
  message: "The value of 'values' of '{Property Name}' in 'claims' contains an element which cannot be cast to {Type}."
A023306:
  code: A023306
  message: "The request parameter '{Request Parameter Name}' is included in the request more than once."
A024301:
  code: A024301
  message: "The claim '{Claim Name}' for '{Context}' cannot be requested by 'claims' parameter when the value of 'prompt' is 'none'."
A024302:
  code: A024302
  message: "The scope '{Scope Name}' results in requesting some claims but it is not allowed when the value of 'prompt' is 'none'."
A025101:
  code: A025101
  message: "Failed to create a client of the service (API Key = {Service's API Key})."
A026001:
  code: A026001
  message: "The client (ID = {Client ID}) was deleted successfully."
A026101:
  code: A026101
  message: "Failed to delete the client (ID = {Client ID})."
A026201:
  code: A026201
  message: "The client (ID = {Client ID}) does not exist."
A026202:
  code: A026202
  message: "The client (ID = {Client ID}) does not belong to the service."
A026203:
  code: A026203
  message: "The client ({Client Identifier}) has already been deleted."
A026204:
  code: A026204
  message: "The client ({Client Identifier}) is locked."
A027201:
  code: A027201
  message: "The client (ID = {Client ID}) does not exist."
A027202:
  code: A027202
  message: "The client (ID = {Client ID}) does not belong to the service."
A027203:
  code: A027203
  message: "The client ({Client Identifier}) has been deleted."
A027204:
  code: A027204
  message: "The client ({Client Identifier}) is locked."
A028201:
  code: A028201
  message: "Parameter 'start' failed to be parsed as int."
A028202:
  code: A028202
  message: "Parameter 'start' must not be negative."
A028203:
  code: A028203
  message: "Parameter 'end' failed to be parsed as int."
A028204:
  code: A028204
  message: "Parameter 'end' must not be negative."
A029101:
  code: A029101
  message: "Failed to update the client (ID = {Client ID})."
A029201:
  code: A029201
  message: "The client (ID = {Client ID}) does not exist."
A029202:
  code: A029202
  message: "The client (ID = {Client ID}) does not belong to the service."
A029203:
  code: A029203
  message: "The client ({Client Identifier}) has been deleted."
A029204:
  code: A029204
  message: "The client ({Client Identifier}) is locked."
A030201:
  code: A030201
  message: "The client (ID = {Client ID}) does not exist."
A030202:
  code: A030202
  message: "The client (ID = {Client ID}) has been deleted."
A030203:
  code: A030203
  message: "The client (ID = {Client ID}) is locked."
A030601:
  code: A030601
  message: "Cannot update the client because the client ID alias is already in use. Client ID aliases must be unique in the same service."
A030602:
  code: A030602
  message: "The size of 'customMetadata' is too big."
A031201:
  code: A031201
  message: "{API Path}, '{Value}' is not supported as a value for '{Key}'."
A031202:
  code: A031202
  message: "{API Path}, '{Key}' is unspecified, empty or invalid."
A031203:
  code: A031203
  message: "{API Path}, '{Key}' must consist of only printable ASCII letters."
A031204:
  code: A031204
  message: "{API Path}, The length of '{Key}' must not exceed {Number} letters."
A031205:
  code: A031205
  message: "{API Path}, The element at the index '{Number}' of '{Key}' is null."
A031206:
  code: A031206
  message: "{API Path}, The element at the index '{Number}' of '{Key}' contains non-ASCII letters."
A031207:
  code: A031207
  message: "{API Path}, The length of the element at the index '{Number}' of '{Key}' must not exceed {Number} letters."
A031208:
  code: A031208
  message: "{API Path}, The element at the index '{Number}' of '{Key}' is not a well-formed URI."
A031209:
  code: A031209
  message: "{API Path}, The element at the index '{Number}' of '{Key}' is not an absolute URI."
A031210:
  code: A031210
  message: "{API Path}, The element at the index '{Number}' of '{Key}' has a fragment component."
A031211:
  code: A031211
  message: "{API Path}, The element at the index '{Number}' of '{Key}' is a duplicate."
A031212:
  code: A031212
  message: "{API Path}, The value of '{Key}' failed to be parsed as a JWK Set."
A031213:
  code: A031213
  message: "{API Path}, '{Key}' must not be negative."
A031214:
  code: A031214
  message: "{API Path}, '{Key}' is unspecified or invalid."
A031215:
  code: A031215
  message: "{API Path}, The JWK Set specified by '{Key}' is too big."
A031216:
  code: A031216
  message: "{API Path}, The JWK Set specified by '{Key}' contains non-ASCII letters."
A031217:
  code: A031217
  message: "{API Path}, The '{Key}' URI has a fragment component."
A031218:
  code: A031218
  message: "{API Path}, The '{Key}' URI has a query component."
A031219:
  code: A031219
  message: "{API Path}, The scheme of the '{Key}' URI is not https."
A031220:
  code: A031220
  message: "{API Path}, The number of entries for '{Key}' must not exceed {Number}."
A031221:
  code: A031221
  message: "{API Path}, The value ({Number}) of '{Key}' is not in the range between {Number} and {Number}."
A031222:
  code: A031222
  message: "{API Path}, '{Algorithm}' is given as the value of '{Key}', but the algorithm is not asymmetric."
A031223:
  code: A031223
  message: "{API Path}, The value of '{Key}' is not a valid X.500 distinguished name."
A031224:
  code: A031224
  message: "{API Path}, The '{Field Name}' of the element at the index '%d' of '{Index}' is a duplicate."
A031225:
  code: A031225
  message: "{API Path}, The '{Field Name}' of the element at the index '%d' of '{Index}' is null or empty."
A031226:
  code: A031226
  message: "{API Path}, The '{Field Name}' of the element at the index '%d' of '{Index}' contains non-ASCII letters."
A031227:
  code: A031227
  message: "{API Path}, The length of '{Field Name}' of the element at the index '%d' of '{Index}' must not exceed %d letters."
A031228:
  code: A031228
  message: "{API Path}, The '{Field Name}' of the element at the index '{Index}' of '{Property Name}' is null."
A031229:
  code: A031229
  message: "{API Path}, The scheme part of the '{Field Name}' of the element at the index '{Index}' of '{Property Name}' is not https."
A031230:
  code: A031230
  message: "{API Path}, The list of '{Field Name}' is too long."
A031231:
  code: A031231
  message: "{API Path}, The element at the index '{Number}' of '{Key}' is null or empty."
A031232:
  code: A031232
  message: "%s, The element at the index '%d' of '%s' does not match the allowed pattern."
A032201:
  code: A032201
  message: "{API Path}, The tag of the tagged-value at the index '{Number}' of '{Key}' is empty."
A032202:
  code: A032202
  message: "{API Path}, The value of the tagged-value at the index '{Number}' of '{Key}' is empty."
A032203:
  code: A032203
  message: "{API Path}, The tag of the tagged-value at the index '{Number}' of '{Key}' is a duplicate."
A032204:
  code: A032204
  message: "{API Path}, The value of the tagged-value at the index '{Number}' of '{Key}' is not a well-formed URI."
A032205:
  code: A032205
  message: "{API Path}, The length of the tag of the tagged-value at the index '{Number}' of '{Key}' exceeds the maximum length ({Number})."
A032206:
  code: A032206
  message: "{API Path}, The tag of the tagged-value at the index '{Number}' of '{Key}' contains non-ASCII letters."
A032207:
  code: A032207
  message: "{API Path}, The length of the value of the tagged-value at the index '{Number}' of '{Key}' exceeds the maximum length ({Number})."
A032208:
  code: A032208
  message: "{API Path}, The value of the tagged-value at the index '{Number}' of '{Key}' contains non-ASCII letters."
A032209:
  code: A032209
  message: "{API Path}, The request is empty."
A032210:
  code: A032210
  message: "{API Path}, The scheme of Sector Identifier URI must be 'https'."
A032211:
  code: A032211
  message: "{API Path}, idTokenEncryptionAlg is null although idTokenEncryptionEnc is not null."
A032212:
  code: A032212
  message: "{API Path}, userInfoEncryptionAlg is null although userInfoEncryptionEnc is not null."
A032213:
  code: A032213
  message: "{API Path}, requestEncryptionAlg is null although requestEncryptionEnc is not null."
A032214:
  code: A032214
  message: "{API Path}, authorizationEncryptionAlg is null although authorizationEncryptionEnc is not null."
A032215:
  code: A032215
  message: "{API Path}, bcNotificationEndpoint must not be null when bcDeliveryMode is PING or PUSH."
A032216:
  code: A032216
  message: "{API Path}, Must not have multiple certificate subject types."
A032217:
  code: A032217
  message: "{API Path}, When using TLS_CLIENT_AUTH, a certificate subject type must be set."
A032218:
  code: A032218
  message: "{API Path}, The client's subject DN is not in the correct format."
A032219:
  code: A032219
  message: "{API Path}, The sector identifier URI did not resolve to a valid JSON document."
A032220:
  code: A032220
  message: "{API Path}, The sector identifier did not include one or more of the requested redirect URIs."
A032221:
  code: A032221
  message: "{API Path}, The 'pairwise' subject type must be used with a 'sector_identifier_uri' or a single host in 'redirect_uris'."
A032222:
  code: A032222
  message: "{API Path}, The size of 'attributes' is too big."
A032223:
  code: A032223
  message: "{API Path}, The format of 'customMetadata' is wrong."
A033101:
  code: A033101
  message: "Failed to create a service of the service owner (API Key = {Service Owner's API Key})."
A034001:
  code: A034001
  message: "The service (API Key = {Service's API Key}) was deleted successfully."
A034101:
  code: A034101
  message: "Failed to delete the service (API Key = {Service's API Key})."
A034201:
  code: A034201
  message: "The service (API Key = {Service's API Key}) does not exist."
A034202:
  code: A034202
  message: "The service (API Key = {Service's API Key}) does not belong to the service owner."
A034203:
  code: A034203
  message: "The service (API Key = {Service's API Key}) has already been deleted."
A034204:
  code: A034204
  message: "The service (API Key = {Service's API Key}) is locked."
A035201:
  code: A035201
  message: "The service (API Key = {Service's API Key}) does not exist."
A035202:
  code: A035202
  message: "The service (API Key = {Service's API Key}) does not belong to the service owner."
A035203:
  code: A035203
  message: "The service (API Key = {Service's API Key}) has been deleted."
A035204:
  code: A035204
  message: "The service (API Key = {Service's API Key}) is locked."
A036201:
  code: A036201
  message: "Parameter 'start' failed to be parsed as int."
A036202:
  code: A036202
  message: "Parameter 'start' must not be negative."
A036203:
  code: A036203
  message: "Parameter 'end' failed to be parsed as int."
A036204:
  code: A036204
  message: "Parameter 'end' must not be negative."
A037101:
  code: A037101
  message: "Failed to update the service (API Key = {Service's API Key})."
A037201:
  code: A037201
  message: "The service (API Key = {Service's API Key}) does not exist."
A037202:
  code: A037202
  message: "The service (API Key = {Service's API Key}) does not belong to the service owner."
A037203:
  code: A037203
  message: "The service (API Key = {Service's API Key}) has been deleted."
A037204:
  code: A037204
  message: "The service (API Key = {Service's API Key}) is locked."
A038201:
  code: A038201
  message: "The service (API Key = {Service's API Key}) does not exist."
A038202:
  code: A038202
  message: "The service (API Key = {Service's API Key}) has been deleted."
A038203:
  code: A038203
  message: "The service (API Key = {Service's API Key}) is locked."
A039201:
  code: A039201
  message: "{API Path}, The request is empty."
A039202:
  code: A039202
  message: "{API Path}, 'supportedResponseTypes' must be specified."
A039203:
  code: A039203
  message: "{API Path}, The scope name of the element at the index '{Number}' of 'supportedScopes' is a duplicate."
A039204:
  code: A039204
  message: "{API Path}, The scope name of the element at the index '{Number}' of 'supportedScopes' is not specified."
A039205:
  code: A039205
  message: "{API Path}, The scope name of the element at the index '{Number}' of 'supportedScopes' exceeds the maximum length ({Number})."
A039206:
  code: A039206
  message: "{API Path}, The scope name of the element at the index '{Number}' of 'supportedScopes' contains a bad letter at the index '{Number}'."
A039207:
  code: A039207
  message: "{API Path}, The scope description of the element at the index '{Number}' of 'supportedScopes' exceeds the maximum length ({Number})."
A039208:
  code: A039208
  message: "{API Path}, The scope name ('{Scope Name}') of the element at the index '{Number}' of 'supportedScopes' is reserved."
A039209:
  code: A039209
  message: "{API Path}, The SNS of the element at the index '{Number}' of '{Key}' is a duplicate."
A039210:
  code: A039210
  message: "{API Path}, The SNS of the element at the index '{Number}' of '{Key}' is not supported."
A039211:
  code: A039211
  message: "{API Path}, The API key of the element at the index '{Number}' of '{Key}' is not specified."
A039212:
  code: A039212
  message: "{API Path}, The API key of the element at the index '{Number}' of '{Key}' exceeds the maximum length ({Number})."
A039213:
  code: A039213
  message: "{API Path}, The API key of the element at the index '{Number}' of '{Key}' contains a non-ASCII letter."
A039214:
  code: A039214
  message: "{API Path}, The API secret of the element at the index '{Number}' of '{Key}' exceeds the maximum length ({Number})."
A039215:
  code: A039215
  message: "{API Path}, The API secret of the element at the index '{Number}' of '{Key}' contains a non-ASCII letter."
A039216:
  code: A039216
  message: "{API Path}, descriptions[{Index}] of the scope '{Scope Name}' (supportedScopes[{Index}]) is empty."
A039217:
  code: A039217
  message: "{API Path}, descriptions[{Index}].tag of the scope '{Scope Name}' (supportedScopes[{Index}]) is empty."
A039218:
  code: A039218
  message: "{API Path}, The value '{Value}' of descriptions[{Index}].tag of the scope '{Scope Name}' (supportedScopes[{Index}]) is a duplicate."
A039219:
  code: A039219
  message: "{API Path}, The length of descriptions[{Index}].tag of the scope '{Scope Name}' (supportedScopes[{Index}]) exceeds the maximum length ({Number})."
A039220:
  code: A039220
  message: "{API Path}, descriptions[{Index}].tag of the scope '{Scope Name}' (supportedScopes[{Index}]) contains a non-ASCII letter."
A039221:
  code: A039221
  message: "{API Path}, descriptions[{Index}].value of the scope '{Scope Name}' (supportedScopes[{Index}]) is empty."
A039222:
  code: A039222
  message: "{API Path}, The length of descriptions[{Index}].value of the scope '{Scope Name}' (supportedScopes[{Index}]) exceeds the maximum length ({Number})."
A039223:
  code: A039223
  message: "{API Path}, attributes[{Index}] of the scope '{Scope Name}' (supportedScopes[{Index}]) is empty."
A039224:
  code: A039224
  message: "{API Path}, attributes[{Index}].key of the scope '{Scope Name}' (supportedScopes[{Index}]) is empty."
A039225:
  code: A039225
  message: "{API Path}, The length of attributes[{Index}].key of the scope '{Scope Name}' (supportedScopes[{Index}]) exceeds the maximum length ({Number})."
A039226:
  code: A039226
  message: "{API Path}, attributes[{Index}].key of the scope '{Scope Name}' (supportedScopes[{Index}]) contains a non-ASCII letter."
A039227:
  code: A039227
  message: "{API Path}, attributes[{Index}].value of the scope '{Scope Name}' (supportedScopes[{Index}]) is empty."
A039228:
  code: A039228
  message: "{API Path}, The length of attributes[{Index}].value of the scope '{Scope Name}' (supportedScopes[{Index}]) exceeds the maximum length ({Number})."
A039229:
  code: A039229
  message: "{API Path}, The value '{Value}' of attributes[{Index}].key of the scope '{Scope Name}' (supportedScopes[{Index}]) is a duplicate."
A039230:
  code: A039230
  message: "{API Path}, The value '{Value}' (trustedRootCertificates[{Index}]) is not a valid X509 certificate in PEM format."
A039231:
  code: A039231
  message: "{API Path}, The size of 'attributes' is too big."
A039232:
  code: A039232
  message: "{API Path}, The value '{Value}' (supportedCustomClientMetadata[%d]) is reserved."
A040001:
  code: A040001
  message: "The authorization request was processed successfully."
A041201:
  code: A041201
  message: "The value of 'ticket' in the /api/auth/authorization/issue request is null or empty."
A041202:
  code: A041202
  message: "There is no entity having the ticket specified in the /api/auth/authorization/issue request (ticket = {Ticket})."
A041203:
  code: A041203
  message: "The ticket in the /api/auth/authorization/issue request does not belong to the service."
A041301:
  code: A041301
  message: "The ticket in the /api/auth/authorization/issue request has expired."
A042201:
  code: A042201
  message: "The value of 'subject' in the /api/auth/authorization/issue request is null or empty."
A042202:
  code: A042202
  message: "The length of 'subject' in the /api/auth/authorization/issue request exceeds the maximum length ({Number})."
A042203:
  code: A042203
  message: "The 'subject' in the /api/auth/authorization/issue request contains non-ASCII letters."
A043201:
  code: A043201
  message: "The length of 'acr' in the /api/auth/authorization/issue request exceeds the maximum length ({Number})."
A044201:
  code: A044201
  message: "The value of 'claims' in the /api/auth/authorization/issue request failed to be parsed as a JSON object."
A044202:
  code: A044202
  message: "'verified_claims' in the 'claims' request parameter is invalid: {Error Message}"
A045101:
  code: A045101
  message: "Failed to issue a code and/or token(s) from /api/auth/authorization/issue endpoint."
A045102:
  code: A045102
  message: "The hash algorithm '{Algorithm}' is not supported."
A045201:
  code: A045201
  message: "The total size of 'properties' is too big."
A045202:
  code: A045202
  message: "Failed to generate a JWT-based access token: {Error Message}"
A045203:
  code: A045203
  message: "The total size of 'idtHeaderParams' is too big."
A045301:
  code: A045301
  message: "The client application (ID = {Client ID}) has been deleted, so '{Claim Name}' for the ID token cannot be calculated."
A045302:
  code: A045302
  message: "The algorithm to sign ID tokens must not be 'none' if the client application (ID = {Client ID}) wants to get ID tokens."
A045303:
  code: A045303
  message: "The client application (ID = {Client ID}) has been deleted, so the ID token cannot be serialized."
A045304:
  code: A045304
  message: "The ticket for token issuance was consumed by another transaction, so tokens are not issued."
A046101:
  code: A046101
  message: "Failed to sign the ID token with the algorithm '{Algorithm}'."
A046102:
  code: A046102
  message: "The algorithm ('{Algorithm}') to sign the ID token is not supported."
A046103:
  code: A046103
  message: "Failed to put the JWK Set of the client application (ID = {Client ID}) into 'client_jwks' table."
A046104:
  code: A046104
  message: "The key type '{Key Type}' cannot have a public key."
A046105:
  code: A046105
  message: "Failed to convert a JWK to a PublicKey."
A046106:
  code: A046106
  message: "The key type '{Key Type}' cannot have a private key."
A046107:
  code: A046107
  message: "Failed to convert a JWK to a PrivateKey."
A046108:
  code: A046108
  message: "Failed to encrypt the ID token with alg='{Algorithm}' and enc='{Algorithm}'."
A046109:
  code: A046109
  message: "The algorithm ('{Algorithm}') to encrypt the ID token is not supported."
A046110:
  code: A046110
  message: "Failed to create an encrypter to encrypt the ID token due to the unexpected key length. (client_id={Client ID}, alg={Algorithm}, enc={Algorithm}, expected key length={Number})"
A046111:
  code: A046111
  message: "Failed to create an encrypter to encrypt the ID token. (client_id={Client ID}, alg={Algorithm}, enc={Algorithm})"
A046112:
  code: A046112
  message: "The JWK Set of the service is marked as hosted but not found in 'service_jwks' table."
A046113:
  code: A046113
  message: "The length of the secret key to sign the ID token with the algorithm ('{Algorithm}') is shorter than the minimum 256-bit requirement."
A046114:
  code: A046114
  message: "The elliptic curve of the private key is not supported: algorithm = {Algorithm}"
A046115:
  code: A046115
  message: "An error occurred while hardware-secured keys of the service ({Service API Key}) were checked."
A046201:
  code: A046201
  message: "The ID token cannot be signed because this service has not registered its JWK Set although asymmetric algorithm ('{Algorithm}') is required for signing."
A046202:
  code: A046202
  message: "The ID token cannot be signed because this service has not registered its JWK Set although asymmetric algorithm ('{Algorithm}') is required for signing."
A046203:
  code: A046203
  message: "The registered JWK Set of this service does not contain the private key to sign the ID token. (alg={Algorithm}, kid={Key ID})"
A046204:
  code: A046204
  message: "The registered JWK Set of this service contains multiple candidate private keys to sign the ID token. (alg={Algorithm}, kid={Key ID})"
A046301:
  code: A046301
  message: "The algorithm to sign ID tokens must not be 'none' if the client application (ID = {Client ID}) wants to get ID tokens."
A046302:
  code: A046302
  message: "The algorithm ('{Algorithm}' for 'id_token_encrypted_response_alg') to encrypt the ID token is not supported."
A046303:
  code: A046303
  message: "The ID token cannot be encrypted because the client application (ID = {Client ID}) has registered neither 'jwks_uri' nor 'jwks'."
A046304:
  code: A046304
  message: "Failed to fetch the JWK Set of the client application (ID = {Client ID}) from the location pointed to by 'jwks_uri' ({URL})."
A046305:
  code: A046305
  message: "Failed to parse the JWK Set of the client application (ID = {Client ID}) fetched from the location pointed to by 'jwks_uri' ({URL}) as JWKSet."
A046306:
  code: A046306
  message: "The client application (ID = {Client ID}) was not found in the database, unexpectedly."
A046307:
  code: A046307
  message: "The client application (ID = {Client ID}) has not registered its JWK Set."
A046308:
  code: A046308
  message: "The JWK Set of the client application (ID = {Client ID}) was not found in the database, unexpectedly."
A046309:
  code: A046309
  message: "The registered JWK Set of the client application (ID = {Client ID}) does not contain the public key to encrypt the ID token. (alg={Algorithm}, kid={Key ID})"
A046310:
  code: A046310
  message: "The JWK Set of the client application (ID = {Client ID}) pointed to by 'jwks_uri' ({URL}) does not contain the public key to encrypt the ID token. (alg={Algorithm}, kid={Key ID})"
A046311:
  code: A046311
  message: "The registered JWK Set of the client application (ID = {Client ID}) contains multiple candidate public keys to encrypt the ID token. (alg={Algorithm}, kid={Key ID})"
A046312:
  code: A046312
  message: "The JWK Set of the client application (ID = {Client ID}) pointed to by 'jwks_uri' ({URL}) contains multiple candidate public keys to encrypt the ID token. (alg={Algorithm}, kid={Key ID})"
A046313:
  code: A046313
  message: "The algorithm to encrypt the ID token ('id_token_encrypted_response_alg') is symmetric ({Algorithm}), but the client type of the client (ID = {Client ID}) is not 'confidential'."
A046314:
  code: A046314
  message: "The algorithm ('{Algorithm}' for 'userinfo_token_encrypted_response_alg') to encrypt the ID token is not supported."
A047101:
  code: A047101
  message: "The grant type ({Grant Type}) is not supported. Consult the administrator of this authorization server."
A047201:
  code: A047201
  message: "The token request from the service does not contain 'parameters' parameter."
A047202:
  code: A047202
  message: "The format of the value of 'parameters' request parameter is wrong."
A047301:
  code: A047301
  message: "The token request does not contain any request parameters."
A047302:
  code: A047302
  message: "The grant type specified by the 'grant_type' request parameter is not included in the list of grant types that the client has declared it may use."
A048101:
  code: A048101
  message: "Failed to get the client information from the database."
A048102:
  code: A048102
  message: "Failed to get information about the authorization code."
A048103:
  code: A048103
  message: "Failed to get information about the refresh token."
A048104:
  code: A048104
  message: "Failed to get the client information by a client ID alias."
A048301:
  code: A048301
  message: "The token endpoint of this service requires 'client_id' parameter or Authorization header containing a client ID for Resource Owner Password Credentials flow."
A048302:
  code: A048302
  message: "The value of 'client_id' passed to the token endpoint is empty."
A048303:
  code: A048303
  message: "The token request contains multiple 'client_id' parameters."
A048304:
  code: A048304
  message: "No client has the client ID ({Client ID})."
A048305:
  code: A048305
  message: "The client (ID = {Client ID}) does not belong to this service."
A048306:
  code: A048306
  message: "The client (ID = {Client ID}) has been deleted."
A048307:
  code: A048307
  message: "The client (ID = {Client ID}) is locked."
A048312:
  code: A048312
  message: "The token request specifies the client ID by two different ways but the values are different."
A048314:
  code: A048314
  message: "Client Credentials flow requires 'client_id' request parameter or Authorization header that contains a client ID."
A048315:
  code: A048315
  message: "The token request does not contain 'code' parameter although 'grant_type' is 'authorization_code'."
A048316:
  code: A048316
  message: "The value of 'code' in the token request is empty."
A048317:
  code: A048317
  message: "The authorization code does not exist."
A048318:
  code: A048318
  message: "The token request does not contain 'refresh_token' parameter although 'grant_type' is 'refresh_token'."
A048319:
  code: A048319
  message: "The value of 'refresh_token' in the token request is empty."
A048320:
  code: A048320
  message: "The refresh token does not exist."
A048321:
  code: A048321
  message: "The client which the authorization code has been issued to does not exist any longer."
A048322:
  code: A048322
  message: "The client which the refresh token has been issued to does not exist any longer."
A048323:
  code: A048323
  message: "No client has the client ID (%s) or the client ID alias."
A048324:
  code: A048324
  message: "The client ID alias (%s) of the client is not enabled."
A048329:
  code: A048329
  message: "The client did not send an assertion."
A048330:
  code: A048330
  message: "The client sent multiple assertions."
A048332:
  code: A048332
  message: "The client's assertion was not properly formatted."
A048346:
  code: A048346
  message: "The client provided an invalid certificate for authentication."
A048351:
  code: A048351
  message: "The client did not provide a certificate to the token endpoint but is configured to use an MTLS-bound access token."
A048352:
  code: A048352
  message: "The client's subject DN is not in the correct format."
A048353:
  code: A048353
  message: "Couldn't build a certificate path from the trusted root certificates, but one is required."
A048354:
  code: A048354
  message: "Couldn't create a certificate validator."
A048355:
  code: A048355
  message: "The client's presented certificate did not validate against any of the trusted root certificates registered to the service."
A048356:
  code: A048356
  message: "The service requires validation of the certificate chain, but no trusted root certificates are configured."
A049301:
  code: A049301
  message: "The token request does not contain 'grant_type' parameter."
A049302:
  code: A049302
  message: "The value of 'grant_type' in the token request is empty."
A049303:
  code: A049303
  message: "The token request contains multiple 'grant_type' parameters."
A049304:
  code: A049304
  message: "The value of 'grant_type' in the token request is invalid."
A049305:
  code: A049305
  message: "This service does not support the grant_type '{Grant Type}'."
A049306:
  code: A049306
  message: "The 'implicit' grant_type is invalid for the token endpoint."
A050001:
  code: A050001
  message: "The token request (grant_type=authorization_code) was processed successfully."
A050101:
  code: A050101
  message: "Failed to insert a new access token into the database."
A050102:
  code: A050102
  message: "The value of code_challenge_method extracted from the database is not supported."
A050103:
  code: A050103
  message: "Failed to get information about the authorization code."
A050105:
  code: A050105
  message: "Failed to get the list of scope attributes from 'scope_attributes' table."
A050201:
  code: A050201
  message: "The total size of 'properties' is too big."
A050202:
  code: A050202
  message: "Failed to prepare a JWT-based access token: {Error Message}"
A050301:
  code: A050301
  message: "The token request does not contain 'code' parameter although 'grant_type' is 'authorization_code'."
A050302:
  code: A050302
  message: "The value of 'code' in the token request is empty."
A050303:
  code: A050303
  message: "The token request contains multiple 'code' parameters."
A050304:
  code: A050304
  message: "The token request contains multiple 'redirect_uri' parameters."
A050305:
  code: A050305
  message: "No such authorization code."
A050306:
  code: A050306
  message: "The authorization code does not belong to this service."
A050307:
  code: A050307
  message: "The authorization code does not belong to the client."
A050308:
  code: A050308
  message: "The authorization code was created with a redirect URI specified explicitly, but the token request does not contain 'redirect_uri' parameter."
A050309:
  code: A050309
  message: "The redirect URI contained in the token request does not match the one which was specified when the authorization code was created."
A050310:
  code: A050310
  message: "The token request contains 'redirect_uri' although the authorization code was created without specifying any redirect URI explicitly."
A050311:
  code: A050311
  message: "The authorization code has already expired."
A050312:
  code: A050312
  message: "The token request does not contain 'code_verifier' although the authorization code was created with 'code_challenge'."
A050313:
  code: A050313
  message: "The value of 'code_verifier' in the token request is empty."
A050314:
  code: A050314
  message: "The token request contains multiple 'code_verifier' parameters."
A050315:
  code: A050315
  message: "The code challenge value computed with 'code_verifier' is different from 'code_challenge' contained in the authorization request."
A050316:
  code: A050316
  message: "The value of 'code_verifier' in the token request does not conform to the format defined in RFC 7636."
A050317:
  code: A050317
  message: "The token request contains 'code_verifier' although its corresponding authorization request did not contain 'code_challenge'."
A051001:
  code: A051001
  message: "Authlete has successfully issued a ticket to the service (API Key = {Service's API Key}) for the token request from the client (ID = {Client ID}). [grant_type=password]"
A051101:
  code: A051101
  message: "Failed to insert a new record into the 'token_ticket' table."
A051102:
  code: A051102
  message: "Failed to get the list of registered scopes from 'scope' table."
A051103:
  code: A051103
  message: "Failed to get the list of scope attributes from 'scope_attributes' table."
A051301:
  code: A051301
  message: "The token request does not contain 'username' parameter although 'grant_type' is 'password'."
A051302:
  code: A051302
  message: "The value of 'username' in the token request is empty."
A051303:
  code: A051303
  message: "The token request contains multiple 'username' parameters."
A051304:
  code: A051304
  message: "The token request does not contain 'password' parameter although 'grant_type' is 'password'."
A051305:
  code: A051305
  message: "The value of 'password' in the token request is empty."
A051306:
  code: A051306
  message: "The token request contains multiple 'password' parameters."
A051307:
  code: A051307
  message: "The token request contains multiple 'scope' parameters."
A051308:
  code: A051308
  message: "The token request has no 'scope' parameter or none of the given scopes is recognized as valid, and the service's default scope set is empty. The service's configuration does not allow requests that request no scope."
A052001:
  code: A052001
  message: "The token request (grant_type=client_credentials) was processed successfully."
A052101:
  code: A052101
  message: "Failed to get the list of registered scopes from 'scope' table."
A052102:
  code: A052102
  message: "Failed to insert a new access token into the database."
A052103:
  code: A052103
  message: "Failed to get the list of scope attributes from 'scope_attributes' table."
A052201:
  code: A052201
  message: "The total size of 'properties' is too big."
A052202:
  code: A052202
  message: "Failed to prepare a JWT-based access token: {Error Message}"
A052301:
  code: A052301
  message: "Public clients are not allowed to use 'grant_type=client_credentials'."
A052302:
  code: A052302
  message: "The token request contains multiple 'scope' parameters."
A052303:
  code: A052303
  message: "The token request has no 'scope' parameter or none of the given scopes is recognized as valid, and the service's default scope set is empty. The service's configuration does not allow requests that request no scope."
A053001:
  code: A053001
  message: "The token request (grant_type=refresh_token) was processed successfully."
A053101:
  code: A053101
  message: "Failed to update the access token entity in the database."
A053102:
  code: A053102
  message: "Failed to get information about the refresh token."
A053104:
  code: A053104
  message: "Failed to get the list of scope attributes from 'scope_attributes' table."
A053201:
  code: A053201
  message: "The total size of 'properties' is too big."
A053202:
  code: A053202
  message: "Failed to prepare a JWT-based access token: {Error Message}"
A053301:
  code: A053301
  message: "The token request does not contain 'refresh_token' parameter although 'grant_type' is 'refresh_token'."
A053302:
  code: A053302
  message: "The value of 'refresh_token' in the token request is empty."
A053303:
  code: A053303
  message: "The token request contains multiple 'refresh_token' parameters."
A053304:
  code: A053304
  message: "The token request contains multiple 'scope' parameters."
A053305:
  code: A053305
  message: "The refresh token passed to the token endpoint does not exist."
A053306:
  code: A053306
  message: "The refresh token does not belong to this service."
A053307:
  code: A053307
  message: "The refresh token does not belong to the client."
A053308:
  code: A053308
  message: "The refresh token has already expired."
A053309:
  code: A053309
  message: "The value of 'scope' in the token request contains a scope which is not covered by the old access token."
A053310:
  code: A053310
  message: "Failed to refresh the access token because the database record for the refresh token was not found."
A053311:
  code: A053311
  message: "The DPoP thumbprint for the refresh token did not match the thumbprint presented in the request."
A053401:
  code: A053401
  message: "The response from Authlete's /api/auth/token endpoint (grant_type=refresh_token): %s"
A054001:
  code: A054001
  message: "The token request (grant_type=password) was processed successfully."
A054101:
  code: A054101
  message: "Failed to delete the consumed ticket ({Ticket})."
A055201:
  code: A055201
  message: "The value of 'ticket' in the /api/auth/token/issue request is null or empty."
A055202:
  code: A055202
  message: "There is no entity having the ticket specified in the /api/auth/token/issue request."
A055203:
  code: A055203
  message: "The ticket in the /api/auth/token/issue request does not belong to the service."
A055301:
  code: A055301
  message: "The ticket in the /api/auth/token/issue request has expired."
A056001:
  code: A056001
  message: "The access token is valid."
A057101:
  code: A057101
  message: "Failed to get information about the access token from the database."
A057301:
  code: A057301
  message: "The request does not contain a valid access token."
A057302:
  code: A057302
  message: "The access token does not exist."
A057303:
  code: A057303
  message: "The access token does not belong to the service."
A057304:
  code: A057304
  message: "Failed to extract the value of the 'jti' claim from the access token."
A057305:
  code: A057305
  message: "The value of the 'jti' claim in the access token is null or empty."
A057306:
  code: A057306
  message: "When the format of an access token is JWT, it must be a JWS signed with an asymmetric algorithm without encryption."
A058101:
  code: A058101
  message: "Failed to delete the consumed ticket ({Ticket})."
A059201:
  code: A059201
  message: "The value of 'ticket' in the /api/auth/authorization/fail request is null or empty."
A059202:
  code: A059202
  message: "There is no entity having the ticket specified in the /api/auth/authorization/fail request."
A059203:
  code: A059203
  message: "The ticket in the /api/auth/authorization/fail request does not belong to the service."
A059301:
  code: A059301
  message: "The ticket in the /api/auth/authorization/fail request has expired."
A060201:
  code: A060201
  message: "The /api/auth/authorization/fail request does not contain 'reason' parameter."
A060301:
  code: A060301
  message: "The authorization request contains prompt=none, but no end-user has logged in this service."
A060302:
  code: A060302
  message: "This service cannot handle 'max_age' parameter properly when the authorization request contains prompt=none."
A060303:
  code: A060303
  message: "The authorization request contains prompt=none, but the maximum authentication age has passed."
A060304:
  code: A060304
  message: "The authorization request contains prompt=none and specifies 'sub' claim, but the current end-user is different from the subject."
A060305:
  code: A060305
  message: "The authorization request contains prompt=none and requests 'acr' as essential, but the authentication performed for the end-user satisfies none of the requested ACRs."
A060306:
  code: A060306
  message: "The end-user denied the authorization request."
A060307:
  code: A060307
  message: "The authorization request failed due to an unknown reason."
A060308:
  code: A060308
  message: "The authorization request failed due to a server error."
A060309:
  code: A060309
  message: "The authorization request failed because the end-user was not authenticated or did not exist."
A060310:
  code: A060310
  message: "The authorization server cannot obtain an account selection choice made by the end-user."
A060311:
  code: A060311
  message: "The authorization server cannot obtain consent from the end-user."
A060312:
  code: A060312
  message: "The authorization server needs interaction with the end-user."
A060313:
  code: A060313
  message: "The requested resource is invalid."
A061101:
  code: A061101
  message: "Failed to issue an access token from /api/auth/token/issue endpoint."
A061102:
  code: A061102
  message: "Failed to get the list of scope attributes from 'scope_attributes' table."
A061103:
  code: A061103
  message: "Failed to get information about the client application."
A061104:
  code: A061104
  message: "Failed to get extension data of the client application."
A061201:
  code: A061201
  message: "The total size of 'properties' is too big."
A061202:
  code: A061202
  message: "Failed to prepare a JWT-based access token: {Error Message}"
A061301:
  code: A061301
  message: "The ticket for token issuance was consumed by another transaction, so token are not issued."
A062101:
  code: A062101
  message: "Failed to delete the consumed ticket ({Ticket})."
A063201:
  code: A063201
  message: "The value of 'ticket' in the /api/auth/token/fail request is null or empty."
A063202:
  code: A063202
  message: "There is no entity having the ticket specified in the /api/auth/token/fail request."
A063203:
  code: A063203
  message: "The ticket in the /api/auth/token/fail request does not belong to the service."
A063301:
  code: A063301
  message: "The ticket in the /api/auth/token/fail request has expired."
A064301:
  code: A064301
  message: "No scopes are associated with the access token."
A064302:
  code: A064302
  message: "The access token does not cover the required scope '{Scope Name}'."
A065101:
  code: A065101
  message: "Failed to delete an access token entity (number = %d): %s"
A065301:
  code: A065301
  message: "The access token has expired but it can be refreshed using the corresponding refresh token."
A065302:
  code: A065302
  message: "Both the access token and the refresh token have expired."
A065303:
  code: A065303
  message: "The access token has expired."
A065304:
  code: A065304
  message: "The client failed to present a certificate and the access token is MTLS bound."
A065305:
  code: A065305
  message: "The client's certificate does not match the thumbprint of the access token."
A065306:
  code: A065306
  message: "Failed to calculate the thumbprint of the client certificate."
A065307:
  code: A065307
  message: "Failed to parse the client certificate because it is malformed."
A065308:
  code: A065308
  message: "Expected a DPoP header but none was provided."
A065309:
  code: A065309
  message: "Thumbprint of the provided DPoP key does not match the expected DPoP thumbprint."
A065310:
  code: A065310
  message: "There was an error processing the DPoP header: {Error}"
A065311:
  code: A065311
  message: "The DPoP signature algorithm ({Algorithm}) must not be symmetric or 'none'."
A065312:
  code: A065312
  message: "The DPoP header did not include a public key in JWK format."
A065313:
  code: A065313
  message: "The DPoP signature algorithm is missing."
A066301:
  code: A066301
  message: "The access token is not associated with any subject."
A066302:
  code: A066302
  message: "The subject associated with the access token is different from the subject required to access the protected resource."
A067201:
  code: A067201
  message: "The /api/auth/token/fail request does not contain 'reason' parameter."
A067301:
  code: A067301
  message: "The credentials (username & password) passed to the token endpoint are invalid."
A067302:
  code: A067302
  message: "The token request failed due to an unknown reason."
A067303:
  code: A067303
  message: "The requested resource is invalid."
A068101:
  code: A068101
  message: "Failed to get the list of claims supported by the service."
A069301:
  code: A069301
  message: "The value of 'login_hint' in the request object is not a string."
A069302:
  code: A069302
  message: "The authorization request contains multiple 'login_hint' parameters."
A077301:
  code: A077301
  message: "'prompt=none' is not supported."
A077302:
  code: A077302
  message: "The direct authorization endpoint is not enabled in this service (API Key = {API Key})."
A081101:
  code: A081101
  message: "Failed to issue an access token from /api/auth/token/direct endpoint."
A081102:
  code: A081102
  message: "Failed to get the list of scope attributes from 'scope_attributes' table."
A081201:
  code: A081201
  message: "Failed to prepare a JWT-based access token: {Error Message}"
A081301:
  code: A081301
  message: "The credentials (username & password) passed to the token endpoint are invalid."
A082201:
  code: A082201
  message: "The authentication callback endpoint of the service ({Service's API Key}) is not registered."
A082202:
  code: A082202
  message: "The authentication callback failed (Service = {Service's API Key}, Client = {Client ID}): {Error Message}"
A082203:
  code: A082203
  message: "'subject' in the response from the authentication callback endpoint of the service ({Service's API Key}) is empty."
A082204:
  code: A082204
  message: "The length ({Number}) of 'subject' in the response from the authentication callback endpoint of the service ({Service's API Key}) exceeds the maximum size ({Number})."
A082205:
  code: A082205
  message: "'subject' in the response from the authentication callback endpoint of the service ({Service's API Key}) contains non-ASCII letters."
A082206:
  code: A082206
  message: "'claims' in the response from the authentication callback endpoint of the service ({Service's API Key}) failed to be parsed as JSON."
A088101:
  code: A088101
  message: "Failed to get information about the access token from the database."
A088301:
  code: A088301
  message: "The request does not contain a valid access token."
A088302:
  code: A088302
  message: "The access token does not exist."
A088303:
  code: A088303
  message: "The access token does not belong to the service."
A088304:
  code: A088304
  message: "Failed to extract the value of the 'jti' claim from the access token."
A088305:
  code: A088305
  message: "The value of the 'jti' claim in the access token is null or empty."
A088306:
  code: A088306
  message: "When the format of an access token is JWT, it must be a JWS signed with an asymmetric algorithm without encryption."
A088307:
  code: A088307
  message: "The access token is invalid."
A089301:
  code: A089301
  message: "The access token has expired and does not have an associated refresh token."
A089302:
  code: A089302
  message: "Both the access token and the associated refresh token have expired."
A089303:
  code: A089303
  message: "The access token has expired, but it can be refreshed by using the associated refresh token."
A089304:
  code: A089304
  message: "The userinfo endpoint requires 'openid' scope, but the access token does not cover the scope."
A089305:
  code: A089305
  message: "The userinfo endpoint requires an access token to be associated with a subject."
A089306:
  code: A089306
  message: "An access token issued through the grant type of 'Resource Owner Password Credentials' is not allowed to access the userinfo endpoint."
A089307:
  code: A089307
  message: "The access token is bound to a client certificate, but the userinfo request includes no client certificate."
A089308:
  code: A089308
  message: "Failed to parse the client certificate because it is malformed."
A089309:
  code: A089309
  message: "Failed to calculate the thumbprint of the client certificate."
A089310:
  code: A089310
  message: "The thumbprint of the client certificate used in the userinfo request does not match the thumbprint of the client certificate to which the access token is bound."
A089311:
  code: A089311
  message: "Expected a DPoP header but none was provided."
A089312:
  code: A089312
  message: "Thumbprint of the provided DPoP key does not match the expected DPoP thumbprint."
A089313:
  code: A089313
  message: "There was an error processing the DPoP header: {Error}."
A089314:
  code: A089314
  message: "The DPoP signature algorithm ({Algorithm}) must not be symmetric or 'none'."
A089315:
  code: A089315
  message: "The DPoP header did not include a public key in JWK format."
A089316:
  code: A089316
  message: "The DPoP signature algorithm is missing."
A090101:
  code: A090101
  message: "Failed to get the list of claims supported by the service."
A091001:
  code: A091001
  message: "The access token presented at the userinfo endpoint is valid."
A092101:
  code: A092101
  message: "Failed to get information about the access token from the database."
A092301:
  code: A092301
  message: "The request does not contain a valid access token."
A092302:
  code: A092302
  message: "The access token does not exist."
A092303:
  code: A092303
  message: "The access token does not belong to the service."
A092304:
  code: A092304
  message: "Failed to extract the value of the 'jti' claim from the access token."
A092305:
  code: A092305
  message: "The value of the 'jti' claim in the access token is null or empty."
A092306:
  code: A092306
  message: "When the format of an access token is JWT, it must be a JWS signed with an asymmetric algorithm without encryption."
A092307:
  code: A092307
  message: "The access token is invalid."
A093301:
  code: A093301
  message: "The access token has expired and does not have an associated refresh token."
A093302:
  code: A093302
  message: "Both the access token and the associated refresh token have expired."
A093303:
  code: A093303
  message: "The access token has expired, but it can be refreshed by using the associated refresh token."
A093304:
  code: A093304
  message: "The userinfo endpoint requires 'openid' scope, but the access token does not cover the scope."
A093305:
  code: A093305
  message: "The userinfo endpoint requires an access token to be associated with a subject."
A093306:
  code: A093306
  message: "An access token issued through the grant type of 'Resource Owner Password Credentials' is not allowed to access the userinfo endpoint."
A094201:
  code: A094201
  message: "The value of 'claims' in the /api/auth/userinfo/issue request failed to be parsed as a JSON object."
A094202:
  code: A094202
  message: "'verified_claims' in the 'claims' request parameter is invalid: {Error Message}"
A095301:
  code: A095301
  message: "The client application (ID = {Client ID}) has been deleted, so the user information cannot be serialized."
A096001:
  code: A096001
  message: "User information was obtained successfully."
A097101:
  code: A097101
  message: "Failed to get information about the client from the database."
A097301:
  code: A097301
  message: "The client application associated with the presented access token does not exist any longer."
A097302:
  code: A097302
  message: "The client application associated with the presented access token has been deleted."
A097303:
  code: A097303
  message: "The client application associated with the presented access token is locked."
A098101:
  code: A098101
  message: "Failed to get information about the client from the database."
A098301:
  code: A098301
  message: "The client application associated with the presented access token does not exist any longer."
A098302:
  code: A098302
  message: "The client application associated with the presented access token has been deleted."
A098303:
  code: A098303
  message: "The client application associated with the presented access token is locked."
A099001:
  code: A099001
  message: "The developer authentication request was processed successfully. (authenticated={Boolean})"
A099101:
  code: A099101
  message: "Failed to get information about the service."
A099201:
  code: A099201
  message: "The service has already been deleted."
A099202:
  code: A099202
  message: "The service is locked."
A101201:
  code: A101201
  message: "The developer authentication callback endpoint of the service ({Service's API Key}) is not registered."
A101202:
  code: A101202
  message: "The developer authentication callback failed (Service = {Service's API Key}): {Error Message}"
A101203:
  code: A101203
  message: "'subject' in the response from the developer authentication callback endpoint of the service ({Service's API Key}) is empty."
A101204:
  code: A101204
  message: "The length ({Number}) of 'subject' in the response from the developer authentication callback endpoint of the service ({Service's API Key}) exceeds the maximum size ({Number})."
A101205:
  code: A101205
  message: "'subject' in the response from the developer authentication callback endpoint of the service ({Service's API Key}) contains non-ASCII letters."
A101206:
  code: A101206
  message: "The length ({Number}) of 'displayName' in the response from the developer authentication callback endpoint of the service ({Service's API Key}) exceeds the maximum size ({Number})."
A104201:
  code: A104201
  message: "The 'grantType' parameter is empty."
A104202:
  code: A104202
  message: "REFRESH_TOKEN is not allowed as a value for the 'grantType' parameter."
A104203:
  code: A104203
  message: "The specified grant type ({Grant Type}) is not supported by this service ({Service's API Key})."
A105201:
  code: A105201
  message: "The 'subject' parameter is empty."
A105202:
  code: A105202
  message: "The length of 'subject' in the /api/auth/token/create request exceeds the maximum length ({Number})."
A105203:
  code: A105203
  message: "The 'subject' in the /api/auth/token/create request contains non-ASCII letters."
A106101:
  code: A106101
  message: "Failed to get supported custom scopes of the service ({Service's API Key}) from the database."
A106102:
  code: A106102
  message: "Failed to get the list of scope attributes from 'scope_attributes' table."
A106201:
  code: A106201
  message: "Unsupported scope: {Scope Name}"
A107101:
  code: A107101
  message: "Failed to get information about the client (ID = {Client ID})."
A107102:
  code: A107102
  message: "Failed to get extension data of the client (ID = {Client ID})."
A107201:
  code: A107201
  message: "No client has the client ID ({Client ID})."
A107202:
  code: A107202
  message: "The client identified by the client ID ({Client ID}) does not belong to the service."
A107203:
  code: A107203
  message: "The client identified by the client ID ({Client ID}) is locked."
A108101:
  code: A108101
  message: "Failed to insert a new access token into the database."
A108201:
  code: A108201
  message: "The total size of 'properties' is too big."
A108202:
  code: A108202
  message: "The 'refreshToken' parameter cannot be specified since the service does not support the refresh token flow."
A108203:
  code: A108203
  message: "The 'refreshToken' parameter cannot be specified when 'grant_type' is 'implicit'."
A108204:
  code: A108204
  message: "The 'refreshToken' parameter cannot be specified when 'grant_type' is 'client_credentials'."
A108205:
  code: A108205
  message: "Failed to prepare a JWT-based access token: {Error Message}"
A109001:
  code: A109001
  message: "An access token was created successfully: {Grant Type}, client = {Client ID}"
A110101:
  code: A110101
  message: "Failed to get the JWK Set record of the service ({Service's API Key})."
A110105:
  code: A110105
  message: "Failed to get the list of hardware-secured keys of the service (%d)."
A110106:
  code: A110106
  message: "Failed to convert an HskEntity (alg={Algorithm}, handle={Handle}) to a JWK: {Error Message}"
A111201:
  code: A111201
  message: "The value of 'subject' in the /api/auth/token/issue request is null or empty."
A111202:
  code: A111202
  message: "The length ({Number}) of 'subject' in the /api/auth/token/issue request exceeds the maximum size ({Number})."
A111203:
  code: A111203
  message: "'subject' in the /api/auth/token/issue request contains non-ASCII letters."
A113001:
  code: A113001
  message: "The token has been revoked successfully."
A113201:
  code: A113201
  message: "The revocation request from the service does not contain 'parameters' parameter."
A113202:
  code: A113202
  message: "The format of the value of 'parameters' request parameter is wrong."
A113301:
  code: A113301
  message: "The revocation request does not contain any request parameters."
A114101:
  code: A114101
  message: "Failed to get the client information from the database (ID = {Client ID})."
A114102:
  code: A114102
  message: "Failed to get the client information by a client ID alias."
A114301:
  code: A114301
  message: "The revocation endpoint of this service requires 'client_id' parameter."
A114302:
  code: A114302
  message: "The value of 'client_id' passed to the revocation endpoint is empty."
A114303:
  code: A114303
  message: "The revocation request contains multiple 'client_id' parameters."
A114304:
  code: A114304
  message: "No client has the client ID ({Client ID})."
A114305:
  code: A114305
  message: "The client (ID = {Client ID}) does not belong to this service."
A114306:
  code: A114306
  message: "The client (ID = {Client ID}) has been deleted."
A114307:
  code: A114307
  message: "The client (ID = {Client ID}) is locked."
A114308:
  code: A114308
  message: "The revocation request does not contain 'client_secret' although the client type is 'confidential'."
A114309:
  code: A114309
  message: "The value of 'client_secret' in the revocation request is empty."
A114310:
  code: A114310
  message: "The revocation request contains multiple 'client_secret' parameters."
A114311:
  code: A114311
  message: "The client credentials contained in the revocation request are invalid."
A114312:
  code: A114312
  message: "The revocation request specifies the client ID by two different ways but the values are different."
A114313:
  code: A114313
  message: "The revocation request specifies the client secret by two different ways but the values are different."
A114314:
  code: A114314
  message: "No client has the client ID (%s) or the client ID alias."
A114315:
  code: A114315
  message: "The client ID alias (%s) of the client is not enabled."
A115301:
  code: A115301
  message: "The revocation request does not contain 'token' parameter."
A115302:
  code: A115302
  message: "The value of 'token' in the revocation request is empty."
A115303:
  code: A115303
  message: "The revocation request contains multiple 'token' parameters."
A116101:
  code: A116101
  message: "Failed to look up an access token."
A116102:
  code: A116102
  message: "Failed to look up a refresh token."
A116103:
  code: A116103
  message: "Failed to revoke the token."
A116104:
  code: A116104
  message: "Failed to get information about the client application that is associated with the token."
A116301:
  code: A116301
  message: "The presented token has not been issued to the client application (ID = {Client ID})."
A116302:
  code: A116302
  message: "The revocation request does not contain 'client_secret' although the client type of the client application that is associated with the token is 'confidential'."
A116303:
  code: A116303
  message: "The client application associated with the token does not belong to the service."
A116304:
  code: A116304
  message: "The client application associated with the token is locked."
A117301:
  code: A117301
  message: "The direct token endpoint is not enabled in this service ({Service's API Key})."
A117302:
  code: A117302
  message: "HTTP method for a token request must be POST."
A118301:
  code: A118301
  message: "The direct revocation endpoint is not enabled in this service ({Service's API Key})."
A119301:
  code: A119301
  message: "The direct jwks endpoint is not enabled in this service ({Service's API Key})."
A120201:
  code: A120201
  message: "The service owner (API Key = {Service Owner's API Key}) does not exist."
A122601:
  code: A122601
  message: "The service owner (API key = {Service Owner's API Key}) cannot create a new service because the current number of services has reached the maximum number ({Number}) of the plan ({Plan Name})."
A123601:
  code: A123601
  message: "Cannot create a new client because the current number of clients has reached the maximum number ({Number}) of clients per developer."
A123602:
  code: A123602
  message: "Cannot create a new client because the current number of clients has reached the maximum number ({Number}) of the plan ({Plan Name}). Consult the manager of this service."
A123603:
  code: A123603
  message: "Cannot create a new client because the client ID alias is already in use. Client ID aliases must be unique in the same service."
A123604:
  code: A123604
  message: "The size of 'customMetadata' is too big."
A124301:
  code: A124301
  message: "The authorization request does not contain 'code_challenge' parameter. See RFC 7636 for details."
A124302:
  code: A124302
  message: "The value of 'code_challenge' parameter in the authorization request is empty. See RFC 7636 for details."
A124303:
  code: A124303
  message: "The authorization request contains multiple 'code_challenge' parameters."
A124304:
  code: A124304
  message: "The value of 'code_challenge' does not comply with RFC 7636."
A124305:
  code: A124305
  message: "The authorization request contains multiple 'code_challenge_method' parameters."
A124306:
  code: A124306
  message: "The value of 'code_challenge_method' is not supported."
A124307:
  code: A124307
  message: "'code_challenge_method=S256' must be explicitly included in the request."
A124308:
  code: A124308
  message: "The value of the 'code_challenge_method' request parameter must be 'S256'."
A124309:
  code: A124309
  message: "The value of the 'code_challenge' parameter in the request object is not a string."
A124310:
  code: A124310
  message: "The value of the 'code_challenge_method' parameter in the request object is not a string."
A125101:
  code: A125101
  message: "Failed to correct the configuration information of the service."
A127001:
  code: A127001
  message: "The client (ID = {Client ID}) does not have extension data and so does not have requestable scopes."
A127002:
  code: A127002
  message: "Cleared requestable scopes of the client (ID = {Client ID}) successfully."
A127003:
  code: A127003
  message: "Requestable scopes of the client (ID = {Client ID}) have already been cleared."
A127101:
  code: A127101
  message: "Failed to clear requestable scopes of the client (ID = {Client ID})."
A128101:
  code: A128101
  message: "Failed to update requestable scopes of the client (ID = {Client ID})."
A128201:
  code: A128201
  message: "Failed to parse the request body as a JSON object."
A128202:
  code: A128202
  message: "The value of 'requestableScopes' in the request body is not an array."
A128203:
  code: A128203
  message: "The array of 'requestableScopes' contains a non-string element."
A133101:
  code: A133101
  message: "Failed to get the list of pre-defined scopes of the service ({Service's API Key}) from the 'scope' table."
A133102:
  code: A133102
  message: "Failed to get the list of scope attributes from 'scope_attributes' table."
A134101:
  code: A134101
  message: "Failed to get the information about the access token passed to the /api/auth/token/update API."
A134102:
  code: A134102
  message: "Failed to clear an access token cache."
A134103:
  code: A134103
  message: "Failed to clear a refresh token cache."
A134104:
  code: A134104
  message: "Failed to get the information about the service from the database."
A134105:
  code: A134105
  message: "Failed to get the information about the client from the database."
A134106:
  code: A134106
  message: "Failed to get the extension data of the client from the database."
A134107:
  code: A134107
  message: "The client associated with the access token no longer exists: ID = {Client ID}"
A134109:
  code: A134109
  message: "Failed to get the information about the supported scopes."
A134110:
  code: A134110
  message: "Failed to get the list of scope attributes from 'scope_attributes' table."
A134201:
  code: A134201
  message: "The /api/auth/token/update API call must contain either the 'accessToken' or 'accessTokenHash' parameter."
A134202:
  code: A134202
  message: "The access token identified by the 'accessToken' request parameter does not exist."
A134203:
  code: A134203
  message: "The access token identified by the 'accessToken' request parameter does not belong to the service."
A134204:
  code: A134204
  message: "The service that the access token belongs to no longer exists: Service = {Service's API Key}"
A135001:
  code: A135001
  message: "Updated the access token successfully."
A135101:
  code: A135101
  message: "Failed to update the database record of the access token."
A136102:
  code: A136102
  message: "Failed to get the list of clients from the database."
A136201:
  code: A136201
  message: "Parameter 'start' failed to be parsed as int."
A136202:
  code: A136202
  message: "Parameter 'start' must not be negative."
A136203:
  code: A136203
  message: "Parameter 'end' failed to be parsed as int."
A136204:
  code: A136204
  message: "Parameter 'end' must not be negative."
A136205:
  code: A136205
  message: "The input JSON to /api/client/authorization/client/get/list API is wrong."
A136206:
  code: A136206
  message: "The request parameter 'subject' must be specified."
A137001:
  code: A137001
  message: "Deleted {Number} access token(s) issued to the client (ID = {Client ID}) of the service (API Key = {Service's API Key})."
A137102:
  code: A137102
  message: "Failed to delete access tokens issued to the client (ID = {Client ID})."
A137201:
  code: A137201
  message: "The input JSON to /api/client/authorization/client/delete/{clientId} API is wrong."
A137202:
  code: A137202
  message: "The request parameter 'subject' must be specified."
A138001:
  code: A138001
  message: "Updated {Number} access token(s) issued to the client (ID = {Client ID}) of the service (API Key = {Service's API Key})."
A138102:
  code: A138102
  message: "Failed to update access tokens issued to the client (ID = {Client ID})."
A138201:
  code: A138201
  message: "The request parameter 'subject' must be specified."
A139001:
  code: A139001
  message: "There is no information about scopes granted to the combination of the client (ID = {Client ID}) and the subject ({Subject})."
A139002:
  code: A139002
  message: "Successfully obtained the information about scopes granted to the combination of the client (ID = {Client ID}) and the subject ({Subject})."
A139101:
  code: A139101
  message: "Failed to get information about scopes granted to the combination of the client (ID = {Client ID}) and the subject ({Subject})."
A139201:
  code: A139201
  message: "The input JSON to /api/client/granted_scopes/get/{clientId} API is wrong."
A139202:
  code: A139202
  message: "The request parameter 'subject' must be specified."
A140001:
  code: A140001
  message: "There was no information about scopes granted to the combination of the client (ID = {Client ID}) and the subject ({Subject})."
A140002:
  code: A140002
  message: "Successfully deleted the information about scopes granted to the combination of the client (ID = {Client ID}) and the subject ({Subject})."
A140101:
  code: A140101
  message: "Failed to delete information about scopes granted to the combination of the client (ID = {Client ID}) and the subject ({Subject})."
A140201:
  code: A140201
  message: "The input JSON to /api/client/granted_scopes/delete/{clientId} API is wrong."
A140202:
  code: A140202
  message: "The request parameter 'subject' must be specified."
A144101:
  code: A144101
  message: "Failed to get the information about the access token associated with the value of the 'accessToken' parameter."
A144102:
  code: A144102
  message: "Failed to get the information about the access token associated with the value of the 'refreshToken' parameter."
A144103:
  code: A144103
  message: "Failed to insert a new access token into the database."
A144201:
  code: A144201
  message: "Cannot create an access token because the specified access token value is already in use."
A144202:
  code: A144202
  message: "Cannot create an access token because the specified refresh token value is already in use."
A145001:
  code: A145001
  message: "Introspection was performed successfully (type={{access_token|refresh_token|null}}, active={{true|false}})."
A145201:
  code: A145201
  message: "The standard introspection request from the service does not contain 'parameters' parameter."
A145202:
  code: A145202
  message: "The format of the value of 'parameters' request parameter is wrong."
A145301:
  code: A145301
  message: "The standard introspection request does not contain any request parameters."
A145302:
  code: A145302
  message: "The 'token' request parameter is missing."
A145401:
  code: A145401
  message: "The response from /api/auth/introspection/standard: %s"
A146101:
  code: A146101
  message: "Failed to look up an access token."
A146102:
  code: A146102
  message: "Failed to look up a refresh token."
A147301:
  code: A147301
  message: "The direct introspection endpoint is not enabled."
A148001:
  code: A148001
  message: "Successfully refreshed the client secret of the client (ID = {Client ID})."
A148101:
  code: A148101
  message: "Failed to refresh the client secret of the client (identifier = {Client Identifier})."
A148201:
  code: A148201
  message: "No client has the client identifier ({Client Identifier})."
A149001:
  code: A149001
  message: "Successfully updated the client secret of the client (ID = {Client ID})."
A149101:
  code: A149101
  message: "Failed to update the client secret of the client (identifier = {Client Identifier})."
A149201:
  code: A149201
  message: "No client has the client identifier ({Client Identifier})."
A149601:
  code: A149601
  message: "The format of the value of the 'clientSecret' request parameter is wrong: {Error Message}"
A150101:
  code: A150101
  message: "Failed to get the list of registered redirect URIs from 'redirect_uri' table."
A150301:
  code: A150301
  message: "A request object is required."
A150302:
  code: A150302
  message: "The request object passed by 'request' parameter is not signed."
A150303:
  code: A150303
  message: "The authorization request contains multiple '{Parameter Name}' parameters."
A150304:
  code: A150304
  message: "The parameter '{Parameter Name}' exists in the request parameters but is not contained in the request object passed by 'request' parameter."
A150305:
  code: A150305
  message: "The parameter '{Parameter Name}' exists in both the request parameters and the request object passed by 'request' parameter but their values are different."
A150306:
  code: A150306
  message: "The value of the signing algorithm for the request object ({Algorithm}) is not allowed."
A150307:
  code: A150307
  message: "'redirect_uri' parameter must be contained in the authorization request."
A150308:
  code: A150308
  message: "The value of 'redirect_uri' in the request object is not a string."
A150309:
  code: A150309
  message: "The authorization request contains multiple 'redirect_uri' parameters."
A150310:
  code: A150310
  message: "The client has not registered any redirect URI."
A150311:
  code: A150311
  message: "The value of 'redirect_uri' ({Redirect URI}) is not registered."
A150312:
  code: A150312
  message: "The value of 'response_type' ({Response Type}) is not allowed."
A150313:
  code: A150313
  message: "The 'state' request parameter is not contained in the request."
A150314:
  code: A150314
  message: "The 'nonce' request parameter is not contained in the request."
A150315:
  code: A150315
  message: "The 'code_challenge' parameter is not contained in the request."
A150316:
  code: A150316
  message: "The value of 'code_challenge_method' parameter ({Parameter Name}) is not allowed."
A150317:
  code: A150317
  message: "The 'acr' claim is not contained in the request."
A150318:
  code: A150318
  message: "The value of the 'essential' of the 'acr' claim must be 'true'."
A150319:
  code: A150319
  message: "An 'exp' claim is required but not contained in the request object passed by 'request' parameter."
A150320:
  code: A150320
  message: "An 'exp' claim is contained in the request object passed by 'request' parameter but its value is not a number."
A150321:
  code: A150321
  message: "The time in the 'exp' claim in the request object passed by 'request' parameter is in the past."
A150322:
  code: A150322
  message: "The value of the signing algorithm ({Algorithm}) for the authorization response is not allowed."
A150323:
  code: A150323
  message: "The scheme of the redirect URI must be 'https'."
A150324:
  code: A150324
  message: "The request object pointed to by 'request_uri' parameter is not signed."
A150325:
  code: A150325
  message: "The parameter '{Parameter Name}' exists in the request parameters but is not contained in the request object pointed to by 'request_uri' parameter."
A150326:
  code: A150326
  message: "The parameter '{Parameter Name}' exists in both the request parameters and the request object pointed to by 'request_uri' parameter but their values are different."
A150327:
  code: A150327
  message: "An 'exp' claim is required but not contained in the request object pointed to by 'request_uri'."
A150328:
  code: A150328
  message: "An 'exp' claim is contained in the request object pointed to by 'request_uri' parameter but its value is not a number."
A150329:
  code: A150329
  message: "The time in the 'exp' claim in the request object pointed to by 'request_uri' parameter is in the past."
A150330:
  code: A150330
  message: "The value of the signing algorithm for the request object pointed to by 'request_uri' parameter ({Algorithm}) is not allowed."
A150331:
  code: A150331
  message: "An 'aud' claim is required but not contained in the request object passed by 'request' parameter."
A150332:
  code: A150332
  message: "An 'aud' claim is required but not contained in the request object pointed to by 'request_uri' parameter."
A150333:
  code: A150333
  message: "The 'aud' claim in the request object passed by 'request' parameter is not a string or an array."
A150334:
  code: A150334
  message: "The 'aud' claim in the request object pointed to by 'request_uri' parameter is not a string or an array."
A150335:
  code: A150335
  message: "The value of the 'aud' claim in the request object passed by 'request' parameter does not match the issuer identifier of the OpenID provider."
A150336:
  code: A150336
  message: "The value of the 'aud' claim in the request object pointed to by 'request_uri' parameter does not match the issuer identifier of the OpenID provider."
A150337:
  code: A150337
  message: "The value of the 'aud' claim in the request object passed by 'request' parameter does not contain the issuer identifier of the OpenID provider."
A150338:
  code: A150338
  message: "The value of the 'aud' claim in the request object pointed to by 'request_uri' parameter does not contain the issuer identifier of the OpenID provider."
A150339:
  code: A150339
  message: "The value of 'redirect_uri' contained in the request is not well-formed."
A150340:
  code: A150340
  message: "The value of 'redirect_uri' contained in the request is not absolute."
A150341:
  code: A150341
  message: "The value of 'redirect_uri' contained in the request has a fragment component."
A150342:
  code: A150342
  message: "The value of 'response_mode' in the request object is not a string."
A150343:
  code: A150343
  message: "The authorization request contains multiple 'response_mode' parameters."
A150344:
  code: A150344
  message: "The value of 'response_mode' is not supported."
A150351:
  code: A150351
  message: "An 'nbf' claim is required but not contained in the request object passed by the 'request' parameter."
A150352:
  code: A150352
  message: "An 'nbf' claim is required but not contained in the request object pointed to by the 'request_uri' parameter."
A150353:
  code: A150353
  message: "An 'nbf' claim is contained in the request object passed by the 'request' parameter but its value is not a number."
A150354:
  code: A150354
  message: "An 'nbf' claim is contained in the request object pointed to by the 'request_uri' parameter but its value is not a number."
A150355:
  code: A150355
  message: "The value of the 'exp' claim in the request object passed by the 'request' parameter is a negative number."
A150356:
  code: A150356
  message: "The value of the 'exp' claim in the request object pointed to by the 'request_uri' parameter is a negative number."
A150357:
  code: A150357
  message: "The value of the 'nbf' claim in the request object passed by the 'request' parameter is a negative number."
A150358:
  code: A150358
  message: "The value of the 'nbf' claim in the request object pointed to by the 'request_uri' parameter is a negative number."
A150359:
  code: A150359
  message: "The lifetime of the request object passed by the 'request' parameter is negative. (exp - nbf < 0)"
A150360:
  code: A150360
  message: "The lifetime of the request object pointed to by the 'request_uri' parameter is negative. (exp - nbf < 0)"
A150361:
  code: A150361
  message: "The value of the 'exp' claim in the request object passed by the 'request' parameter indicates that the request object has expired."
A150362:
  code: A150362
  message: "The value of the 'exp' claim in the request object pointed to by the 'request_uri' parameter indicates that the request object has expired."
A150363:
  code: A150363
  message: "The value of the 'nbf' claim in the request object passed by the 'request' parameter indicates that the request object has not become valid yet."
A150364:
  code: A150364
  message: "The value of the 'nbf' claim in the request object pointed to by the 'request_uri' parameter indicates that the request object has not become valid yet."
A150365:
  code: A150365
  message: "The lifetime of the request object passed by the 'request' parameter exceeds the allowed maximum value ({Maximum Lifetime} seconds)."
A150366:
  code: A150366
  message: "The lifetime of the request object pointed to by the 'request_uri' parameter exceeds the allowed maximum value ({Maximum Lifetime} seconds)."
A150367:
  code: A150367
  message: "Clients with the client type '{Client Type}' are not allowed to make this kind of authorization requests."
A150378:
  code: A150378
  message: "The encryption algorithm ('{Algorithm}') of the request object passed by the 'request' parameter is prohibited."
A150379:
  code: A150379
  message: "The encryption algorithm ('{Algorithm}') of the request object pointed to by the 'request_uri' parameter is prohibited."
A150380:
  code: A150380
  message: "The encryption algorithm for authorization responses ('{Algorithm}' for 'authorization_encrypted_response_alg') is prohibited."
A151301:
  code: A151301
  message: "The algorithm ('{Algorithm}' for 'id_token_signed_response_alg') to sign the ID token is not allowed."
A151302:
  code: A151302
  message: "The encryption algorithm for ID tokens ('{Algorithm}' for 'id_token_encrypted_response_alg') is prohibited."
A152301:
  code: A152301
  message: "The client authentication method (%s) is not allowed."
A152302:
  code: A152302
  message: "The value of the signing algorithm used for the client's assertion (%s) is not allowed."
A152303:
  code: A152303
  message: "The length of the key to verify the signature of the client's assertion is shorter than the minimum size ({Key Length})."
A152304:
  code: A152304
  message: "The algorithm ('{Algorithm}' for 'id_token_signed_response_alg') to sign the ID token is not allowed."
A152305:
  code: A152305
  message: "The service and the client are not configured so that the required Holder of Key methods are performed."
A152306:
  code: A152306
  message: "The encryption algorithm for ID tokens ('{Algorithm}' for 'id_token_encrypted_response_alg') is prohibited."
A153301:
  code: A153301
  message: "The algorithm ('{Algorithm}' for 'userinfo_signed_response_alg') to sign the response is not allowed."
A153302:
  code: A153302
  message: "The encryption algorithm for userinfo responses ('{Algorithm}' for 'userinfo_encrypted_response_alg') is prohibited."
A154101:
  code: A154101
  message: "Failed to get the list of scope attributes from 'scope_attributes' table."
A155301:
  code: A155301
  message: "The backchannel token delivery mode of the client is '{Delivery Mode}', but the backchannel authentication request does not contain a client notification token."
A155302:
  code: A155302
  message: "The length of a client notification token must not exceed 1024."
A155303:
  code: A155303
  message: "The format of the client notification token must conform to the syntax for bearer credentials as defined in Section 2.1 of RFC 6750."
A156101:
  code: A156101
  message: "Failed to get root certificates of the client application (ID = {Client ID}) from 'trusted_root_certificate' table."
A156102:
  code: A156102
  message: "Failed to fetch the JWK Set of the client application (ID = {Client ID}) from the location pointed to by 'jwks_uri' ({URL})."
A156103:
  code: A156103
  message: "Failed to put the JWK Set of the client application (ID = {Client ID}) into 'client_jwks' table."
A156104:
  code: A156104
  message: "The client application (ID = {Client ID}) was not found in the database, unexpectedly."
A156105:
  code: A156105
  message: "The JWK Set of the client application (ID = {Client ID}) was not found in the database, unexpectedly."
A156106:
  code: A156106
  message: "The key type '{Key Type}' cannot have a public key."
A156107:
  code: A156107
  message: "Failed to convert a JWK to a PublicKey."
A156301:
  code: A156301
  message: "Client authentication failed because the client application (ID = {Client ID}) has registered neither 'jwks_uri' nor 'jwks'."
A156302:
  code: A156302
  message: "Failed to parse the JWK Set of the client application (ID = {Client ID}) fetched from the location pointed to by 'jwks_uri' ({URL}) as JWKSet."
A156303:
  code: A156303
  message: "The client application (ID = {Client ID}) has not registered its JWK Set."
A156304:
  code: A156304
  message: "The registered JWK Set of the client application (ID = {Client ID}) does not contain the key for client authentication. (kid={Key ID})"
A156305:
  code: A156305
  message: "The JWK Set of the client application (ID = {Client ID}) pointed to by 'jwks_uri' ({URL}) does not contain the key for client authentication. (kid={Key ID})"
A156306:
  code: A156306
  message: "The registered JWK Set of the client application (ID = {Client ID}) contains multiple candidate keys for client authentication. (kid={Key ID})"
A156307:
  code: A156307
  message: "The JWK Set of the client application (ID = {Client ID}) pointed to by 'jwks_uri' ({URL}) contains multiple candidate keys for client authentication. (kid={Key ID})"
A156308:
  code: A156308
  message: "A key ID or an algorithm must be specified to look up a JWK for client assertion signature verification."
A157101:
  code: A157101
  message: "Failed to create a validator for certificate path."
A157102:
  code: A157102
  message: "Something went wrong during client certificate path validation."
A157301:
  code: A157301
  message: "The client type of the client is 'confidential' but the client authentication method is 'none'."
A157302:
  code: A157302
  message: "The client type of the client is 'public' but the client authentication method is not 'none'."
A157303:
  code: A157303
  message: "The request contains data for client authentication although the client type is 'public' and the client authentication method is 'none'."
A157304:
  code: A157304
  message: "The client authentication method is '{Client Authentication Method}' but the request does not include a client secret."
A157305:
  code: A157305
  message: "The client secret presented by the client does not match the expected one."
A157306:
  code: A157306
  message: "The client authentication method is '{Client Authentication Method}' but the signature algorithm is not available."
A157307:
  code: A157307
  message: "The client authentication method is 'client_secret_jwt' but the configured signature algorithm is not symmetric (signature algorithm = {Signature Algorithm})."
A157308:
  code: A157308
  message: "The client authentication method is 'private_key_jwt' but the configured signature algorithm is not asymmetric (signature algorithm = {Signature Algorithm})."
A157309:
  code: A157309
  message: "The request does not contain 'client_assertion_type' parameter."
A157310:
  code: A157310
  message: "The value of the client assertion type is not supported (assertion type = {Assertion Type})."
A157311:
  code: A157311
  message: "The request does not contain 'client_assertion' parameter."
A157312:
  code: A157312
  message: "The client assertion is malformed."
A157313:
  code: A157313
  message: "The signature algorithm of the JWT for client authentication is invalid (signature algorithm = {Signature Algorithm})."
A157314:
  code: A157314
  message: "The payload of the client assertion is malformed."
A157315:
  code: A157315
  message: "The value of the 'iss' claim of the client assertion is invalid (iss = {\"iss\" Claim Value}, expected issuer = {Expected Issuer})."
A157316:
  code: A157316
  message: "The value of the 'sub' claim of the client assertion is invalid (sub = {\"sub\" Claim Value}, expected subject = {Expected Subject})."
A157317:
  code: A157317
  message: "Valid values for the 'aud' claim must not be empty."
A157318:
  code: A157318
  message: "The 'aud' claim of the client assertion is invalid (aud = {\"aud\" Claim Value}, valid audiences = {Valid Audiences})."
A157319:
  code: A157319
  message: "The expiration time ('exp') of the client assertion is not found."
A157320:
  code: A157320
  message: "The expiration time ('exp') of the client assertion is invalid (expiration time = {Expiration Time})."
A157321:
  code: A157321
  message: "The not-before time ('nbf') of the client assertion is not found."
A157322:
  code: A157322
  message: "The not-before time ('nbf') of the client assertion is invalid (not-before time = {Not-before Time})."
A157323:
  code: A157323
  message: "The issue time ('iat') of the client assertion points to the future (issue time = {Issue Time})."
A157324:
  code: A157324
  message: "A JWT ID ('jti') is not found in the client assertion."
A157325:
  code: A157325
  message: "The JWK for client assertion signature verification is empty."
A157326:
  code: A157326
  message: "The signature of the JWT for client authentication is invalid."
A157327:
  code: A157327
  message: "The request does not contain a client certificate."
A157328:
  code: A157328
  message: "The client certificate is malformed."
A157329:
  code: A157329
  message: "The request does not contain a JWK which contains the registered self-signed certificate."
A157330:
  code: A157330
  message: "The JWK which contains the registered self-signed certificate does not have 'x5c' claim or the value of the claim is empty."
A157331:
  code: A157331
  message: "The DER expression of the client certificate that the client presented is not available."
A157332:
  code: A157332
  message: "The DER expression of the registered client certificate is not available."
A157333:
  code: A157333
  message: "The DER of the presented self-signed certificate and the DER of the registered self-signed certificate do not match."
A157334:
  code: A157334
  message: "The certificate presented by the client is not an X.509 certificate."
A157335:
  code: A157335
  message: "Trusted root certificates are not registered although validation of certificate chain is required."
A157336:
  code: A157336
  message: "A registered root certificate is malformed."
A157337:
  code: A157337
  message: "A registered root certificate is not an X.509 certificate."
A157338:
  code: A157338
  message: "Failed to generate a certificate path."
A157339:
  code: A157339
  message: "The client certificate path was invalid."
A157340:
  code: A157340
  message: "A subject DN or SAN of the client certificate is not registered."
A157341:
  code: A157341
  message: "The subject DN of the presented client certificate is malformed."
A157342:
  code: A157342
  message: "The subject DN of the registered client certificate is malformed."
A157343:
  code: A157343
  message: "The subject DN of the presented client certificate ('{Presented DN}') and the registered subject DN ('{Registered DN}') do not match."
A157344:
  code: A157344
  message: "The client authentication method '{Client Authentication Method}' is not supported."
A157345:
  code: A157345
  message: "The client has multiple certificate subject types registered, only one is allowed at a time."
A157346:
  code: A157346
  message: "The subject alternative name DNS entry of the presented client certificate ('{Present SAN values}') did not match the registered subject alternative name DNS entry of the client ('{Registered SAN value}')."
A157347:
  code: A157347
  message: "The subject alternative name URI of the presented client certificate ('{Present SAN values}') did not match the registered subject alternative name URI of the client ('{Registered SAN value}')."
A157348:
  code: A157348
  message: "The subject alternative name IP address of the presented client certificate ('{Present SAN values}') did not match the registered subject alternative name IP address of the client ('{Registered SAN value}')."
A157349:
  code: A157349
  message: "The subject alternative name email address of the presented client certificate ('{Present SAN values}') did not match the registered subject alternative name email address of the client ('{Registered SAN value}')."
A157350:
  code: A157350
  message: "The subject alternative name entry of the presented client certificate is malformed."
A157351:
  code: A157351
  message: "The subject alternative name type field of the presented client certificate is malformed."
A157352:
  code: A157352
  message: "The subject alternative name of the presented client certificate is malformed."
A158301:
  code: A158301
  message: "The request contains multiple 'client_secret' parameters."
A158302:
  code: A158302
  message: "The request does not contain 'client_assertion_type' parameter."
A158303:
  code: A158303
  message: "The value of 'client_assertion_type' in the request is empty."
A158304:
  code: A158304
  message: "The request contains multiple 'client_assertion_type' parameters."
A158305:
  code: A158305
  message: "The request contains multiple 'client_assertion' parameters."
A159102:
  code: A159102
  message: "Failed to get the list of access tokens from the database."
A159201:
  code: A159201
  message: "Parameter 'start' failed to be parsed as int."
A159202:
  code: A159202
  message: "Parameter 'start' must not be negative."
A159203:
  code: A159203
  message: "Parameter 'end' failed to be parsed as int."
A159204:
  code: A159204
  message: "Parameter 'end' must not be negative."
A159205:
  code: A159205
  message: "The requested number of access tokens to be returned from this endpoint exceeds the maximum number (%d)."
A160001:
  code: A160001
  message: "The JOSE is valid."
A160101:
  code: A160101
  message: "JWE is not supported."
A160102:
  code: A160102
  message: "Failed to create a signature verifier for the symmetric algorithm ('{Algorithm}') specified in the JWS header."
A160103:
  code: A160103
  message: "Failed to get the service's JWK Set."
A160104:
  code: A160104
  message: "The service's JWK Set is not found."
A160105:
  code: A160105
  message: "Failed to create a signature verifier for the RSA algorithm ({Algorithm}) from the JWK (kid = {Key ID})."
A160106:
  code: A160106
  message: "Failed to create a signature verifier for the EC algorithm ({Algorithm}) from the JWK (kid = {Key ID})."
A160107:
  code: A160107
  message: "Failed to create a signature verifier for the unsupported algorithm ({Algorithm})."
A160108:
  code: A160108
  message: "Failed to get the client JWK Set."
A160109:
  code: A160109
  message: "The client's JWK Set is not found."
A160110:
  code: A160110
  message: "Failed to verify the signature."
A160111:
  code: A160111
  message: "Failed to create a signature verifier for the unsupported ED algorithm ({Algorithm}) from the JWK (kid = {Key ID})."
A160201:
  code: A160201
  message: "The 'jose' request parameter is missing or empty."
A160202:
  code: A160202
  message: "Failed to parse the value of the 'jose' request parameter as JOSE."
A160203:
  code: A160203
  message: "The payload of the JOSE object couldn't be parsed as JSON although some claims were declared as mandatory."
A160204:
  code: A160204
  message: "The mandatory claim '{Claim}' is missing."
A160205:
  code: A160205
  message: "The value of the claim '{Claim}' is not an integer."
A160206:
  code: A160206
  message: "The expiration time of the JOSE has been reached: exp = {Expiration Time}, current time = {Current Time}, clock skew = {Clock Skew}"
A160207:
  code: A160207
  message: "The issue time exceeds the current time: iat = {Issued At}, current time = {Current Time}, clock skew = {Clock Skew}"
A160208:
  code: A160208
  message: "The current time has not reached the time before which the JOSE must be regarded as invalid: nbf = {Not Before}, current time = {Current Time}, clock skew = {Clock Skew}"
A160209:
  code: A160209
  message: "The JWS does not have a valid header."
A160210:
  code: A160210
  message: "The JWS header does not have a valid 'alg' parameter."
A160211:
  code: A160211
  message: "The 'alg' value ('{Algorithm}') in the JWS header is not supported."
A160212:
  code: A160212
  message: "The unsecured JWS does not have a valid payload."
A160213:
  code: A160213
  message: "The JWS does not have a valid payload."
A160214:
  code: A160214
  message: "The value of the claim '{Claim}' is not a string."
A160215:
  code: A160215
  message: "The identifier of the client application is necessary for verification but it is not available."
A160216:
  code: A160216
  message: "Failed to get information about the client application (identifier = '{Client Identifier}')."
A160217:
  code: A160217
  message: "Cannot verify the signature because the shared symmetric key based on the client secret cannot be computed."
A160218:
  code: A160218
  message: "The service's JWK Set has not been registered."
A160219:
  code: A160219
  message: "The signature of the JOSE object is invalid."
A160220:
  code: A160220
  message: "Cannot determine a JWK because there are multiple JWKs that match the conditions for signature verification. (alg = {Algorithm}, kid = {Key ID})"
A160221:
  code: A160221
  message: "Could not find any appropriate JWK for signature verification in the {client|service}'s JWK Set. (alg = {Algorithm}, kid = {Key ID})"
A160301:
  code: A160301
  message: "The client's JWK Set has not been registered."
A161001:
  code: A161001
  message: "The token was deleted successfully."
A161101:
  code: A161101
  message: "Failed to get the information about the token from the database."
A161102:
  code: A161102
  message: "Failed to delete the token."
A161201:
  code: A161201
  message: "No token identifier is specified."
A161202:
  code: A161202
  message: "The specified token does not exist."
A161203:
  code: A161203
  message: "The specified token does not belong to the service."
A162101:
  code: A162101
  message: "onFetchFailed() was called for a private key."
A162102:
  code: A162102
  message: "onParseFailed() was called for a private key."
A162103:
  code: A162103
  message: "onCacheFailed() was called for a private key."
A162104:
  code: A162104
  message: "onNoService() was called for a private key."
A162105:
  code: A162105
  message: "The JWK Set of the service is marked as hosted but not found in the database table."
A162106:
  code: A162106
  message: "onNoJwks() was called for a private key with hosted=false."
A162107:
  code: A162107
  message: "onNoKey() was called for a private key with hosted=false."
A162108:
  code: A162108
  message: "onMultipleKeys() was called for a private key with hosted=false."
A162109:
  code: A162109
  message: "Failed to convert a JWK to a PrivateKey."
A162201:
  code: A162201
  message: "Cannot get the service's private key because the service has not registered its JWK Set."
A162202:
  code: A162202
  message: "Cannot get the service's private key because the service has not registered its JWK Set. The current implementation does not refer to a JWK Set pointed to by 'jwks_uri' for private keys."
A162203:
  code: A162203
  message: "The registered JWK Set of this service does not contain the private key."
A162204:
  code: A162204
  message: "The registered JWK Set of this service contains multiple candidate private keys."
A162205:
  code: A162205
  message: "The key type ('{Key Type}') cannot have a private key."
A163101:
  code: A163101
  message: "Failed to fetch the JWK Set of the client application (ID = {Client ID}) from '%s'."
A163102:
  code: A163102
  message: "Failed to put the JWK Set of the client application (ID = {Client ID}) into the database table."
A163103:
  code: A163103
  message: "The JWK Set of the client application (ID = {Client ID}) was not found in the database."
A163104:
  code: A163104
  message: "Failed to convert a JWK to a PublicKey."
A163301:
  code: A163301
  message: "The client application (ID = {Client ID}) has registered neither 'jwks_uri' nor 'jwks'."
A163302:
  code: A163302
  message: "Failed to parse the JWK Set of the client application (ID = {Client ID}) which was fetched from '{URI}'."
A163303:
  code: A163303
  message: "The client application (ID = {Client ID}) was not found in the database."
A163304:
  code: A163304
  message: "The client application (ID = {Client ID}) has not registered its JWK Set."
A163305:
  code: A163305
  message: "The registered JWK Set of the client application (ID = {Client ID}) does not contain the public key."
A163306:
  code: A163306
  message: "The JWK Set of the client application (ID = {Client ID}) pointed to by 'jwks_uri' ({URI}) does not contain the public key."
A163307:
  code: A163307
  message: "The registered JWK Set of the client application (ID = {Client ID}) contains multiple candidate public keys."
A163308:
  code: A163308
  message: "The JWK Set of the client application (ID = {Client ID}) pointed to by 'jwks_uri' ({URI}) contains multiple candidate public keys."
A163309:
  code: A163309
  message: "The key type ('{Key Type}') cannot have a public key."
A164101:
  code: A164101
  message: "Failed to sign the JWS with the algorithm ('{Signature Algorithm}')."
A164102:
  code: A164102
  message: "Cannot sign the JWS because the algorithm ('{Signature Algorithm}') is not supported."
A164103:
  code: A164103
  message: "Failed to create a JWS signer for the algorithm ('{Signature Algorithm}')."
A164104:
  code: A164104
  message: "Failed to encrypt the JWE with the algorithm ('{Encryption Algorithm}') and the method ('{Encryption Method}')."
A164105:
  code: A164105
  message: "Cannot encrypt the JWE because the algorithm ('{Encryption Algorithm}') is not supported."
A164106:
  code: A164106
  message: "Failed to create a JWE encrypter for the algorithm ('{Encryption Algorithm}')."
A164107:
  code: A164107
  message: "Failed to generate a JOSE (JWS alg = {Signature Algorithm}, JWE alg = {Encryption Algorithm}, JWE enc = {Encryption Method})."
A164201:
  code: A164201
  message: "The key of the algorithm ('{Signature Algorithm}') to sign the JWS with is not available."
A164301:
  code: A164301
  message: "The key of the algorithm ('{Encryption Algorithm}') to encrypt the JWE with is not available."
A165101:
  code: A165101
  message: "Failed to get information about the client application (ID = {Client ID})."
A165301:
  code: A165301
  message: "There is no client application that has the client ID ('{Client ID}')."
A166201:
  code: A166201
  message: "The API call does not contain the 'parameters' request parameter."
A166202:
  code: A166202
  message: "The format of the 'parameters' request parameter passed to this API does not conform to application/x-www-form-urlencoded."
A166301:
  code: A166301
  message: "The request does not contain any request parameters."
A166302:
  code: A166302
  message: "The request parameter '%s' is missing."
A166303:
  code: A166303
  message: "The value of the request parameter '%s' is empty."
A166304:
  code: A166304
  message: "The request parameter '%s' is included in the request more than once."
A166305:
  code: A166305
  message: "The grant type '%s' is not supported by this service."
A166306:
  code: A166306
  message: "The client does not declare that it will use the grant type '%s'."
A167101:
  code: A167101
  message: "Failed to get the JWK Set of the client application (ID = {Client ID})."
A167102:
  code: A167102
  message: "The JWK Set of the client application is not found (ID = {Client ID})."
A167103:
  code: A167103
  message: "Failed to create a signature verifier from a JWK whose algorithm is '{Signature Algorithm}' and key ID is '{Key ID}'."
A167104:
  code: A167104
  message: "Cannot create a signature verifier for the algorithm ('{Signature Algorithm}')."
A167301:
  code: A167301
  message: "When a backchannel authentication request contains the 'request' request parameter, other CIBA request parameters such as '{Request Parameter}' must not be present outside the JWT."
A167302:
  code: A167302
  message: "The value of the 'request' request parameter contained in the backchannel authentication request failed to be parsed as JOSE."
A167303:
  code: A167303
  message: "A request object included in a backchannel authentication request must be signed."
A167304:
  code: A167304
  message: "A request object included in a backchannel authentication request must not be encrypted."
A167305:
  code: A167305
  message: "The payload of the request object included in the backchannel authentication request failed to be parsed as JSON."
A167306:
  code: A167306
  message: "The request object included in the backchannel authentication request does not contain the 'iss' claim or its value is empty."
A167307:
  code: A167307
  message: "Failed to find a client application whose ID matches the value of the 'iss' claim in the request object included in the backchannel authentication request."
A167308:
  code: A167308
  message: "The signature algorithm of a request object included in a backchannel authentication request must be asymmetric."
A167309:
  code: A167309
  message: "Use of the 'request' request parameter is not allowed because the 'backchannel_authentication_request_signing_alg' metadata of the client is not set."
A167310:
  code: A167310
  message: "The signature algorithm ('{Signature Algorithm}') of the request object included in the backchannel authentication request is different from the value ('{Signature Algorithm}') of the 'backchannel_authentication_request_signing_alg' metadata of the client."
A167311:
  code: A167311
  message: "Cannot verify the signature of the request object included in the backchannel authentication request because the client application has not registered its JWK Set."
A167312:
  code: A167312
  message: "Cannot find any appropriate JWK to verify the signature of the request object included in the backchannel authentication request with. (alg = '{Signature Algorithm}', kid = '{Key ID}')"
A167313:
  code: A167313
  message: "Cannot determine a JWK to verify the signature of the request object included in the backchannel authentication request with because there exist multiple JWKs that satisfy the conditions. (alg = '{Signature Algorithm}', kid = '{Key ID}')"
A167314:
  code: A167314
  message: "The signature of the request object included in the backchannel authentication request is invalid."
A167315:
  code: A167315
  message: "The request object included in the backchannel authentication request does not contain the '{Claim Name}' claim."
A167316:
  code: A167316
  message: "The value of the '{Claim Name}' claim in the request object included in the backchannel authentication request is null."
A167317:
  code: A167317
  message: "The value of the '{Claim Name}' claim in the request object included in the backchannel authentication request failed to be parsed as an integer."
A167318:
  code: A167318
  message: "The request object included in the backchannel authentication request has expired."
A167319:
  code: A167319
  message: "The 'iat' claim in the request object included in the backchannel authentication request claims that the JWT has issued in the future."
A167320:
  code: A167320
  message: "The 'nbf' claim in the request object included in the backchannel authentication request indicates that the JWT has not become valid yet."
A167321:
  code: A167321
  message: "The value of the 'aud' claim in a request object in a backchannel authentication request must match the issuer identifier of the OpenID provider."
A167322:
  code: A167322
  message: "Request parameters related to client authentication such as '{Request Parameter}' must be outside the JWT specified by the 'request' request parameter."
A167323:
  code: A167323
  message: "The value of the '{Claim Name}' claim in the request object included in the backchannel authentication request failed to be parsed as a string."
A167324:
  code: A167324
  message: "The value of the 'aud' claim in a request object in a backchannel authentication request must contain the issuer identifier of the OpenID provider."
A167325:
  code: A167325
  message: "The signature of the request object included in the backchannel authentication request couldn't be verified."
A167326:
  code: A167326
  message: "The type of the 'request_context' claim in the request object included in the backchannel authentication request is not a JSON object."
A168301:
  code: A168301
  message: "Failed to parse the 'client_assertion' request parameter as JWS."
A168302:
  code: A168302
  message: "Failed to extract the value of the 'iss' claim from the 'client_assertion'."
A168303:
  code: A168303
  message: "The client ID used in the Authorization header does not match the value of the 'client_id' request parameter."
A168304:
  code: A168304
  message: "The 'iss' claim in the 'request' does not match the value of the 'client_id' request parameter."
A168305:
  code: A168305
  message: "The 'iss' claim in the 'client_assertion' does not match the value of the 'client_id' request parameter."
A168306:
  code: A168306
  message: "The client ID used in the Authorization header does not match the 'iss' claim in the 'request'."
A168307:
  code: A168307
  message: "The client ID used in the Authorization header does not match the 'iss' claim in the 'client_assertion'."
A168308:
  code: A168308
  message: "The 'iss' claim in the 'request' does not match the 'iss' claim in the 'client_assertion'."
A168309:
  code: A168309
  message: "The backchannel authentication request does not include any clue to identify the client application with. Adding the 'client_id' request parameter may solve this problem."
A168310:
  code: A168310
  message: "Information about the client application having the client ID '%s' was not found."
A168311:
  code: A168311
  message: "Public clients are not allowed to use the CIBA flow."
A169301:
  code: A169301
  message: "The backchannel token delivery mode of the client application is not set."
A169302:
  code: A169302
  message: "The backchannel token delivery mode ('{Delivery Mode}') of the client is not supported by the server."
A170101:
  code: A170101
  message: "IdP initialization must include an 'issuer'."
A170102:
  code: A170102
  message: "Unable to generate a keypair."
A171101:
  code: A171101
  message: "A 'clientId' must be supplied when creating a service access token."
A171102:
  code: A171102
  message: "The 'clientId' was malformed ('{Client ID}')."
A171103:
  code: A171103
  message: "The client does not exist ('{Client ID}')."
A171104:
  code: A171104
  message: "The service owner for the IdP service could not be found ('{Service owner number}')."
A171105:
  code: A171105
  message: "There must be an internal service set up for the IdP but none was configured."
A171106:
  code: A171106
  message: "The internal IdP service cannot be found ('{Service number}')."
A172101:
  code: A172101
  message: "The API access token was either missing or did not contain the correct information."
A172102:
  code: A172102
  message: "The request must contain an 'email' address for the service owner."
A173101:
  code: A173101
  message: "Failed to get the list of supported ACR values from the database."
A173102:
  code: A173102
  message: "Failed to get information about default ACR values from the database."
A173301:
  code: A173301
  message: "The ACR value '{ACR Value}' required by the backchannel authentication request is ignored because it is not registered as a supported ACR value."
A173401:
  code: A173401
  message: "Because the 'acr_values' parameter was omitted, the default set of ACR values is implicitly used: {Default ACR Values}"
A174301:
  code: A174301
  message: "The backchannel authentication request does not contain any hint."
A174302:
  code: A174302
  message: "The backchannel authentication request contains multiple hints."
A175301:
  code: A175301
  message: "The value of the 'id_token_hint' request parameter contained in the backchannel authentication request failed to be parsed as JOSE."
A175302:
  code: A175302
  message: "The value of the 'id_token_hint' request parameter contained in the backchannel authentication request is not signed."
A175303:
  code: A175303
  message: "Encrypted ID tokens are not allowed to be used as 'id_token_hint'."
A175304:
  code: A175304
  message: "The payload of the 'id_token_hint' failed to be parsed as JSON."
A175305:
  code: A175305
  message: "The payload of the 'id_token_hint' does not contain the 'iss' claim."
A175306:
  code: A175306
  message: "The value of the 'iss' claim in the 'id_token_hint' is different from the issuer identifier of this server."
A175307:
  code: A175307
  message: "The payload of the 'id_token_hint' does not contain the 'aud' claim."
A175308:
  code: A175308
  message: "The 'aud' claim in the 'id_token_hint' does not contain the client ID."
A175309:
  code: A175309
  message: "The value of the 'aud' claim in the 'id_token_hint' does not match the client ID."
A175310:
  code: A175310
  message: "The payload of the 'id_token_hint' does not contain the 'sub' claim."
A176101:
  code: A176101
  message: "Failed to get custom scope records from the database."
A176102:
  code: A176102
  message: "Failed to get the client extension data from the database."
A176103:
  code: A176103
  message: "Could not find the client extension data of the client. (extension number = {Extension Number})"
A176104:
  code: A176104
  message: "Failed to get scope attributes from the database."
A176105:
  code: A176105
  message: "The mandatory scope '{Scope Name}' is not supported by the server."
A176301:
  code: A176301
  message: "The backchannel authentication request does not contain the 'scope' request parameter or its value is empty."
A176302:
  code: A176302
  message: "The client application is not allowed to request the '{Scope Name}' scope, so the scope is ignored."
A176303:
  code: A176303
  message: "The '{Scope Name}' scope is not supported by the server, so the scope is ignored."
A176304:
  code: A176304
  message: "The backchannel authentication request does not include the mandatory scope '{Scope Name}'."
A176305:
  code: A176305
  message: "The client application is not allowed to request the mandatory scope '{Scope Name}'."
A176306:
  code: A176306
  message: "The '{Claim Name}' claim is being requested by the '{Scope Name}' scope but won't be processed because the claim is not supported by the server."
A176307:
  code: A176307
  message: "The value of the 'scope' request parameter is too long."
A176401:
  code: A176401
  message: "Because the 'scope' parameter was omitted, the default scope set is implicitly used: {Default Scopes}"
A177301:
  code: A177301
  message: "The backchannel authentication request does not include a user code."
A178101:
  code: A178101
  message: "Failed to insert a new record into the 'bc_auth' table."
A179001:
  code: A179001
  message: "The backchannel authentication request was processed successfully."
A180101:
  code: A180101
  message: "Failed to compute the thumbprint of the client certificate used in the backchannel authentication request."
A180301:
  code: A180301
  message: "The backchannel authentication request does not include a client certificate although certificate binding is enabled and the token delivery mode is 'push'."
A180302:
  code: A180302
  message: "The client certificate used in the backchannel authentication request failed to be parsed as a certificate."
A181201:
  code: A181201
  message: "The ticket does not exist."
A181202:
  code: A181202
  message: "The ticket does not belong to this service."
A181203:
  code: A181203
  message: "The ticket has already expired."
A181204:
  code: A181204
  message: "The ticket has already been consumed by /api/backchannel/authentication/complete API."
A181205:
  code: A181205
  message: "The ticket has already been used to issue an auth_req_id by the previous API call."
A182101:
  code: A182101
  message: "Failed to issue an 'auth_req_id' due to a database error."
A182201:
  code: A182201
  message: "The request to /api/backchannel/authentication/issue API does not contain the 'ticket' request parameter or its value is empty."
A182401:
  code: A182401
  message: "Failed to delete an expired record from the 'bc_auth' table."
A182402:
  code: A182402
  message: "Deleting the expired record from the 'bc_auth' table."
A183001:
  code: A183001
  message: "An auth_req_id was issued successfully."
A185001:
  code: A185001
  message: "Successfully generated an error response for the backchannel authentication request."
A186101:
  code: A186101
  message: "Failed to get the record for the ticket from the database."
A186201:
  code: A186201
  message: "The 'ticket' request parameter is missing or its value is empty."
A186202:
  code: A186202
  message: "No record that holds the ticket."
A186203:
  code: A186203
  message: "The ticket does not belong to the service."
A187201:
  code: A187201
  message: "The mandatory request parameter 'result' is missing."
A188201:
  code: A188201
  message: "The 'subject' request parameter is missing or its value is empty."
A188202:
  code: A188202
  message: "The length of the 'subject' request parameter exceeds the maximum length ({Number})."
A188203:
  code: A188203
  message: "The value of the 'subject' request parameter contains non-ASCII letters."
A189201:
  code: A189201
  message: "The length of the 'sub' request parameter exceeds the maximum length ({Number})."
A189202:
  code: A189202
  message: "The value of the 'sub' request parameter contains non-ASCII letters."
A190201:
  code: A190201
  message: "The value of the 'claims' request parameter failed to be parsed as JSON."
A190202:
  code: A190202
  message: "The size of the 'claims' is too big."
A191201:
  code: A191201
  message: "The size of the 'properties' is too big."
A192101:
  code: A192101
  message: "Failed to get custom scope records from the database."
A192102:
  code: A192102
  message: "Failed to get the client extension data from the database."
A192103:
  code: A192103
  message: "Could not find the client extension data of the client. (extension number = {Number})"
A192104:
  code: A192104
  message: "Failed to get scope attributes from the database."
A192105:
  code: A192105
  message: "Failed to get information about the client application from the database."
A192301:
  code: A192301
  message: "The list of requested scopes is too long."
A193201:
  code: A193201
  message: "The value of the 'errorDescription' request parameter is too long."
A193202:
  code: A193202
  message: "The value of the 'errorUri' request parameter is too long."
A193203:
  code: A193203
  message: "The value of the 'errorUri' request parameter contains non-ASCII letters."
A194201:
  code: A194201
  message: "The length of the 'acr' request parameter exceeds the maximum length ({Number})."
A194202:
  code: A194202
  message: "The value of the 'acr' request parameter contains non-ASCII letters."
A195201:
  code: A195201
  message: "The value of the 'authTime' request parameter must not be negative."
A196101:
  code: A196101
  message: "Failed to generate an ID token: {Error Message}"
A196201:
  code: A196201
  message: "The ticket is not found."
A196202:
  code: A196202
  message: "The ticket has already expired."
A196203:
  code: A196203
  message: "The ticket has already been consumed by the previous API call."
A196204:
  code: A196204
  message: "No auth_req_id has been issued for the ticket. Call /api/backchannel/authentication/issue API with the ticket in advance before calling this API."
A196205:
  code: A196205
  message: "Failed to prepare a JWT-based access token: {Error Message}"
A197101:
  code: A197101
  message: "Failed to generate an ID token: {Error Message}"
A197102:
  code: A197102
  message: "Failed to update the database record."
A197301:
  code: A197301
  message: "The algorithm for signing ID tokens must not be 'none'."
A197401:
  code: A197401
  message: "Failed to delete an expired record from the 'bc_auth' table."
A197402:
  code: A197402
  message: "Deleting the expired record from the 'bc_auth' table."
A197403:
  code: A197403
  message: "Deleting the record from the 'bc_auth' table because it is no longer needed."
A198001:
  code: A198001
  message: "Successfully updated the database so that the token endpoint can generate tokens (mode = {Delivery Mode}, result = {Result})."
A198002:
  code: A198002
  message: "Successfully updated the database so that the token endpoint can generate an error response (mode = {Delivery Mode}, result = {Result})."
A198003:
  code: A198003
  message: "Successfully generated tokens that are to be delivered to the client notification endpoint (mode = {Delivery Mode}, result = {Result})."
A198004:
  code: A198004
  message: "Successfully prepared an error content that is to be reported to the client notification endpoint (mode = {Delivery Mode}, result = {Result})."
A199101:
  code: A199101
  message: "Failed to get information about the client from the database."
A199301:
  code: A199301
  message: "The client that has made the backchannel authentication request does not exist any longer."
A200001:
  code: A200001
  message: "Generated an error response corresponding to the result ({Result}) given to the /api/backchannel/authentication/complete API."
A200002:
  code: A200002
  message: "The token request (grant_type=urn:openid:params:grant-type:ciba) was processed successfully."
A200101:
  code: A200101
  message: "Failed to get the record holding the auth_req_id from the database."
A200102:
  code: A200102
  message: "Failed to generate an ID token."
A200103:
  code: A200103
  message: "Failed to insert a new access token into the database."
A200201:
  code: A200201
  message: "The total size of 'properties' is too big."
A200202:
  code: A200202
  message: "Failed to prepare a JWT-based access token: {Error Message}"
A200301:
  code: A200301
  message: "The token request does not contain 'auth_req_id' parameter."
A200302:
  code: A200302
  message: "The value of 'auth_req_id' in the token request is empty."
A200303:
  code: A200303
  message: "The token request contains multiple 'auth_req_id' parameters."
A200304:
  code: A200304
  message: "The 'auth_req_id' does not exist."
A200305:
  code: A200305
  message: "The client is not the owner of the 'auth_req_id'."
A200306:
  code: A200306
  message: "The 'auth_req_id' cannot be used at the token endpoint because it has issued in the 'push' mode."
A200307:
  code: A200307
  message: "The 'auth_req_id' has expired."
A200308:
  code: A200308
  message: "The end-user has not been authenticated yet."
A200309:
  code: A200309
  message: "The algorithm for signing ID tokens must not be 'none'."
A200310:
  code: A200310
  message: "The auth_req_id for token issuance was consumed by another transaction, so tokens are not issued."
A200401:
  code: A200401
  message: "The response from Authlete's /api/auth/token endpoint (grant_type=urn:openid:params:grant-type:ciba): {Message}"
A201301:
  code: A201301
  message: "The value of the 'requested_expiry' request parameter is not an integer."
A201302:
  code: A201302
  message: "The value of the 'requested_expiry' request parameter must be a positive integer."
A202001:
  code: A202001
  message: "The client was created with id '{client id}'."
A203301:
  code: A203301
  message: "There was an error serializing the client information."
A203302:
  code: A203302
  message: "Client metadata was empty."
A203303:
  code: A203303
  message: "Client metadata did not parse as valid JSON."
A203304:
  code: A203304
  message: "The 'jwks' claim must be a JSON object."
A203305:
  code: A203305
  message: "Custom metadata did not parse as valid JSON."
A204101:
  code: A204101
  message: "Failed to retrieve extension information of the client."
A204301:
  code: A204301
  message: "Client cannot have both 'jwks_uri' and 'jwks' properties simultaneously."
A204302:
  code: A204302
  message: "A grant type of 'authorization_code' requires at least one response type containing 'code'."
A204303:
  code: A204303
  message: "A grant type of 'implicit' requires at least one response type containing 'token' or 'id_token'."
A204304:
  code: A204304
  message: "A response type containing 'code' requires the 'authorization_code' grant type."
A204305:
  code: A204305
  message: "A response type containing 'token' or 'id_token' requires the 'implicit' grant type."
A204306:
  code: A204306
  message: "The '{claim name}' claim must be a list of strings."
A204307:
  code: A204307
  message: "The '{claim name}' claim must be a URI."
A204308:
  code: A204308
  message: "The '{claim name}' claim must be a string."
A204309:
  code: A204309
  message: "The '{claim name}' claim must be an integer."
A204310:
  code: A204310
  message: "The '{claim name}' claim must be a boolean."
A204311:
  code: A204311
  message: "The 'jwks' claim must be a JSON object."
A204312:
  code: A204312
  message: "The 'pairwise' subject type must be used with a 'sector_identifier_uri' or a single host in 'redirect_uris'."
A204313:
  code: A204313
  message: "The '{claim name}' claim must be an https URI."
A204314:
  code: A204314
  message: "The format of the custom client metadata is wrong."
A204315:
  code: A204315
  message: "The '{claim name}' claim must be a JSON object."
A205301:
  code: A205301
  message: "Software statement must be a JOSE object."
A205302:
  code: A205302
  message: "Software statement must be signed with JWS."
A205303:
  code: A205303
  message: "Software statement cannot be encrypted."
A205304:
  code: A205304
  message: "Software statement payload must be JSON."
A205305:
  code: A205305
  message: "Software statement did not pass processing rules for this service."
A205306:
  code: A205306
  message: "Software statement signature did not validate against configured keys."
A205307:
  code: A205307
  message: "Software statement claim ('{claim name}') did not match a rule."
A206201:
  code: A206201
  message: "Service ({service api key}) does not support dynamic client registration."
A207201:
  code: A207201
  message: "The service (API Key = {service api key}) does not exist."
A207202:
  code: A207202
  message: "The service (API Key = {service api key}) does not belong to the service owner."
A207203:
  code: A207203
  message: "The service (API Key = {service api key}) has been deleted."
A207204:
  code: A207204
  message: "The service (API Key = {service api key}) is locked."
A207205:
  code: A207205
  message: "Failed to parse the JWK set of the assertion processor."
A207206:
  code: A207206
  message: "Failed to create the assertion processor."
A207207:
  code: A207207
  message: "A key in the JWK Set does not supply an appropriate algorithm identifier."
A208201:
  code: A208201
  message: "The service (API Key = {service api key}) does not exist."
A208202:
  code: A208202
  message: "The service (API Key = {service api key}) does not belong to the service owner."
A208203:
  code: A208203
  message: "The service (API Key = {service api key}) has been deleted."
A208204:
  code: A208204
  message: "The service (API Key = {service api key}) is locked."
A209201:
  code: A209201
  message: "The service ({service number}) does not exist."
A209202:
  code: A209202
  message: "The service ({service number}) does not belong to the service owner."
A209203:
  code: A209203
  message: "The service ({service number}) has been deleted."
A209204:
  code: A209204
  message: "The service ({service number}) is locked."
A209205:
  code: A209205
  message: "The assertion processor entity was not found."
A210201:
  code: A210201
  message: "The service ({service number}) does not exist."
A210202:
  code: A210202
  message: "The service ({service number}) does not belong to the service owner."
A210203:
  code: A210203
  message: "The service ({service number}) has been deleted."
A210204:
  code: A210204
  message: "The service ({service number}) is locked."
A210205:
  code: A210205
  message: "Failed to parse the JWK set of the assertion processor."
A210206:
  code: A210206
  message: "Failed to update the assertion processor."
A210207:
  code: A210207
  message: "The assertion processor entity was not found."
A210208:
  code: A210208
  message: "A key in the JWK Set does not supply an appropriate algorithm identifier."
A211201:
  code: A211201
  message: "The JWK set does not exist."
A212001:
  code: A212001
  message: "The assertion processor ({assertion processor number}) was deleted."
A212201:
  code: A212201
  message: "The service ({service number}) does not exist."
A212202:
  code: A212202
  message: "The service ({service number}) does not belong to the service owner."
A212203:
  code: A212203
  message: "The service ({service number}) has been deleted."
A212204:
  code: A212204
  message: "The service ({service number}) is locked."
A212205:
  code: A212205
  message: "The assertion processor entity was not found."
A213001:
  code: A213001
  message: "The client has been updated."
A214301:
  code: A214301
  message: "The 'client_id' field must be present in the registration update request."
A214302:
  code: A214302
  message: "The 'client_id' in the registration update request ('{client id}') did not match the expected client ID ('{client id}')."
A215301:
  code: A215301
  message: "Unable to parse client ID ({client id})."
A215302:
  code: A215302
  message: "Client with id '{client id}' not found."
A215303:
  code: A215303
  message: "Client ({client id}) is not dynamically registered."
A215304:
  code: A215304
  message: "The 'client_secret' in the registration update request did not match the expected client secret."
A215305:
  code: A215305
  message: "The registration access token is not present."
A215306:
  code: A215306
  message: "The client ({client id}) has no registration access token, update function is not available."
A215307:
  code: A215307
  message: "The registration access token presented does not match the registration access token for this client ({client id})."
A216001:
  code: A216001
  message: "The client has been deleted."
A217001:
  code: A217001
  message: "The client information has been returned."
A218301:
  code: A218301
  message: "Failed to parse the 'client_assertion' request parameter as JWS."
A218302:
  code: A218302
  message: "Failed to extract the value of the 'iss' claim from the 'client_assertion'."
A218303:
  code: A218303
  message: "The client ID used in the Authorization header does not match the value of the 'client_id' request parameter."
A218304:
  code: A218304
  message: "The 'iss' claim in the 'client_assertion' does not match the value of the 'client_id' request parameter."
A218305:
  code: A218305
  message: "Information about the client application having the client ID '{Client Identifier}' was not found."
A219101:
  code: A219101
  message: "Failed to get custom scope records from the database."
A219102:
  code: A219102
  message: "Failed to get the client extension data from the database."
A219103:
  code: A219103
  message: "Could not find the client extension data of the client. (extension number = {Number})"
A219104:
  code: A219104
  message: "Failed to get scope attributes from the database."
A219301:
  code: A219301
  message: "The client application is not allowed to request the '{Scope Name}' scope, so the scope is ignored."
A219302:
  code: A219302
  message: "The '{Scope Name}' scope is not supported by this service, so the scope is ignored."
A219303:
  code: A219303
  message: "The list of requested scopes is too long."
A219304:
  code: A219304
  message: "The '{Claim Name}' claim is implied by the '{Scope Name}' scope but ignored because the service does not support the claim."
A219305:
  code: A219305
  message: "The device authorization request has no 'scope' parameter or none of the given scopes is recognized as valid, and the service's default scope set is empty. The service's configuration does not allow requests that request no scope."
A219401:
  code: A219401
  message: "Because the 'scope' parameter was omitted, the default scope set is implicitly used: {Default Scopes}"
A220001:
  code: A220001
  message: "The device authorization request was processed successfully."
A221101:
  code: A221101
  message: "Failed to insert a new record into the 'df_code' table."
A222101:
  code: A222101
  message: "This service has not set up the verification URI yet, so Device Flow cannot be used."
A222102:
  code: A222102
  message: "This service has not set up duration of verification codes yet, so Device Flow cannot be used."
A223101:
  code: A223101
  message: "Failed to build verification_uri_complete from the template '{URI}': {Error Message}"
A223201:
  code: A223201
  message: "Because the template URI '{URI}' does not contain the placeholder '{Placeholder}' for a user code, verification_uri_complete is not included in the response from the device authorization endpoint."
A224001:
  code: A224001
  message: "The user code is valid."
A225101:
  code: A225101
  message: "Failed to get the record for the user code from the database."
A225102:
  code: A225102
  message: "Failed to delete the record for the expired user code from the database (but this error is not critical)."
A225201:
  code: A225201
  message: "The API call to /api/device/verification does not have the 'userCode' parameter or its value is empty."
A225301:
  code: A225301
  message: "No record for the user code exists in the database."
A225302:
  code: A225302
  message: "The database record for the user code does not belong to this service."
A225303:
  code: A225303
  message: "The user code has already expired."
A226101:
  code: A226101
  message: "Failed to get custom scope records from the database."
A226102:
  code: A226102
  message: "Failed to get scope attributes from the database."
A227101:
  code: A227101
  message: "Failed to get the record for the user code from the database."
A227102:
  code: A227102
  message: "Failed to delete the record for the expired user code from the database (but this error is not critical)."
A227201:
  code: A227201
  message: "The API call to /api/device/complete does not have the 'userCode' parameter or its value is empty."
A227301:
  code: A227301
  message: "No record for the user code exists in the database."
A227302:
  code: A227302
  message: "The database record for the user code does not belong to this service."
A227303:
  code: A227303
  message: "The user code has already expired."
A228201:
  code: A228201
  message: "The mandatory request parameter 'result' is missing."
A229101:
  code: A229101
  message: "Failed to get information about the client from the database."
A229301:
  code: A229301
  message: "The client that has made the device authorization request does not exist any longer."
A230201:
  code: A230201
  message: "The 'subject' request parameter is missing or its value is empty."
A230202:
  code: A230202
  message: "The length of the 'subject' request parameter exceeds the maximum length ({Number})."
A230203:
  code: A230203
  message: "The value of the 'subject' request parameter contains non-ASCII letters."
A231201:
  code: A231201
  message: "The length of the 'sub' request parameter exceeds the maximum length ({Number})."
A231202:
  code: A231202
  message: "The value of the 'sub' request parameter contains non-ASCII letters."
A232201:
  code: A232201
  message: "The value of the 'authTime' request parameter must not be negative."
A233201:
  code: A233201
  message: "The length of the 'acr' request parameter exceeds the maximum length ({Number})."
A233202:
  code: A233202
  message: "The value of the 'acr' request parameter contains non-ASCII letters."
A234201:
  code: A234201
  message: "The value of the 'claims' request parameter failed to be parsed as JSON."
A234202:
  code: A234202
  message: "The size of the 'claims' is too big."
A235201:
  code: A235201
  message: "The size of the 'properties' is too big."
A236201:
  code: A236201
  message: "The value of the 'errorDescription' request parameter is too long."
A236202:
  code: A236202
  message: "The value of the 'errorUri' request parameter is too long."
A236203:
  code: A236203
  message: "The value of the 'errorUri' request parameter contains non-ASCII letters."
A237101:
  code: A237101
  message: "Failed to get custom scope records from the database."
A237102:
  code: A237102
  message: "Failed to get the client extension data from the database."
A237103:
  code: A237103
  message: "Could not find the client extension data of the client. (extension number = {Number})"
A237104:
  code: A237104
  message: "Failed to get scope attributes from the database."
A237105:
  code: A237105
  message: "Failed to get information about the client application from the database."
A237301:
  code: A237301
  message: "The list of requested scopes is too long."
A238101:
  code: A238101
  message: "Failed to get information about supported ACR values from the database."
A238102:
  code: A238102
  message: "Failed to get information about default ACR values from the database."
A238301:
  code: A238301
  message: "The list of requested ACRs is too long."
A238302:
  code: A238302
  message: "The ACR value '{ACR Value}' is not supported by this service, so it is ignored."
A238401:
  code: A238401
  message: "Because the 'acr_values' parameter was omitted, the default set of ACR values is implicitly used: {Default ACR Values}"
A239201:
  code: A239201
  message: "The user code has already been consumed by another transaction."
A239202:
  code: A239202
  message: "The user code has already expired."
A239203:
  code: A239203
  message: "The user code has already been consumed by the previous API call."
A240101:
  code: A240101
  message: "Failed to update the record in the 'df_code' table."
A240401:
  code: A240401
  message: "Failed to delete an expired record from the 'df_code' table."
A240402:
  code: A240402
  message: "Deleting the expired record from the 'df_code' table."
A241001:
  code: A241001
  message: "The API call was processed successfully."
A242001:
  code: A242001
  message: "Generated an error response corresponding to the result ({Result}) given to the /api/device/complete API."
A242002:
  code: A242002
  message: "The token request (grant_type=urn:ietf:params:oauth:grant-type:device_code) was processed successfully."
A242101:
  code: A242101
  message: "Failed to get the record holding the device_code from the database."
A242102:
  code: A242102
  message: "Failed to generate an ID token."
A242103:
  code: A242103
  message: "Failed to insert a new access token into the database."
A242201:
  code: A242201
  message: "The total size of 'properties' is too big."
A242202:
  code: A242202
  message: "Failed to prepare a JWT-based access token: {Error Message}"
A242301:
  code: A242301
  message: "The token request does not contain 'device_code' parameter."
A242302:
  code: A242302
  message: "The value of 'device_code' in the token request is empty."
A242303:
  code: A242303
  message: "The token request contains multiple 'device_code' parameters."
A242304:
  code: A242304
  message: "The 'device_code' does not exist."
A242305:
  code: A242305
  message: "The client is not the owner of the 'device_code'."
A242306:
  code: A242306
  message: "The 'device_code' has expired."
A242307:
  code: A242307
  message: "The device authorization request has not been authorized yet."
A242308:
  code: A242308
  message: "The algorithm for signing ID tokens must not be 'none'."
A242309:
  code: A242309
  message: "The device_code was consumed by another transaction, so tokens are not issued."
A242401:
  code: A242401
  message: "The response from Authlete's /api/auth/token endpoint (grant_type=urn:ietf:params:oauth:grant-type:device_code): {Message}"
A243301:
  code: A243301
  message: "The 'binding_message' request parameter is mandatory."
A243302:
  code: A243302
  message: "The token delivery mode '{Delivery Mode}' is not allowed. Change the configuration of the client application."
A243303:
  code: A243303
  message: "The request must be signed. Use the 'request' request parameter."
A243304:
  code: A243304
  message: "The lifetime of the signed authentication request exceeds the upper limit ({Number} seconds)."
A243305:
  code: A243305
  message: "The client authentication method ({Client Authentication Method}) used at the backchannel authentication endpoint is not allowed."
A243306:
  code: A243306
  message: "The signature algorithm ({Algorithm}) of the signed authentication request is not allowed."
A243307:
  code: A243307
  message: "The signature algorithm ({Algorithm}) of the client assertion is not allowed."
A243308:
  code: A243308
  message: "The size (%d) of the signing key of the client assertion is less than the allowed minimum size (%d)."
A244101:
  code: A244101
  message: "Failed to get information about the authorization code."
A244102:
  code: A244102
  message: "Failed to get information about the client."
A244103:
  code: A244103
  message: "Failed to get information about the refresh token."
A244301:
  code: A244301
  message: "The token request contains multiple 'client_id' parameters."
A244302:
  code: A244302
  message: "The token request contains multiple 'client_assertion' parameters."
A244303:
  code: A244303
  message: "The format of 'client_assertion' is wrong."
A244304:
  code: A244304
  message: "The 'client_assertion' does not include an 'iss' claim or its value is empty."
A244305:
  code: A244305
  message: "The token request does not include any clue to identify the client. Add a 'client_id' parameter."
A244306:
  code: A244306
  message: "Information about the client is not available."
A244307:
  code: A244307
  message: "The token request used the client ID alias, but the feature is not enabled. Check the configuration of the client."
A244308:
  code: A244308
  message: "Because the feature of certificate-bound access tokens is enabled, the client must establish a mutual TLS connection to the token endpoint."
A244309:
  code: A244309
  message: "The client certificate cannot be parsed as a valid certificate."
A244310:
  code: A244310
  message: "The authorization code does not exist."
A244311:
  code: A244311
  message: "The information about the client is not found in the database."
A244312:
  code: A244312
  message: "The information about the client associated with the authorization code is not found in the database."
A244313:
  code: A244313
  message: "The information about the client associated with the refresh token is not found in the database."
A244314:
  code: A244314
  message: "The refresh token does not exist."
A245001:
  code: A245001
  message: "Successfully registered a request object for client ({Client ID}), URI is {URI}."
A245101:
  code: A245101
  message: "Unable to add request object URI to client. Error was: {Error Message}"
A245301:
  code: A245301
  message: "Couldn't parse the request object's claims. Error was: {Error Message}"
A245302:
  code: A245302
  message: "A claim in the request object did not match the plain parameter '{Parameter Name}'."
A245401:
  code: A245401
  message: "The response from Authlete's /api/pushed_auth_req endpoint is: {Response Message}"
A246301:
  code: A246301
  message: "Client tried to register a signed request object but has no request object signing algorithm set."
A246302:
  code: A246302
  message: "Client tried to register a request object but has a request object signing algorithm of 'none'."
A246303:
  code: A246303
  message: "Client has a request object signing algorithm of {JWS Algorithm} but client secret was null or empty."
A246304:
  code: A246304
  message: "Client has a request object signing algorithm of {JWS Algorithm} but no public key was found."
A246305:
  code: A246305
  message: "Client has a request object signing algorithm of {JWS Algorithm} but no suitable keys were found."
A246306:
  code: A246306
  message: "Client tried to register an invalid JOSE object as a request object. Error was: {Error Message}"
A246307:
  code: A246307
  message: "Couldn't parse the request object's claims. Error was: {Error Message}"
A246308:
  code: A246308
  message: "The request object does not include the 'iss' claim."
A246309:
  code: A246309
  message: "The client ID in the request object ({Client ID}) does not match the client ID ({Client ID}) of the client."
A246310:
  code: A246310
  message: "The client ID in the request object ({Client ID}) does not match the client ID ({Client ID}) of the client."
A247301:
  code: A247301
  message: "Failed to parse the 'client_assertion' request parameter as JWS."
A247302:
  code: A247302
  message: "Failed to extract the value of the 'iss' claim from the 'client_assertion'."
A247303:
  code: A247303
  message: "The client ID used in the Authorization header does not match the value of the 'client_id' request parameter."
A247304:
  code: A247304
  message: "The 'iss' claim in the 'client_assertion' does not match the value of the 'client_id' request parameter."
A247305:
  code: A247305
  message: "The client ID used in the Authorization header does not match the 'iss' claim in the 'client_assertion'."
A247306:
  code: A247306
  message: "The pushed authorization request endpoint request does not include any clue to identify the client application with. Adding the 'client_id' request parameter may solve this problem."
A247307:
  code: A247307
  message: "Information about the client application having the client ID '{Client ID}' was not found."
A248101:
  code: A248101
  message: "An error occurred while hardware-secured keys were checked to create a JWE decrypter: {Error Message}"
A248301:
  code: A248301
  message: "The 'request_uri' parameter is not allowed at this endpoint."
A248302:
  code: A248302
  message: "Unable to parse the request object into a JWT: {Error Message}"
A248303:
  code: A248303
  message: "The request object JWE header did not contain the 'alg' parameter."
A248304:
  code: A248304
  message: "The request object JWE header did not contain the 'enc' parameter."
A248305:
  code: A248305
  message: "The request object JWE header's 'alg' value ({JWE Algorithm}) did not match the client's registered request object JWE 'alg' value ({JWE Algorithm})."
A248306:
  code: A248306
  message: "The request object JWE header's 'enc' value ({JWE Encryption Method}) did not match the client's registered request object JWE 'enc' value ({JWE Encryption Method})."
A248307:
  code: A248307
  message: "Failed to decrypt the encrypted request object."
A248308:
  code: A248308
  message: "Failed to get payload of the encrypted request object."
A248309:
  code: A248309
  message: "Failed to parse payload of the encrypted request object as a signed JWT."
A248310:
  code: A248310
  message: "The value of 'enc' in the JWT ({JWE Encryption Method}) is not supported."
A248311:
  code: A248311
  message: "Failed to create a decrypter for the JWE due to an unexpected key length."
A248312:
  code: A248312
  message: "Failed to create a decrypter for the JWE."
A248313:
  code: A248313
  message: "The value of 'alg' in the JWE ({JWE Algorithm}) is not supported."
A248314:
  code: A248314
  message: "The encryption algorithm of the request object is symmetric, but the client type is not 'confidential'."
A248315:
  code: A248315
  message: "The request object is not signed."
A248316:
  code: A248316
  message: "Failed to parse the payload part of the request object."
A248317:
  code: A248317
  message: "'{Claim Name}' must not be included in the request object."
A249101:
  code: A249101
  message: "Failed to get the list of supported authorization data types."
A249102:
  code: A249102
  message: "Failed to get the list of authorization data types that the client has declared it may use."
A249301:
  code: A249301
  message: "The 'type' of the element (index = {Number}) in 'authorization_details' is null or empty."
A249302:
  code: A249302
  message: "The 'type' of the element (index = {Number}) in 'authorization_details' is not supported."
A249303:
  code: A249303
  message: "The client has not declared it may use the 'type' of the element (index = {Number}) in 'authorization_details'."
A249304:
  code: A249304
  message: "The format of the value of 'authorization_details' is wrong."
A249305:
  code: A249305
  message: "The value of 'authorization_details' must be a JSON array."
A249306:
  code: A249306
  message: "The format of the element (index = {Number}) in 'authorization_details' is wrong."
A250101:
  code: A250101
  message: "Failed to get extension data of the client application."
A250102:
  code: A250102
  message: "Extension data of the client application is not found unexpectedly."
A250301:
  code: A250301
  message: "The request parameter '{Request Parameter Name}' is included in the request more than once."
A251301:
  code: A251301
  message: "The value of the 'resource' property in the request object is neither a string nor an array."
A251302:
  code: A251302
  message: "The element at the index {Number} in the 'resource' property in the request object is not a JSON string."
A251303:
  code: A251303
  message: "The element at the index {Number} in the 'resource' property in the request object is not a valid URI."
A251304:
  code: A251304
  message: "The element at the index {Number} in the 'resource' property in the request object is not an absolute URI."
A251305:
  code: A251305
  message: "The element at the index {Number} in the 'resource' property in the request object includes a fragment component."
A251306:
  code: A251306
  message: "The value of a 'resource' is not a valid URI."
A251307:
  code: A251307
  message: "The value of a 'resource' is not an absolute URI."
A251308:
  code: A251308
  message: "The value of a 'resource' includes a fragment component."
A251309:
  code: A251309
  message: "The value of the 'resource' property in the request object is not a valid URI."
A251310:
  code: A251310
  message: "The value of the 'resource' property in the request object is not an absolute URI."
A251311:
  code: A251311
  message: "The value of the 'resource' property in the request object includes a fragment component."
A252301:
  code: A252301
  message: "The value of 'purpose' in the request object is not a string."
A252302:
  code: A252302
  message: "The authorization request contains multiple 'purpose' parameters."
A252303:
  code: A252303
  message: "The length of 'purpose' is shorter than {Lower Limit}."
A252304:
  code: A252304
  message: "The length of 'purpose' is longer than {Upper Limit}."
A253101:
  code: A253101
  message: "Failed to get the list of registered redirect URIs."
A253301:
  code: A253301
  message: "The '{Parameter Name}' in the request failed to be parsed as a string."
A253302:
  code: A253302
  message: "The 'redirect_uri' parameter must be explicitly included when the 'scope' parameter includes 'openid'."
A253303:
  code: A253303
  message: "The 'redirect_uri' is not registered."
A253304:
  code: A253304
  message: "The 'redirect_uri' is malformed."
A254301:
  code: A254301
  message: "There was a problem processing the DPoP header: {Error}"
A254302:
  code: A254302
  message: "The DPoP signature algorithm ({Algorithm}) must not be symmetric or 'none'."
A254303:
  code: A254303
  message: "The DPoP header did not include a public key in JWK format."
A254304:
  code: A254304
  message: "The DPoP signature algorithm is missing."
A255201:
  code: A255201
  message: "The value of 'idtHeaderParams' in the /api/auth/authorization/issue request failed to be parsed as a JSON object."
A256201:
  code: A256201
  message: "The value of 'idtHeaderParams' in the /api/backchannel/authentication/complete request failed to be parsed as a JSON object."
A256202:
  code: A256202
  message: "The total size of 'idtHeaderParams' is too big."
A257201:
  code: A257201
  message: "The value of 'idtHeaderParams' in the /api/device/complete request failed to be parsed as a JSON object."
A257202:
  code: A257202
  message: "The total size of 'idtHeaderParams' is too big."
A258201:
  code: A258201
  message: "{API Path}, Content-Type header is not specified."
A261601:
  code: A261601
  message: "Cannot create a new client because the current number of clients has reached the maximum number ({Number}) of clients per developer."
A261602:
  code: A261602
  message: "Cannot create a new client because the current number of clients has reached the maximum number ({Number}) of the plan ({Plan Name}). Consult the manager of this service."
A261603:
  code: A261603
  message: "The size of the custom metadata is too big."
A261604:
  code: A261604
  message: "Cannot create a new client because the client ID alias is already in use."
A262201:
  code: A262201
  message: "The client (ID = {Client ID}) does not exist."
A262202:
  code: A262202
  message: "The client (ID = {Client ID}) has been deleted."
A262203:
  code: A262203
  message: "The client (ID = {Client ID}) is locked."
A262601:
  code: A262601
  message: "The size of the custom metadata is too big."
A262602:
  code: A262602
  message: "Cannot update the client because the client ID alias is already in use."
A263201:
  code: A263201
  message: "The '{Request Parameter}' request parameter is not specified or its value is empty."
A263202:
  code: A263202
  message: "The value of the '{Request Parameter}' request parameter is not supported."
A263203:
  code: A263203
  message: "The value of the 'alg' request parameter is not supported for the use of '{Key Use}'."
A263204:
  code: A263204
  message: "The value of the 'alg' ({Algorithm}) request parameter is invalid for the key type '{Key Type}'."
A263205:
  code: A263205
  message: "The length of the 'kid' request parameter exceeds the allowed maximum length ({Number})."
A263206:
  code: A263206
  message: "The value of the 'kid' request parameter contains non-ASCII letters."
A263207:
  code: A263207
  message: "The algorithm '{Algorithm}' is not supported by the HSM '{HSM}'."
A263401:
  code: A263401
  message: "Accepted a key creation request: hsm={HSM}, kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}"
A264101:
  code: A264101
  message: "Failed to load the class '{Class Name}' for the HSM '{HSM}'."
A264102:
  code: A264102
  message: "The class '{Class Name}' for the HSM '{HSM}' does not implement the 'HSM' interface."
A264103:
  code: A264103
  message: "The class '{Class Name}' for the HSM '{HSM}' does not have a default constructor."
A264104:
  code: A264104
  message: "Failed to create an HSM instance for the HSM '{HSM}'."
A264105:
  code: A264105
  message: "The HSM name that the implementation declares is different from the expected one: expected={HSM Name}, actual={HSM Name}"
A264201:
  code: A264201
  message: "The specified HSM name is invalid."
A264401:
  code: A264401
  message: "Loading the '{Class Name}' class for the HSM '{HSM}'."
A264402:
  code: A264402
  message: "Succeeded in loading the '{Class Name}' class for the HSM '{HSM}'."
A265101:
  code: A265101
  message: "Failed to create a key on the HSM '{HSM}': kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}"
A265102:
  code: A265102
  message: "Failed to get the public key corresponding to the key created on the HSM '{HSM}': kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}"
A265103:
  code: A265103
  message: "Failed to delete the key created on the HSM '{HSM}': kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}"
A265104:
  code: A265104
  message: "The HSM '{HSM}' did not return a public key."
A265401:
  code: A265401
  message: "Created a key on the HSM '{HSM}': service={Service API Key}, kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A265402:
  code: A265402
  message: "Information about the key on the HSM '{HSM}' (handle={Handle}): {Information}"
A265403:
  code: A265403
  message: "The public key corresponding to the key on the HSM '{HSM}' (handle={Handle}):\n{Public Key}"
A266001:
  code: A266001
  message: "Successfully created a key on the HSM '{HSM}': service={Service API Key}, kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A266201:
  code: A266201
  message: "HSM support is not enabled for the service ({Service API Key})."
A267101:
  code: A267101
  message: "Failed to insert a record to the 'hsk' table that corresponds to the key created on the HSM '{HSM}': handle={Handle}"
A267102:
  code: A267102
  message: "Failed to delete the key on the HSM '{HSM}': handle={Handle}"
A267401:
  code: A267401
  message: "Inserted a new record into the 'hsk' table: service={Service API Key}, hsm={HSM}, kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A268001:
  code: A268001
  message: "Successfully obtained the key information: service={Service API Key}, hsm={HSM}, kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A268101:
  code: A268101
  message: "Failed to get the record that matches the handle from the database: service={Service API Key}, handle={Handle}"
A268201:
  code: A268201
  message: "HSM support is not enabled for the service ({Service API Key})."
A268202:
  code: A268202
  message: "No record matches the handle: service={Service API Key}, handle={Handle}"
A269001:
  code: A269001
  message: "Successfully obtained the records from the 'hsk' table: service={Service API Key}, count={Number of Records}"
A269101:
  code: A269101
  message: "Failed to get records from the 'hsk' table: service={Service API Key}"
A269201:
  code: A269201
  message: "HSM support is not enabled for the service ({Service API Key})."
A270001:
  code: A270001
  message: "Successfully deleted the key: service={Service API Key}, hsm={HSM}, kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A270101:
  code: A270101
  message: "Failed to get the record that matches the handle from the database: service={Service API Key}, handle={Handle}"
A270102:
  code: A270102
  message: "[INCONSISTENCY] The key on the HSM was deleted but the record corresponding to the key failed to be deleted from the database: service={Service API Key}, handle={Handle}"
A270201:
  code: A270201
  message: "HSM support is not enabled for the service ({Service API Key})."
A270202:
  code: A270202
  message: "No record matches the handle: service={Service API Key}, handle={Handle}"
A271101:
  code: A271101
  message: "Failed to load the underlying implementation for the HSM '{HSM}'."
A271102:
  code: A271102
  message: "Failed to delete the key on the HSM '{HSM}': service={Service API Key}, handle={Handle}"
A271401:
  code: A271401
  message: "Deleted the key on the HSM '{HSM}': service={Service API Key}, handle={Handle}"
A272101:
  code: A272101
  message: "Failed to get the implementation for the HSM on which the key corresponding to the record exists: hsm={HSM} service number={Service Number}, handle={Handle}"
A272102:
  code: A272102
  message: "Failed to delete the key on the HSM: hsm={HSM}, service number={Service Number}, handle={Handle}"
A272103:
  code: A272103
  message: "The key on the HSM was not deleted, so the record in the 'hsk' table is kept for consistency: hsm={HSM}, service number={Service Number}, handle={Handle}"
A272104:
  code: A272104
  message: "[INCONSISTENCY] The key on the HSM was deleted but the record in the 'hsk' table failed to be deleted: hsm={HSM}, service number={Service Number}, handle={Handle}"
A272105:
  code: A272105
  message: "Failed to get the records from the 'hsk' table: service number={Service Number}"
A272106:
  code: A272106
  message: "Failed to delete some records from the 'hsk' table: service number={Service Number}, target records={Count}, deleted records=%s, deleted HSM keys={Count}"
A272401:
  code: A272401
  message: "No record to delete in the 'hsk' table: service number={Service Number}"
A272402:
  code: A272402
  message: "Deleted the key on the HSM: hsm={HSM}, service number={Service Number}, handle={Handle}"
A272403:
  code: A272403
  message: "Deleted the record in the 'hsk' table: hsm={HSM}, service number={Service Number}, handle={Handle}"
A272404:
  code: A272404
  message: "Deleted {Count} record(s) from the 'hsk' table successfully: service number={Service Number}"
A273101:
  code: A273101
  message: "Virtual HSM: Failed to parse a string '{Input String}' as a key type: {Error Message}"
A273102:
  code: A273102
  message: "Virtual HSM: Failed to create an RSA key: {Error Message}"
A273103:
  code: A273103
  message: "Virtual HSM: Failed to create an EC key: {Error Message}"
A273104:
  code: A273104
  message: "Virtual HSM: Failed to build a JWK from a Map: {Error Message}"
A273105:
  code: A273105
  message: "Virtual HSM: Failed to convert a JWK into an RSA public key: {Error Message}"
A273106:
  code: A273106
  message: "Virtual HSM: Failed to convert a JWK into an EC public key: {Error Message}"
A273107:
  code: A273107
  message: "Virtual HSM: Failed to create an RSA signer: {Error Message}"
A273108:
  code: A273108
  message: "Virtual HSM: Failed to create an EC signer: {Error Message}"
A273109:
  code: A273109
  message: "Virtual HSM: Failed to sign the data: {Error Message}"
A273110:
  code: A273110
  message: "Virtual HSM: Failed to convert a JWK into an RSA private key: {Error Message}"
A273111:
  code: A273111
  message: "Virtual HSM: Failed to get a cipher for the transformation '{Transformation}': {Error Message}"
A273112:
  code: A273112
  message: "Virtual HSM: Failed to initialize the cipher for decryption: transformation={Transformation}, error={Error Message}"
A273113:
  code: A273113
  message: "Virtual HSM: Failed to decrypt the input data by the cipher: {Error Message}"
A273114:
  code: A273114
  message: "Virtual HSM: Failed to get algorithm parameters for the algorithm '{Algorithm}': {Error Message}"
A273115:
  code: A273115
  message: "Virtual HSM: Failed to initialize algorithm parameters with the spec: {Error Message}"
A273401:
  code: A273401
  message: "Virtual HSM: Signed: alg={Algorithm}, handle={Handle}, signature={Signature}"
A273402:
  code: A273402
  message: "Virtual HSM: Decrypted: alg={Algorithm}, handle={Handle}"
A274101:
  code: A274101
  message: "Failed to sign: hsm={HSM}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A274401:
  code: A274401
  message: "Signed: hsm={HSM}, alg={Algorithm}, kid={Key ID}, handle={Handle}, signature={Signature}"
A275101:
  code: A275101
  message: "The HSM decrypter does not support the encryption algorithm: hsm={HSM}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A275102:
  code: A275102
  message: "Failed to decrypt the encrypted CEK: hsm={HSM}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A275301:
  code: A275301
  message: "The JWE lacks {Element}: alg={Algorithm}"
A275401:
  code: A275401
  message: "Decrypted: hsm={HSM}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A276001:
  code: A276001
  message: "Successfully updated the service owner's delete flag (Service Owner Identifier = {Service Owner Identifier})."
A276101:
  code: A276101
  message: "Failed to update the service owner's delete flag."
A276201:
  code: A276201
  message: "The 'id' request parameter must be specified."
A276202:
  code: A276202
  message: "The presented ID was not associated with any service owner."
A276203:
  code: A276203
  message: "The service owner is already deleted."
A276204:
  code: A276204
  message: "The service owner is already undeleted."
A293001:
  code: A293001
  message: "Successfully updated the client's lock flag (Client Identifier = {Client Identifier})."
A293101:
  code: A293101
  message: "Failed to update the client's lock flag."
A293201:
  code: A293201
  message: "A client identifier must be specified."
A293202:
  code: A293202
  message: "The client has already been deleted."
A293203:
  code: A293203
  message: "The client is already locked."
A293204:
  code: A293204
  message: "The client is already unlocked."

A000101: "Authlete Server error."
A000102: "Server Error: {Error Message}"
A000103: "Internal Server Error."
A000104: "Other Web Error: {Error Message}"
A000201: "Client Error: {Error Message}"
A000202: "Redirection to {URI}: {Error Message}"
A001101: "{API Path}, Authlete Server error."
A001201: "{API Path}, TLS must be used."
A001202: "{API Path}, Authorization header is missing."
A001203: "{API Path}, Credentials in Authorization header are malformed: {Header Value}"
A001212: "{API Path}, The client (ID = {Client ID}) does not exist."
A001213: "{API Path}, The client (ID = {Client ID}) does not belong to the service."
A001214: "{API Path}, The client (ID = {Client ID}) has been deleted."
A001215: "{API Path}, The client (ID = {Client ID}) is locked."
A001216: "{API Path}, The client ID is invalid."
A001217: "{API Path}, This API is not usable under the current configuration."
A001218: "{API Path}, The client (identifier = {Client Identifier}) does not exist."
A001219: "{API Path}, The client (identifier = {Client Identifier}) does not belong to the service."
A001220: "{API Path}, The client (identifier = {Client Identifier}) has been deleted."
A001221: "{API Path}, The client (identifier = {Client Identifier}) is locked."
A001222: "{API Path}, The client (identifier = {Client Identifier}) exists but the configuration of the client does not allow 'Client ID Alias'."
A001223: "{API Path}, The feature '{Feature}' must be enabled to use this API."
A001300: "{API Path}, Unable to load introspected token data from external server ('{Introspection URL}')."
A001301: "{API Path}, Expected a DPoP header but none was provided."
A001302: "{API Path}, Thumbprint of the provided DPoP key does not match the expected DPoP thumbprint."
A001303: "{API Path}, There was an error processing the DPoP header: {Error}"
A001304: "{API Path}, The DPoP signature algorithm ({Algorithm}) must not be symmetric or 'none'."
A001305: "{API Path}, The DPoP header did not include a public key in JWK format."
A001306: "The DPoP signature algorithm is missing."
A001307: "{API Path}, The token required an MTLS certificate but none was provided."
A001308: "{API Path}, The certificate thumbprint of the request does not match the certificate thumbprint of the access token."
A001309: "{API Path}, There was an error processing the presented certificate."
A002101: "{API Path}, Failed to get service owner information from 'service_owner' table."
A002201: "{API Path}, No service owner has the API credentials."
A002202: "{API Path}, The service owner (API Key = {Service Owner's API Key}) has been deleted."
A002203: "{API Path}, The service owner (API Key = {Service Owner's API Key}) is locked."
A002204: "{API Path}, The service owner (API Key = {Service Owner's API Key}) has not been verified."
A002205: "{API Path}, The API credentials do not match those of the service owner (API Key = {Service Owner's API Key})."
A003101: "{API Path}, No service owner owns the service (API Key = {Service's API Key})."
A003102: "{API Path}, The service owner (API Key = {Service Owner's API Key}) of the service (API Key = {Service's API Key}) has not been verified."
A003103: "{API Path}, Failed to get service information from 'service' table."
A003104: "{API Path}, Failed to get service owner information from 'service_owner' table."
A003201: "{API Path}, No service has the API credentials."
A003202: "{API Path}, The service (API Key = {Service's API Key}) has been deleted."
A003203: "{API Path}, The service (API Key = {Service's API Key}) is locked."
A003204: "{API Path}, The API credentials do not match those of the service (API Key = {Service's API Key})."
A003205: "{API Path}, The service owner (API Key = {Service Owner's API Key}) of the service (API Key = {Service's API Key}) has been deleted."
A003206: "{API Path}, The service owner (API Key = {Service Owner's API Key}) of the service (API Key = {Service's API Key}) is locked."
A004001: "Authlete has successfully issued a ticket to the service (API Key = {Service's API Key}) for the authorization request from the client (ID = {Client ID}). [response_type={Response Type}, openid={Boolean}]"
A004201: "The authorization request from the service does not contain 'parameters' parameter."
A004202: "The format of the value of 'parameters' request parameter is wrong."
A004301: "The authorization request does not contain any request parameters."
A004302: "The value of 'response_type' ({Response Type}) is not allowed when 'scope' does not contain 'openid'."
A004303: "'consent' must be explicitly included in 'prompt' parameter when 'offline_access' is included in 'scope'."
A005101: "JOSEObject.parse(String) returned an instance of unknown class: {Class Name}"
A005102: "Failed to convert a JWK to a PublicKey."
A005103: "The key type '{Key Type}' cannot have a private key."
A005104: "Failed to put the JWK Set of the client (ID = {Client ID}) into 'client_jwks' table."
A005105: "Failed to create a decrypter for the JWE passed by 'request' parameter. (client_id={Client ID}, alg={Algorithm}, enc={Algorithm})"
A005106: "Failed to create a decrypter for the JWE pointed to by 'request_uri' parameter. (client_id={Client ID}, alg={Algorithm}, enc={Algorithm})"
A005107: "Failed to create a decrypter for the JWE passed by 'request' parameter due to an unexpected key length. (client_id={Client ID}, alg={Algorithm}, enc={Algorithm}, expected key length={Key Length})"
A005108: "The JWK Set of the service is marked as hosted but not found in 'service_jwks' table."
A005109: "Failed to convert a JWK to a PrivateKey."
A005110: "Failed to store the fetched request object into the local database."
A005111: "Failed to get request URI information from 'request_uri' table."
A005112: "Failed to get an entity from 'client_jwks' table."
A005113: "Failed to get an entity from 'service_jwks' table."
A005114: "Failed to create a decrypter for the JWE pointed to by 'request_uri' parameter due to an unexpected key length. (client_id={Client ID}, alg={Algorithm}, enc={Algorithm}, expected key length={Key Length})"
A005115: "An error occurred while hardware-secured keys were checked to create a JWE decrypter: {Error Message}"
A005201: "The request object passed by 'request' parameter cannot be decrypted because this service has not registered its JWK Set."
A005202: "The request object pointed to by 'request_uri' parameter cannot be decrypted because this service has not registered its JWK Set."
A005203: "The request object passed by 'request' parameter cannot be decrypted because this service has not registered its JWK Set."
A005204: "The request object pointed to by 'request_uri' parameter cannot be decrypted because this service has not registered its JWK Set."
A005301: "The value of 'request' parameter failed to be parsed as a JOSE."
A005302: "The payload of the JWE passed by 'request' parameter failed to be parsed as a JOSE."
A005303: "The value pointed to by 'request_uri' parameter failed to be parsed as a JOSE."
A005304: "The payload of the JWE pointed to by 'request_uri' parameter failed to be parsed as a JOSE."
A005305: "The payload of the JWE passed by 'request' parameter must not be a JWE."
A005306: "The payload of the JWE pointed to by 'request_uri' parameter must not be a JWE."
A005307: "The JWS header of the request object passed by 'request' parameter does not contain 'alg' parameter."
A005308: "The JWS header of the payload of the JWE passed by 'request' parameter does not contain 'alg' parameter."
A005309: "The JWS header of the request object pointed to by 'request_uri' parameter does not contain 'alg' parameter."
A005310: "The JWS header of the payload of the JWE pointed to by 'request_uri' parameter does not contain 'alg' parameter."
A005311: "Failed to fetch the JWK Set of the client (ID = {Client ID}) from the location pointed to by 'jwks_uri' ({URL}): {Error Message}"
A005312: "The algorithm in the JWS header of the request object passed by 'request' parameter does not match the registered one ({Algorithm})."
A005313: "The algorithm in the JWS header of the payload of the JWE passed by 'request' parameter does not match the registered one ({Algorithm})."
A005314: "The algorithm in the JWS header of the request object pointed to by 'request_uri' parameter does not match the registered one ({Algorithm})."
A005315: "The algorithm in the JWS header of the payload of the JWE pointed to by 'request' parameter does not match the registered one ({Algorithm})."
A005316: "The algorithm in the JWS header of the request object passed by 'request' parameter is symmetric ({Algorithm}), but the client type is not confidential."
A005317: "The algorithm in the JWS header of the JWE passed by 'request' parameter is symmetric ({Algorithm}), but the client type is not confidential."
A005318: "The algorithm in the JWS header of the request object pointed to by 'request_uri' parameter is symmetric ({Algorithm}), but the client type is not confidential."
A005319: "The algorithm in the JWS header of the JWE pointed to by 'request_uri' parameter is symmetric ({Algorithm}), but the client type is not confidential."
A005320: "The algorithm in the JWS header of the request object passed by 'request' parameter is not supported."
A005321: "The algorithm in the JWS header of the payload of the JWE passed by 'request' parameter is not supported."
A005322: "The algorithm in the JWS header of the request object pointed to by 'request_uri' parameter is not supported."
A005323: "The algorithm in the JWS header of the payload of the JWE pointed to by 'request_uri' parameter is not supported."
A005324: "The signature of the request object passed by 'request' parameter failed to be verified: {Error Message}"
A005325: "The signature of the payload of the JWE passed by 'request' parameter failed to be verified: {Error Message}"
A005326: "The signature of the request object pointed to by 'request_uri' parameter failed to be verified: {Error Message}"
A005327: "The signature of the payload of the JWE pointed to by 'request_uri' parameter failed to be verified: {Error Message}"
A005328: "The signature of the request object passed by 'request' parameter was not verified."
A005329: "The signature of the payload of the JWE passed by 'request' parameter was not verified."
A005330: "The signature of the request object pointed to by 'request_uri' parameter was not verified."
A005331: "The signature of the payload of the JWE pointed to by 'request_uri' parameter was not verified."
A005332: "The request object passed by 'request' parameter is signed using a private key, but neither 'jwks_uri' nor 'jwks' to get its associated public key is registered."
A005333: "The payload of the JWE passed by 'request' parameter is signed using a private key, but neither 'jwks_uri' nor 'jwks' to get its associated public key is registered."
A005334: "The request object pointed to by 'request_uri' parameter is signed using a private key, but neither 'jwks_uri' nor 'jwks' to get its associated public key is registered."
A005335: "The payload of the JWE pointed by 'request_uri' parameter is signed using a private key, but neither 'jwks_uri' nor 'jwks' to get its associated public key is registered."
A005336: "The request object passed by 'request' parameter is not signed but the registered value of 'request_object_signing_alg' is neither 'none' nor null."
A005337: "The payload of the JWE passed by 'request' parameter is not signed but the registered value of 'request_object_signing_alg' is neither 'none' nor null."
A005338: "The request object pointed to by 'request_uri' parameter is not signed but the registered value of 'request_object_signing_alg' is neither 'none' nor null."
A005339: "The payload of the JWE pointed to by 'request_uri' parameter is not signed but the registered value of 'request_object_signing_alg' is neither 'none' nor null."
A005340: "The JWK Set pointed to by 'jwks_uri' does not contain the public key to verify the signature of the request object passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
A005341: "The JWK Set pointed to by 'jwks_uri' does not contain the public key to verify the signature of the payload of the JWE passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
A005342: "The JWK Set pointed to by 'jwks_uri' does not contain the public key to verify the signature of the request object pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
A005343: "The JWK Set pointed to by 'jwks_uri' does not contain the public key to verify the signature of the payload of the JWE pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
A005344: "The JWK Set pointed to by 'jwks_uri' contains multiple candidate public keys to verify the signature of the request object passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
A005345: "The JWK Set pointed to by 'jwks_uri' contains multiple candidate public keys to verify the signature of the payload of the JWE passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
A005346: "The JWK Set pointed to by 'jwks_uri' contains multiple candidate public keys to verify the signature of the request object pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
A005347: "The JWK Set pointed to by 'jwks_uri' contains multiple candidate public keys to verify the signature of the payload of the JWE pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
A005348: "Failed to parse the JWK Set of the client (ID = {Client ID}) fetched from the location pointed to by 'jwks_uri' ({URL}) as JWKSet: {Error Message}"
A005349: "The JWK Set of the client (ID = {Client ID}) was not found in the database, unexpectedly."
A005350: "The client (ID = {Client ID}) was not found in the database, unexpectedly."
A005351: "The client (ID = {Client ID}) has not registered its JWK Set."
A005352: "The registered JWK Set does not contain the public key to verify the signature of the request object passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
A005353: "The registered JWK Set does not contain the public key to verify the signature of the payload of the JWE passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
A005354: "The registered JWK Set does not contain the public key to verify the signature of the request object pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
A005355: "The registered JWK Set does not contain the public key to verify the signature of the payload of the JWE pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
A005356: "The registered JWK Set contains multiple candidate public keys to verify the signature of the request object passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
A005357: "The registered JWK Set contains multiple candidate public keys to verify the signature of the payload of the JWE passed by 'request' parameter. (alg={Algorithm}, kid={Key ID})"
A005358: "The registered JWK Set contains multiple candidate public keys to verify the signature of the request object pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
A005359: "The registered JWK Set contains multiple candidate public keys to verify the signature of the payload of the JWE pointed to by 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
A005360: "The JWE header of the request object passed by 'request' parameter does not contain 'alg' parameter."
A005361: "The JWE header of the request object pointed to by 'request_uri' parameter does not contain 'alg' parameter."
A005362: "The JWE header of the request object passed by 'request' parameter does not contain 'enc' parameter."
A005363: "The JWE header of the request object pointed to by 'request_uri' parameter does not contain 'enc' parameter."
A005364: "Failed to decrypt the JWE passed by 'request' parameter (alg={Algorithm}, enc={Algorithm}): {Error Message}"
A005365: "Failed to decrypt the JWE pointed to by 'request_uri' parameter (alg={Algorithm}, enc={Algorithm}): {Error Message}"
A005366: "The value of 'enc' in the header of the JWE passed by 'request' parameter is not supported."
A005367: "The value of 'enc' in the header of the JWE pointed to by 'request_uri' parameter is not supported."
A005368: "The value of 'alg' in the header of the JWE passed by 'request' parameter is not supported."
A005369: "The value of 'alg' in the header of the JWE pointed to by 'request_uri' parameter is not supported."
A005370: "The value of 'alg' in the header of the JWE passed by 'request' parameter is symmetric ({Algorithm}), but the client type is not confidential."
A005371: "The value of 'alg' in the header of the JWE pointed to by 'request_uri' parameter is symmetric ({Algorithm}), but the client type is not confidential."
A005372: "The request object passed by 'request' parameter is encrypted, but this service does not accept encrypted request objects."
A005373: "The request object pointed to by 'request_uri' parameter is encrypted, but this service does not accept encrypted request objects."
A005374: "The private key to decrypt the request object passed by 'request' parameter is not found. (alg={Algorithm}, kid={Key ID})"
A005375: "The private key to decrypt the request object pointed to by 'request_uri' parameter is not found. (alg={Algorithm}, kid={Key ID})"
A005376: "There are multiple candidate private keys to decrypt the request object passed 'request' parameter. (alg={Algorithm}, kid={Key ID})"
A005377: "There are multiple candidate private keys to decrypt the request object pointed to 'request_uri' parameter. (alg={Algorithm}, kid={Key ID})"
A005378: "Failed to parse the request object passed by 'request' parameter as a JSON."
A005379: "Failed to parse the payload of the JWE passed by 'request' parameter as a JSON. "
A005380: "Failed to parse the request object pointed to by 'request_uri' parameter as a JSON."
A005381: "Failed to parse the payload of the JWE pointed to by 'request_uri' parameter as a JSON."
A005382: "Failed to fetch the request object of the client (ID = {Client ID}) from the location pointed to by 'request_uri' ({URL}): {Error Message}"
A005383: "The request object pointed to by 'request_uri' parameter is not signed but the scheme of the URI is not https."
A005384: "The value of 'request_uri' parameter is not registered: {URL}"
A005385: "The client (ID = {Client ID}) has not registered the content of the request object for the request URI ({URL}) although the content is marked as hosted."
A005386: "The value of 'request_uri' parameter is not registered: {URL}"
A005387: "The request object passed by 'request' parameter contains 'client_id' but its value is not a string."
A005388: "The payload of the JWE passed by 'request' parameter contains 'client_id' but its value is not a string."
A005389: "The request object pointed to by 'request_uri' parameter contains 'client_id' but its value is not a string. "
A005390: "The payload of the JWE pointed to by 'request_uri' parameter contains 'client_id' but its value is not a string."
A005391: "The value of 'client_id' ({Client ID}) in the request object passed by 'request' parameter is different from the one specified by 'client_id' parameter ({Client ID})."
A005392: "The value of 'client_id' ({Client ID}) in the payload of the JWE passed by 'request' parameter is different from the one specified by 'client_id' parameter ({Client ID})."
A005393: "The value of 'client_id' ({Client ID}) in the request object pointed to by 'request_uri' parameter is different from the one specified by 'client_id' parameter ({Client ID})."
A005394: "The value of 'client_id' ({Client ID}) in the payload of the JWE pointed to by 'request_uri' parameter is different from the one specified by 'client_id' parameter ({Client ID})."
A005395: "The request object passed by 'request' parameter contains 'response_type' but its value is not a string."
A005396: "The payload of the JWE passed by 'request' parameter contains 'response_type' but its value is not a string."
A005397: "The request object pointed to by 'request_uri' parameter contains 'response_type' but its value is not a string. "
A005398: "The payload of the JWE pointed to by 'request_uri' parameter contains 'response_type' but its value is not a string."
A005399: "The value of 'response_type' ({Response Type}) in the request object passed by 'request' parameter is invalid."
A006301: "The value of 'response_type' ({Response Type}) in the payload of the JWE passed by 'request' parameter is invalid."
A006302: "The value of 'response_type' ({Response Type}) in the request object pointed to by 'request_uri' parameter is invalid."
A006303: "The value of 'response_type' ({Response Type}) in the payload of the JWE pointed to by 'request_uri' parameter is invalid."
A006304: "The value of 'response_type' ({Response Type}) in the request object passed by 'request' parameter is different from the one specified by 'response_type' parameter ({Response Type})."
A006305: "The value of 'response_type' ({Response Type}) in the payload of the JWE passed by 'request' parameter is different from the one specified by 'response_type' parameter ({Response Type})."
A006306: "The value of 'response_type' ({Response Type}) in the request object pointed to by 'request_uri' parameter is different from the one specified by 'response_type' parameter ({Response Type})."
A006307: "The value of 'response_type' ({Response Type}) in the payload of the JWE pointed to by 'request_uri' parameter is different from the one specified by 'response_type' parameter ({Response Type})."
A006308: "The request object passed by 'request' parameter contains 'request' parameter, which is not allowed."
A006309: "The payload of the JWE passed by 'request' parameter contains 'request' parameter, which is not allowed."
A006310: "The request object pointed to by 'request_uri' parameter contains 'request' parameter, which is not allowed. "
A006311: "The payload of the JWE pointed to by 'request_uri' parameter contains 'request' parameter, which is not allowed."
A006312: "The request object passed by 'request' parameter contains 'request_uri' parameter, which is not allowed."
A006313: "The payload of the JWE passed by 'request' parameter contains 'request_uri' parameter, which is not allowed."
A006314: "The request object pointed to by 'request_uri' parameter contains 'request_uri' parameter, which is not allowed. "
A006315: "The payload of the JWE pointed to by 'request_uri' parameter contains 'request_uri' parameter, which is not allowed."
A006316: "Failed to create a verifier for the symmetric algorithm ({Algorithm}) specified in the JWS header of the request object passed by 'request' parameter."
A006317: "Failed to create a verifier for the symmetric algorithm ({Algorithm}) specified in the JWS header of the JWE passed by 'request' parameter."
A006318: "Failed to create a verifier for the symmetric algorithm ({Algorithm}) specified in the JWS header of the request object pointed to by 'request_uri' parameter."
A006319: "Failed to create a verifier for the symmetric algorithm ({Algorithm}) specified in the JWS header of the JWE pointed to by 'request_uri' parameter."
A006320: "Failed to create a verifier for the elliptic curve algorithm ({Algorithm}) specified in the JWS header of the request object passed by 'request' parameter."
A006321: "Failed to create a verifier for the elliptic curve algorithm ({Algorithm}) specified in the JWS header of the JWE passed by 'request' parameter."
A006322: "Failed to create a verifier for the elliptic curve algorithm ({Algorithm}) specified in the JWS header of the request object pointed to by 'request_uri' parameter."
A006323: "Failed to create a verifier for the elliptic curve algorithm ({Algorithm}) specified in the JWS header of the JWE pointed to by 'request_uri' parameter."
A006324: "Unable to delete the request URI from the database. Error message: {Error Message}"
A006325: "The request URI was locally hosted but was either expired or contained no request object content."
A006326: "The request object passed by 'request' parameter does not contain 'response_type' which is required by JAR (JWT Secured Authorization Request)."
A006327: "The payload of the JWE passed by 'request' parameter does not contain 'response_type' which is required by JAR (JWT Secured Authorization Request)."
A006328: "The request object pointed to by 'request_uri' parameter does not contain 'response_type' which is required by JAR (JWT Secured Authorization Request)."
A006329: "The payload of the JWE pointed to by 'request_uri' parameter does not contain 'response_type' which is required by JAR (JWT Secured Authorization Request)."
A006330: "The JWE alg of the request object passed by the 'request' parameter does not match the 'request_object_encryption_alg' client metadata: actual={JWE alg}, required={JWE alg}"
A006331: "The JWE alg of the request object referenced by the 'request_uri' parameter does not match the 'request_object_encryption_alg' client metadata: actual={JWE alg}, required={JWE alg}"
A006332: "The JWE enc of the request object passed by the 'request' parameter does not match the 'request_object_encryption_enc' client metadata: actual={JWE enc}, required={JWE enc}"
A006333: "The JWE enc of the request object referenced by the 'request_uri' parameter does not match the 'request_object_encryption_enc' client metadata: actual={JWE enc}, required={JWE enc}"
A006334: "The request object passed through the front channel is not encrypted."
A007101: "Failed to get the list of pre-defined scopes from 'scope' table."
A007102: "Failed to get the list of scope attributes from 'scope_attributes' table."
A007301: "The value of 'scope' parameter in the request object is not a string."
A007302: "The authorization request contains multiple 'scope' parameters."
A007303: "The value of 'scope' in the request object contains 'openid' but the authorization request does not have 'scope' parameter."
A007304: "The value of 'scope' in the request object contains 'openid' but the authorization request parameter 'scope' does not contain 'openid'."
A007305: "The authorization request has no 'scope' parameter or none of the given scopes is recognized as valid, and the service's default scope set is empty. The service's configuration does not allow requests that request no scope."
A008101: "Failed to get the list of registered request URIs from 'request_uri' table."
A008301: "The authorization request contains multiple 'request' parameters."
A008302: "The authorization request contains multiple 'request_uri' parameters."
A008303: "The value of 'request_uri' parameter is not registered."
A008304: "The authorization request contains both 'request' parameter and 'request_uri' parameter."
A008305: "The 'request_uri' parameter must be given because the 'require_pushed_authorization_requests' client metadata is true."
A008306: "The 'request_uri' parameter must be given because the 'require_pushed_authorization_requests' server metadata is true."
A008307: "The value of 'request_uri' parameter must be a request URI issued from the pushed authorization request endpoint because the 'require_pushed_authorization_requests' client metadata is true."
A008308: "The value of 'request_uri' parameter must be a request URI issued from the pushed authorization request endpoint because the 'require_pushed_authorization_requests' server metadata is true."
A008309: "The configuration of the client requires that authorization requests from the client always utilize a request object, but the authorization request does not conform to the requirement."
A008310: "The configuration of the service requires that authorization requests to the service always utilize a request object, but the authorization request does not conform to the requirement."
A008311: "The service is configured to conform to JAR (JWT Secured Authorization Request), so request objects must be always signed."
A009301: "The authorization request does not contain 'response_type' parameter."
A009302: "The value of 'response_type' parameter contained in the authorization request is empty."
A009303: "The authorization request contains multiple 'response_type' parameters."
A009304: "The value of 'response_type' parameter contained in the authorization request is invalid."
A009305: "The response type '{Response Type}' is not supported by this service."
A009306: "The client (ID = {Client ID}) does not declare it uses the response type '{Response Type}'."
A009307: "'response_type' in the request object does not match the value of 'response_type' request parameter outside the request object."
A009308: "The value of 'response_type' (%s) in the request object is different from the one specified by 'response_type' parameter (%s)."
A010101: "Failed to get the client information from 'client' table."
A010102: "Failed to get the client information by a client ID alias."
A010301: "The authorization request does not contain 'client_id' parameter."
A010302: "The value of 'client_id' parameter contained in the authorization request is empty."
A010303: "The authorization request contains multiple 'client_id' parameters."
A010304: "No client has the client ID ({Client ID})."
A010305: "The client (ID = {Client ID}) does not belong to this service."
A010306: "The client (ID = {Client ID}) has been deleted."
A010307: "The client (ID = {Client ID}) is locked."
A010308: "No client has the client ID ({Client ID}) or the client ID alias."
A010309: "The client ID alias ({Client ID Alias}) of the client is not enabled."
A011101: "Failed to get the list of registered redirect URIs from 'redirect_uri' table."
A011301: "The value of 'redirect_uri' in the request object is not a string."
A011302: "The authorization request contains multiple 'redirect_uri' parameters."
A011303: "'redirect_uri' parameter must be explicitly specified when 'scope' parameter contains 'openid'."
A011304: "The value of 'redirect_uri' ({URL}) is not registered."
A011305: "The scheme of the redirect URI must be 'https' when 'response_type' of an authorization request from a 'web' client contains either 'token' or 'id_token'."
A011306: "The host of the redirect URI must not be 'localhost' when 'response_type' of an authorization request from a 'web' client contains either 'token' or 'id_token'."
A011307: "The scheme of the redirect URI must not be 'https' when the client's application type is 'native'."
A011308: "The host of the redirect URI must be 'localhost' when the client's application type is 'native' and the scheme of the redirect URI is 'http'."
A011309: "The client has not registered any redirect URI."
A011310: "The client type is 'public', but the client has not registered any redirect URI."
A011311: "An authorization request whose response_type contains either 'token' or 'id_token' requires the client to register at least one redirect URI even if the client type is 'confidential'."
A011312: "'redirect_uri' parameter must be contained when a 'confidential' client that has not registered any redirect URI makes an authorization request of the authorization code grant type."
A011313: "'redirect_uri' parameter must be contained when a client that has registered multiple redirect URIs makes an authorization request."
A011314: "The value of 'redirect_uri' contained in the authorization request is not well-formed."
A011315: "The value of 'redirect_uri' contained in the authorization request is not absolute."
A011316: "The value of 'redirect_uri' contained in the authorization request has a fragment component."
A011317: "The value of 'redirect_uri' ({URL}) is not registered."
A011318: "The authorization request does not contain 'redirect_uri' parameter."
A011319: "The value of 'redirect_uri' parameter contained in the authorization request is empty."
A012301: "The value of 'response_mode' in the request object is not a string."
A012302: "The authorization request contains multiple 'response_mode' parameters."
A012303: "The value of 'response_mode' is not supported."
A012304: "'response_mode=query' is not allowed when 'response_type' is '{Response Type}'."
A012305: "The authorization request required the authorization response be encoded as JWT by specifying 'response_mode={Response Mode}', but the 'authorization_signed_response_alg' metadata of the client (ID = {Client ID}) is not set."
A012306: "The authorization request required the authorization response be encoded as JWT by specifying 'response_mode={Response Mode}', but the 'authorization_signed_response_alg' metadata of the client (ID = {Client ID}) is 'none'. Change the registered value of the metadata."
A012307: "The authorization request required the authorization response be encoded as JWT by specifying 'response_mode={Response Mode}', but the 'authorization_signed_response_alg' metadata of the client (ID = {Client ID}) is a symmetric algorithm ('{Algorithm}'). Change the algorithm to an asymmetric one or change the client type to 'confidential'."
A012308: "The authorization request required the authorization response be encoded as JWT by specifying 'response_mode={Response Mode}', but the 'authorization_encrypted_response_alg' metadata of the client (ID = {Client ID}) is a symmetric algorithm ('{Algorithm}'). Change the algorithm to an asymmetric one or change the client type to 'confidential'."
A012309: "For the response type ('{Response Type}'), the response mode ('{Response Mode}') is allowed only when the authorization response JWT is encrypted. Set the value of the 'authorization_encrypted_response_alg' metadata of the client (ID = {Client ID})."
A013301: "The value of 'state' in the request object is not a string."
A013302: "The authorization request contains multiple 'state' parameters."
A013303: "The value of 'state' contains non-ASCII letters."
A013304: "The length of 'state' exceeds the maximum length ({Number})."
A014301: "The value of 'nonce' in the request object is not a string."
A014302: "The authorization request contains multiple 'nonce' parameters."
A014303: "'nonce' is required when 'response_type' contains 'id_token'."
A014304: "The value of 'nonce' contains non-ASCII letters."
A014305: "The length of 'nonce' exceeds the maximum length ({Number})."
A015301: "The value of 'display' in the request object is not a string."
A015302: "The authorization request contains multiple 'display' parameters."
A015303: "The value of 'display' is not supported."
A015304: "The authorization request does not contain 'display' parameter but the default value 'page' is not supported by this service."
A015305: "This service does not support the specified value of 'display'."
A016301: "The value of 'prompt' in the request object is not a string."
A016302: "The authorization request contains multiple 'prompt' parameters."
A016303: "The value of 'prompt' contains an invalid element."
A016304: "When 'none' is included, the 'prompt' request parameter must not include any other value."
A017301: "The value of 'max_age' in the request object is not a number."
A017302: "The authorization request contains multiple 'max_age' parameters."
A017303: "The value of 'max_age' failed to be parsed as a number."
A017304: "The value of 'max_age' is not an integer."
A017305: "The value of 'max_age' is out of the range of 'int'."
A018101: "Failed to get the list of supported UI locales of the service from 'ui_locale' table."
A018301: "The value of 'ui_locales' in the request object is not a string."
A018302: "The authorization request contains multiple 'ui_locales' parameters."
A019101: "Failed to insert a new record into the 'authorization_ticket' table."
A020101: "Failed to get the list of supported claim locales of the service from 'claim_locale' table."
A020301: "The value of 'claims_locales' in the request object is not a string."
A020302: "The authorization request contains multiple 'claims_locales' parameters."
A021101: "Failed to get the list of the default ACRs of the client from 'default_acr' table."
A021102: "Failed to get the list of supported ACRs of the service from 'acr' table."
A021301: "The value of 'acr_values' in the request object is not a string."
A021302: "The authorization request contains multiple 'acr_values' parameters."
A021303: "ACR values cannot be specified by any means ('claim', 'acr_values' or 'default_acr_values') because this service supports no ACR value."
A021304: "The ACR value '{ACR}' is not supported by this service."
A022301: "The value of 'claims' in the request object is not a JSON object."
A022302: "The authorization request contains multiple 'claims' parameters."
A022303: "The value of 'claims' parameter in the authorization request is not a JSON object."
A022304: "The value of 'userinfo' in 'claims' is not a JSON object."
A022305: "The value of 'id_token' in 'claims' is not a JSON object."
A022306: "The structure of '{Context}/verified_claims' in the 'claims' request parameter is wrong: {Error Message}"
A022307: "'{Context}/verified_claims' in the 'claims' request parameter is invalid: {Error Message}"
A023301: "The value of '{Property Name}' in 'claims' is not a JSON object."
A023302: "The value of 'essential' of '{Property Name}' in 'claims' is not a boolean value."
A023303: "The value of 'value' of '{Property Name}' in 'claims' cannot be cast to {Type}."
A023304: "The value of 'values' of '{Property Name}' in 'claims' is not an array."
A023305: "The value of 'values' of '{Property Name}' in 'claims' contains an element which cannot be cast to {Type}."
A023306: "The request parameter '{Request Parameter Name}' is included in the request more than once."
A024301: "The claim '{Claim Name}' for '{Context}' cannot be requested by 'claims' parameter when the value of 'prompt' is 'none'."
A024302: "The scope '{Scope Name}' results in requesting some claims but it is not allowed when the value of 'prompt' is 'none'."
A025101: "Failed to create a client of the service (API Key = {Service's API Key})."
A026001: "The client (ID = {Client ID}) was deleted successfully."
A026101: "Failed to delete the client (ID = {Client ID})."
A026201: "The client (ID = {Client ID}) does not exist."
A026202: "The client (ID = {Client ID}) does not belong to the service."
A026203: "The client ({Client Identifier}) has already been deleted."
A026204: "The client ({Client Identifier}) is locked."
A027201: "The client (ID = {Client ID}) does not exist."
A027202: "The client (ID = {Client ID}) does not belong to the service."
A027203: "The client ({Client Identifier}) has been deleted."
A027204: "The client ({Client Identifier}) is locked."
A028201: "Parameter 'start' failed to be parsed as int."
A028202: "Parameter 'start' must not be negative."
A028203: "Parameter 'end' failed to be parsed as int."
A028204: "Parameter 'end' must not be negative."
A029101: "Failed to update the client (ID = {Client ID})."
A029201: "The client (ID = {Client ID}) does not exist."
A029202: "The client (ID = {Client ID}) does not belong to the service."
A029203: "The client ({Client Identifier}) has been deleted."
A029204: "The client ({Client Identifier}) is locked."
A030201: "The client (ID = {Client ID}) does not exist."
A030202: "The client (ID = {Client ID}) has been deleted."
A030203: "The client (ID = {Client ID}) is locked."
A030601: "Cannot update the client because the client ID alias is already in use. Client ID aliases must be unique in the same service."
A030602: "The size of 'customMetadata' is too big."
A031201: "{API Path}, '{Value}' is not supported as a value for '{Key}'."
A031202: "{API Path}, '{Key}' is unspecified, empty or invalid."
A031203: "{API Path}, '{Key}' must consist of only printable ASCII letters."
A031204: "{API Path}, The length of '{Key}' must not exceed {Number} letters."
A031205: "{API Path}, The element at the index '{Number}' of '{Key}' is null."
A031206: "{API Path}, The element at the index '{Number}' of '{Key}' contains non-ASCII letters."
A031207: "{API Path}, The length of the element at the index '{Number}' of '{Key}' must not exceed {Number} letters."
A031208: "{API Path}, The element at the index '{Number}' of '{Key}' is not a well-formed URI."
A031209: "{API Path}, The element at the index '{Number}' of '{Key}' is not an absolute URI."
A031210: "{API Path}, The element at the index '{Number}' of '{Key}' has a fragment component."
A031211: "{API Path}, The element at the index '{Number}' of '{Key}' is a duplicate."
A031212: "{API Path}, The value of '{Key}' failed to be parsed as a JWK Set."
A031213: "{API Path}, '{Key}' must not be negative."
A031214: "{API Path}, '{Key}' is unspecified or invalid."
A031215: "{API Path}, The JWK Set specified by '{Key}' is too big."
A031216: "{API Path}, The JWK Set specified by '{Key}' contains non-ASCII letters."
A031217: "{API Path}, The '{Key}' URI has a fragment component."
A031218: "{API Path}, The '{Key}' URI has a query component."
A031219: "{API Path}, The scheme of the '{Key}' URI is not https."
A031220: "{API Path}, The number of entries for '{Key}' must not exceed {Number}."
A031221: "{API Path}, The value ({Number}) of '{Key}' is not in the range between {Number} and {Number}."
A031222: "{API Path}, '{Algorithm}' is given as the value of '{Key}', but the algorithm is not asymmetric."
A031223: "{API Path}, The value of '{Key}' is not a valid X.500 distinguished name."
A031224: "{API Path}, The '{Field Name}' of the element at the index '%d' of '{Index}' is a duplicate."
A031225: "{API Path}, The '{Field Name}' of the element at the index '%d' of '{Index}' is null or empty."
A031226: "{API Path}, The '{Field Name}' of the element at the index '%d' of '{Index}' contains non-ASCII letters."
A031227: "{API Path}, The length of '{Field Name}' of the element at the index '%d' of '{Index}' must not exceed %d letters."
A031228: "{API Path}, The '{Field Name}' of the element at the index '{Index}' of '{Property Name}' is null."
A031229: "{API Path}, The scheme part of the '{Field Name}' of the element at the index '{Index}' of '{Property Name}' is not https."
A031230: "{API Path}, The list of '{Field Name}' is too long."
A031231: "{API Path}, The element at the index '{Number}' of '{Key}' is null or empty."
A031232: "%s, The element at the index '%d' of '%s' does not match the allowed pattern."
A032201: "{API Path}, The tag of the tagged-value at the index '{Number}' of '{Key}' is empty."
A032202: "{API Path}, The value of the tagged-value at the index '{Number}' of '{Key}' is empty."
A032203: "{API Path}, The tag of the tagged-value at the index '{Number}' of '{Key}' is a duplicate."
A032204: "{API Path}, The value of the tagged-value at the index '{Number}' of '{Key}' is not a well-formed URI."
A032205: "{API Path}, The length of the tag of the tagged-value at the index '{Number}' of '{Key}' exceeds the maximum length ({Number})."
A032206: "{API Path}, The tag of the tagged-value at the index '{Number}' of '{Key}' contains non-ASCII letters."
A032207: "{API Path}, The length of the value of the tagged-value at the index '{Number}' of '{Key}' exceeds the maximum length ({Number})."
A032208: "{API Path}, The value of the tagged-value at the index '{Number}' of '{Key}' contains non-ASCII letters."
A032209: "{API Path}, The request is empty."
A032210: "{API Path}, The scheme of Sector Identifier URI must be 'https'."
A032211: "{API Path}, idTokenEncryptionAlg is null although idTokenEncryptionEnc is not null."
A032212: "{API Path}, userInfoEncryptionAlg is null although userInfoEncryptionEnc is not null."
A032213: "{API Path}, requestEncryptionAlg is null although requestEncryptionEnc is not null."
A032214: "{API Path}, authorizationEncryptionAlg is null although authorizationEncryptionEnc is not null."
A032215: "{API Path}, bcNotificationEndpoint must not be null when bcDeliveryMode is PING or PUSH."
A032216: "{API Path}, Must not have multiple certificate subject types."
A032217: "{API Path}, When using TLS_CLIENT_AUTH, a certificate subject type must be set."
A032218: "{API Path}, The client's subject DN is not in the correct format."
A032219: "{API Path}, The sector identifier URI did not resolve to a valid JSON document."
A032220: "{API Path}, The sector identifier did not include one or more of the requested redirect URIs."
A032221: "{API Path}, The 'pairwise' subject type must be used with a 'sector_identifier_uri' or a single host in 'redirect_uris'."
A032222: "{API Path}, The size of 'attributes' is too big."
A032223: "{API Path}, The format of 'customMetadata' is wrong."
A033101: "Failed to create a service of the service owner (API Key = {Service Owner's API Key})."
A034001: "The service (API Key = {Service's API Key}) was deleted successfully."
A034101: "Failed to delete the service (API Key = {Service's API Key})."
A034201: "The service (API Key = {Service's API Key}) does not exist."
A034202: "The service (API Key = {Service's API Key}) does not belong to the service owner."
A034203: "The service (API Key = {Service's API Key}) has already been deleted."
A034204: "The service (API Key = {Service's API Key}) is locked."
A035201: "The service (API Key = {Service's API Key}) does not exist."
A035202: "The service (API Key = {Service's API Key}) does not belong to the service owner."
A035203: "The service (API Key = {Service's API Key}) has been deleted."
A035204: "The service (API Key = {Service's API Key}) is locked."
A036201: "Parameter 'start' failed to be parsed as int."
A036202: "Parameter 'start' must not be negative."
A036203: "Parameter 'end' failed to be parsed as int."
A036204: "Parameter 'end' must not be negative."
A037101: "Failed to update the service (API Key = {Service's API Key})."
A037201: "The service (API Key = {Service's API Key}) does not exist."
A037202: "The service (API Key = {Service's API Key}) does not belong to the service owner."
A037203: "The service (API Key = {Service's API Key}) has been deleted."
A037204: "The service (API Key = {Service's API Key}) is locked."
A038201: "The service (API Key = {Service's API Key}) does not exist."
A038202: "The service (API Key = {Service's API Key}) has been deleted."
A038203: "The service (API Key = {Service's API Key}) is locked."
A039201: "{API Path}, The request is empty."
A039202: "{API Path}, 'supportedResponseTypes' must be specified."
A039203: "{API Path}, The scope name of the element at the index '{Number}' of 'supportedScopes' is a duplicate."
A039204: "{API Path}, The scope name of the element at the index '{Number}' of 'supportedScopes' is not specified."
A039205: "{API Path}, The scope name of the element at the index '{Number}' of 'supportedScopes' exceeds the maximum length ({Number})."
A039206: "{API Path}, The scope name of the element at the index '{Number}' of 'supportedScopes' contains a bad letter at the index '{Number}'."
A039207: "{API Path}, The scope description of the element at the index '{Number}' of 'supportedScopes' exceeds the maximum length ({Number})."
A039208: "{API Path}, The scope name ('{Scope Name}') of the element at the index '{Number}' of 'supportedScopes' is reserved."
A039209: "{API Path}, The SNS of the element at the index '{Number}' of '{Key}' is a duplicate."
A039210: "{API Path}, The SNS of the element at the index '{Number}' of '{Key}' is not supported."
A039211: "{API Path}, The API key of the element at the index '{Number}' of '{Key}' is not specified."
A039212: "{API Path}, The API key of the element at the index '{Number}' of '{Key}' exceeds the maximum length ({Number})."
A039213: "{API Path}, The API key of the element at the index '{Number}' of '{Key}' contains a non-ASCII letter."
A039214: "{API Path}, The API secret of the element at the index '{Number}' of '{Key}' exceeds the maximum length ({Number})."
A039215: "{API Path}, The API secret of the element at the index '{Number}' of '{Key}' contains a non-ASCII letter."
A039216: "{API Path}, descriptions[{Index}] of the scope '{Scope Name}' (supportedScopes[{Index}]) is empty."
A039217: "{API Path}, descriptions[{Index}].tag of the scope '{Scope Name}' (supportedScopes[{Index}]) is empty."
A039218: "{API Path}, The value '{Value}' of descriptions[{Index}].tag of the scope '{Scope Name}' (supportedScopes[{Index}]) is a duplicate."
A039219: "{API Path}, The length of descriptions[{Index}].tag of the scope '{Scope Name}' (supportedScopes[{Index}]) exceeds the maximum length ({Number})."
A039220: "{API Path}, descriptions[{Index}].tag of the scope '{Scope Name}' (supportedScopes[{Index}]) contains a non-ASCII letter."
A039221: "{API Path}, descriptions[{Index}].value of the scope '{Scope Name}' (supportedScopes[{Index}]) is empty."
A039222: "{API Path}, The length of descriptions[{Index}].value of the scope '{Scope Name}' (supportedScopes[{Index}]) exceeds the maximum length ({Number})."
A039223: "{API Path}, attributes[{Index}] of the scope '{Scope Name}' (supportedScopes[{Index}]) is empty."
A039224: "{API Path}, attributes[{Index}].key of the scope '{Scope Name}' (supportedScopes[{Index}]) is empty."
A039225: "{API Path}, The length of attributes[{Index}].key of the scope '{Scope Name}' (supportedScopes[{Index}]) exceeds the maximum length ({Number})."
A039226: "{API Path}, attributes[{Index}].key of the scope '{Scope Name}' (supportedScopes[{Index}]) contains a non-ASCII letter."
A039227: "{API Path}, attributes[{Index}].value of the scope '{Scope Name}' (supportedScopes[{Index}]) is empty."
A039228: "{API Path}, The length of attributes[{Index}].value of the scope '{Scope Name}' (supportedScopes[{Index}]) exceeds the maximum length ({Number})."
A039229: "{API Path}, The value '{Value}' of attributes[{Index}].key of the scope '{Scope Name}' (supportedScopes[{Index}]) is a duplicate."
A039230: "{API Path}, The value '{Value}' (trustedRootCertificates[{Index}]) is not a valid X509 certificate in PEM format."
A039231: "{API Path}, The size of 'attributes' is too big."
A039232: "{API Path}, The value '{Value}' (supportedCustomClientMetadata[%d]) is reserved."
A040001: "The authorization request was processed successfully."
A041201: "The value of 'ticket' in the /api/auth/authorization/issue request is null or empty."
A041202: "There is no entity having the ticket specified in the /api/auth/authorization/issue request (ticket = {Ticket})."
A041203: "The ticket in the /api/auth/authorization/issue request does not belong to the service."
A041301: "The ticket in the /api/auth/authorization/issue request has expired."
A042201: "The value of 'subject' in the /api/auth/authorization/issue request is null or empty."
A042202: "The length of 'subject' in the /api/auth/authorization/issue request exceeds the maximum length ({Number})."
A042203: "The 'subject' in the /api/auth/authorization/issue request contains non-ASCII letters."
A042401: "The authenticated user is different from the user of the grant '{Grant ID}'. Request parameters related to grant management are ignored."
A043201: "The length of 'acr' in the /api/auth/authorization/issue request exceeds the maximum length ({Number})."
A044201: "The value of 'claims' in the /api/auth/authorization/issue request failed to be parsed as a JSON object."
A044202: "'verified_claims' in the 'claims' request parameter is invalid: {Error Message}"
A045101: "Failed to issue a code and/or token(s) from /api/auth/authorization/issue endpoint."
A045102: "The hash algorithm '{Algorithm}' is not supported."
A045201: "The total size of 'properties' is too big."
A045202: "Failed to generate a JWT-based access token: {Error Message}"
A045203: "The total size of 'idtHeaderParams' is too big."
A045301: "The client application (ID = {Client ID}) has been deleted, so '{Claim Name}' for the ID token cannot be calculated."
A045302: "The algorithm to sign ID tokens must not be 'none' if the client application (ID = {Client ID}) wants to get ID tokens."
A045303: "The client application (ID = {Client ID}) has been deleted, so the ID token cannot be serialized."
A045304: "The ticket for token issuance was consumed by another transaction, so tokens are not issued."
A046101: "Failed to sign the ID token with the algorithm '{Algorithm}'."
A046102: "The algorithm ('{Algorithm}') to sign the ID token is not supported."
A046103: "Failed to put the JWK Set of the client application (ID = {Client ID}) into 'client_jwks' table."
A046104: "The key type '{Key Type}' cannot have a public key."
A046105: "Failed to convert a JWK to a PublicKey."
A046106: "The key type '{Key Type}' cannot have a private key."
A046107: "Failed to convert a JWK to a PrivateKey."
A046108: "Failed to encrypt the ID token with alg='{Algorithm}' and enc='{Algorithm}'."
A046109: "The algorithm ('{Algorithm}') to encrypt the ID token is not supported."
A046110: "Failed to create an encrypter to encrypt the ID token due to the unexpected key length. (client_id={Client ID}, alg={Algorithm}, enc={Algorithm}, expected key length={Number})"
A046111: "Failed to create an encrypter to encrypt the ID token. (client_id={Client ID}, alg={Algorithm}, enc={Algorithm})"
A046112: "The JWK Set of the service is marked as hosted but not found in 'service_jwks' table."
A046113: "The length of the secret key to sign the ID token with the algorithm ('{Algorithm}') is shorter than the minimum 256-bit requirement."
A046114: "The elliptic curve of the private key is not supported: algorithm = {Algorithm}"
A046115: "An error occurred while hardware-secured keys of the service ({Service API Key}) were checked."
A046201: "The ID token cannot be signed because this service has not registered its JWK Set although asymmetric algorithm ('{Algorithm}') is required for signing."
A046202: "The ID token cannot be signed because this service has not registered its JWK Set although asymmetric algorithm ('{Algorithm}') is required for signing."
A046203: "The registered JWK Set of this service does not contain the private key to sign the ID token. (alg={Algorithm}, kid={Key ID})"
A046204: "The registered JWK Set of this service contains multiple candidate private keys to sign the ID token. (alg={Algorithm}, kid={Key ID})"
A046301: "The algorithm to sign ID tokens must not be 'none' if the client application (ID = {Client ID}) wants to get ID tokens."
A046302: "The algorithm ('{Algorithm}' for 'id_token_encrypted_response_alg') to encrypt the ID token is not supported."
A046303: "The ID token cannot be encrypted because the client application (ID = {Client ID}) has registered neither 'jwks_uri' nor 'jwks'."
A046304: "Failed to fetch the JWK Set of the client application (ID = {Client ID}) from the location pointed to by 'jwks_uri' ({URL})."
A046305: "Failed to parse the JWK Set of the client application (ID = {Client ID}) fetched from the location pointed to by 'jwks_uri' ({URL}) as JWKSet."
A046306: "The client application (ID = {Client ID}) was not found in the database, unexpectedly."
A046307: "The client application (ID = {Client ID}) has not registered its JWK Set."
A046308: "The JWK Set of the client application (ID = {Client ID}) was not found in the database, unexpectedly."
A046309: "The registered JWK Set of the client application (ID = {Client ID}) does not contain the public key to encrypt the ID token. (alg={Algorithm}, kid={Key ID})"
A046310: "The JWK Set of the client application (ID = {Client ID}) pointed to by 'jwks_uri' ({URL}) does not contain the public key to encrypt the ID token. (alg={Algorithm}, kid={Key ID})"
A046311: "The registered JWK Set of the client application (ID = {Client ID}) contains multiple candidate public keys to encrypt the ID token. (alg={Algorithm}, kid={Key ID})"
A046312: "The JWK Set of the client application (ID = {Client ID}) pointed to by 'jwks_uri' ({URL}) contains multiple candidate public keys to encrypt the ID token. (alg={Algorithm}, kid={Key ID})"
A046313: "The algorithm to encrypt the ID token ('id_token_encrypted_response_alg') is symmetric ({Algorithm}), but the client type of the client (ID = {Client ID}) is not 'confidential'."
A046314: "The algorithm ('{Algorithm}' for 'userinfo_token_encrypted_response_alg') to encrypt the ID token is not supported."
A047101: "The grant type ({Grant Type}) is not supported. Consult the administrator of this authorization server."
A047201: "The token request from the service does not contain 'parameters' parameter."
A047202: "The format of the value of 'parameters' request parameter is wrong."
A047301: "The token request does not contain any request parameters."
A047302: "The grant type specified by the 'grant_type' request parameter is not included in the list of grant types that the client has declared it may use."
A048101: "Failed to get the client information from the database."
A048102: "Failed to get information about the authorization code."
A048103: "Failed to get information about the refresh token."
A048104: "Failed to get the client information by a client ID alias."
A048301: "The token endpoint of this service requires 'client_id' parameter or Authorization header containing a client ID for Resource Owner Password Credentials flow."
A048302: "The value of 'client_id' passed to the token endpoint is empty."
A048303: "The token request contains multiple 'client_id' parameters."
A048304: "No client has the client ID ({Client ID})."
A048305: "The client (ID = {Client ID}) does not belong to this service."
A048306: "The client (ID = {Client ID}) has been deleted."
A048307: "The client (ID = {Client ID}) is locked."
A048312: "The token request specifies the client ID by two different ways but the values are different."
A048314: "Client Credentials flow requires 'client_id' request parameter or Authorization header that contains a client ID."
A048315: "The token request does not contain 'code' parameter although 'grant_type' is 'authorization_code'."
A048316: "The value of 'code' in the token request is empty."
A048317: "The authorization code does not exist."
A048318: "The token request does not contain 'refresh_token' parameter although 'grant_type' is 'refresh_token'."
A048319: "The value of 'refresh_token' in the token request is empty."
A048320: "The refresh token does not exist."
A048321: "The client which the authorization code has been issued to does not exist any longer."
A048322: "The client which the refresh token has been issued to does not exist any longer."
A048323: "No client has the client ID (%s) or the client ID alias."
A048324: "The client ID alias (%s) of the client is not enabled."
A048329: "The client did not send an assertion."
A048330: "The client sent multiple assertions."
A048332: "The client's assertion was not properly formatted."
A048346: "The client provided an invalid certificate for authentication."
A048351: "The client did not provide a certificate to the token endpoint but is configured to use an MTLS-bound access token."
A048352: "The client's subject DN is not in the correct format."
A048353: "Couldn't build a certificate path from the trusted root certificates, but one is required."
A048354: "Couldn't create a certificate validator."
A048355: "The client's presented certificate did not validate against any of the trusted root certificates registered to the service."
A048356: "The service requires validation of the certificate chain, but no trusted root certificates are configured."
A049301: "The token request does not contain 'grant_type' parameter."
A049302: "The value of 'grant_type' in the token request is empty."
A049303: "The token request contains multiple 'grant_type' parameters."
A049304: "The value of 'grant_type' in the token request is invalid."
A049305: "This service does not support the grant_type '{Grant Type}'."
A049306: "The 'implicit' grant_type is invalid for the token endpoint."
A050001: "The token request (grant_type=authorization_code) was processed successfully."
A050101: "Failed to insert a new access token into the database."
A050102: "The value of code_challenge_method extracted from the database is not supported."
A050103: "Failed to get information about the authorization code."
A050105: "Failed to get the list of scope attributes from 'scope_attributes' table."
A050106: "Failed to get live access token records: grant_id={Grant ID}, client_id={Client ID}"
A050107: "Unexpected error in getting live access token records: grant_id={Grant ID}, client_id={Client ID}"
A050201: "The total size of 'properties' is too big."
A050202: "Failed to prepare a JWT-based access token: {Error Message}"
A050301: "The token request does not contain 'code' parameter although 'grant_type' is 'authorization_code'."
A050302: "The value of 'code' in the token request is empty."
A050303: "The token request contains multiple 'code' parameters."
A050304: "The token request contains multiple 'redirect_uri' parameters."
A050305: "No such authorization code."
A050306: "The authorization code does not belong to this service."
A050307: "The authorization code does not belong to the client."
A050308: "The authorization code was created with a redirect URI specified explicitly, but the token request does not contain 'redirect_uri' parameter."
A050309: "The redirect URI contained in the token request does not match the one which was specified when the authorization code was created."
A050310: "The token request contains 'redirect_uri' although the authorization code was created without specifying any redirect URI explicitly."
A050311: "The authorization code has already expired."
A050312: "The token request does not contain 'code_verifier' although the authorization code was created with 'code_challenge'."
A050313: "The value of 'code_verifier' in the token request is empty."
A050314: "The token request contains multiple 'code_verifier' parameters."
A050315: "The code challenge value computed with 'code_verifier' is different from 'code_challenge' contained in the authorization request."
A050316: "The value of 'code_verifier' in the token request does not conform to the format defined in RFC 7636."
A050317: "The token request contains 'code_verifier' although its corresponding authorization request did not contain 'code_challenge'."
A051001: "Authlete has successfully issued a ticket to the service (API Key = {Service's API Key}) for the token request from the client (ID = {Client ID}). [grant_type=password]"
A051101: "Failed to insert a new record into the 'token_ticket' table."
A051102: "Failed to get the list of registered scopes from 'scope' table."
A051103: "Failed to get the list of scope attributes from 'scope_attributes' table."
A051301: "The token request does not contain 'username' parameter although 'grant_type' is 'password'."
A051302: "The value of 'username' in the token request is empty."
A051303: "The token request contains multiple 'username' parameters."
A051304: "The token request does not contain 'password' parameter although 'grant_type' is 'password'."
A051305: "The value of 'password' in the token request is empty."
A051306: "The token request contains multiple 'password' parameters."
A051307: "The token request contains multiple 'scope' parameters."
A051308: "The token request has no 'scope' parameter or none of the given scopes is recognized as valid, and the service's default scope set is empty. The service's configuration does not allow requests that request no scope."
A052001: "The token request (grant_type=client_credentials) was processed successfully."
A052101: "Failed to get the list of registered scopes from 'scope' table."
A052102: "Failed to insert a new access token into the database."
A052103: "Failed to get the list of scope attributes from 'scope_attributes' table."
A052201: "The total size of 'properties' is too big."
A052202: "Failed to prepare a JWT-based access token: {Error Message}"
A052301: "Public clients are not allowed to use 'grant_type=client_credentials'."
A052302: "The token request contains multiple 'scope' parameters."
A052303: "The token request has no 'scope' parameter or none of the given scopes is recognized as valid, and the service's default scope set is empty. The service's configuration does not allow requests that request no scope."
A053001: "The token request (grant_type=refresh_token) was processed successfully."
A053101: "Failed to update the access token entity in the database."
A053102: "Failed to get information about the refresh token."
A053104: "Failed to get the list of scope attributes from 'scope_attributes' table."
A053201: "The total size of 'properties' is too big."
A053202: "Failed to prepare a JWT-based access token: {Error Message}"
A053301: "The token request does not contain 'refresh_token' parameter although 'grant_type' is 'refresh_token'."
A053302: "The value of 'refresh_token' in the token request is empty."
A053303: "The token request contains multiple 'refresh_token' parameters."
A053304: "The token request contains multiple 'scope' parameters."
A053305: "The refresh token passed to the token endpoint does not exist."
A053306: "The refresh token does not belong to this service."
A053307: "The refresh token does not belong to the client."
A053308: "The refresh token has already expired."
A053309: "The value of 'scope' in the token request contains a scope which is not covered by the old access token."
A053310: "Failed to refresh the access token because the database record for the refresh token was not found."
A053311: "The DPoP thumbprint for the refresh token did not match the thumbprint presented in the request."
A053401: "The response from Authlete's /api/auth/token endpoint (grant_type=refresh_token): %s"
A054001: "The token request (grant_type=password) was processed successfully."
A054101: "Failed to delete the consumed ticket ({Ticket})."
A055201: "The value of 'ticket' in the /api/auth/token/issue request is null or empty."
A055202: "There is no entity having the ticket specified in the /api/auth/token/issue request."
A055203: "The ticket in the /api/auth/token/issue request does not belong to the service."
A055301: "The ticket in the /api/auth/token/issue request has expired."
A056001: "The access token is valid."
A057101: "Failed to get information about the access token from the database."
A057301: "The request does not contain a valid access token."
A057302: "The access token does not exist."
A057303: "The access token does not belong to the service."
A057304: "Failed to extract the value of the 'jti' claim from the access token."
A057305: "The value of the 'jti' claim in the access token is null or empty."
A057306: "When the format of an access token is JWT, it must be a JWS signed with an asymmetric algorithm without encryption."
A058101: "Failed to delete the consumed ticket ({Ticket})."
A059201: "The value of 'ticket' in the /api/auth/authorization/fail request is null or empty."
A059202: "There is no entity having the ticket specified in the /api/auth/authorization/fail request."
A059203: "The ticket in the /api/auth/authorization/fail request does not belong to the service."
A059301: "The ticket in the /api/auth/authorization/fail request has expired."
A060201: "The /api/auth/authorization/fail request does not contain 'reason' parameter."
A060301: "The authorization request contains prompt=none, but no end-user has logged in this service."
A060302: "This service cannot handle 'max_age' parameter properly when the authorization request contains prompt=none."
A060303: "The authorization request contains prompt=none, but the maximum authentication age has passed."
A060304: "The authorization request contains prompt=none and specifies 'sub' claim, but the current end-user is different from the subject."
A060305: "The authorization request contains prompt=none and requests 'acr' as essential, but the authentication performed for the end-user satisfies none of the requested ACRs."
A060306: "The end-user denied the authorization request."
A060307: "The authorization request failed due to an unknown reason."
A060308: "The authorization request failed due to a server error."
A060309: "The authorization request failed because the end-user was not authenticated or did not exist."
A060310: "The authorization server cannot obtain an account selection choice made by the end-user."
A060311: "The authorization server cannot obtain consent from the end-user."
A060312: "The authorization server needs interaction with the end-user."
A060313: "The requested resource is invalid."
A061101: "Failed to issue an access token from /api/auth/token/issue endpoint."
A061102: "Failed to get the list of scope attributes from 'scope_attributes' table."
A061103: "Failed to get information about the client application."
A061104: "Failed to get extension data of the client application."
A061201: "The total size of 'properties' is too big."
A061202: "Failed to prepare a JWT-based access token: {Error Message}"
A061301: "The ticket for token issuance was consumed by another transaction, so token are not issued."
A062101: "Failed to delete the consumed ticket ({Ticket})."
A063201: "The value of 'ticket' in the /api/auth/token/fail request is null or empty."
A063202: "There is no entity having the ticket specified in the /api/auth/token/fail request."
A063203: "The ticket in the /api/auth/token/fail request does not belong to the service."
A063301: "The ticket in the /api/auth/token/fail request has expired."
A064301: "No scopes are associated with the access token."
A064302: "The access token does not cover the required scope '{Scope Name}'."
A065101: "Failed to delete an access token entity (number = %d): %s"
A065301: "The access token has expired but it can be refreshed using the corresponding refresh token."
A065302: "Both the access token and the refresh token have expired."
A065303: "The access token has expired."
A065304: "The client failed to present a certificate and the access token is MTLS bound."
A065305: "The client's certificate does not match the thumbprint of the access token."
A065306: "Failed to calculate the thumbprint of the client certificate."
A065307: "Failed to parse the client certificate because it is malformed."
A065308: "Expected a DPoP header but none was provided."
A065309: "Thumbprint of the provided DPoP key does not match the expected DPoP thumbprint."
A065310: "There was an error processing the DPoP header: {Error}"
A065311: "The DPoP signature algorithm ({Algorithm}) must not be symmetric or 'none'."
A065312: "The DPoP header did not include a public key in JWK format."
A065313: "The DPoP signature algorithm is missing."
A066301: "The access token is not associated with any subject."
A066302: "The subject associated with the access token is different from the subject required to access the protected resource."
A067201: "The /api/auth/token/fail request does not contain 'reason' parameter."
A067301: "The credentials (username & password) passed to the token endpoint are invalid."
A067302: "The token request failed due to an unknown reason."
A067303: "The requested resource is invalid."
A068101: "Failed to get the list of claims supported by the service."
A069301: "The value of 'login_hint' in the request object is not a string."
A069302: "The authorization request contains multiple 'login_hint' parameters."
A077301: "'prompt=none' is not supported."
A077302: "The direct authorization endpoint is not enabled in this service (API Key = {API Key})."
A081101: "Failed to issue an access token from /api/auth/token/direct endpoint."
A081102: "Failed to get the list of scope attributes from 'scope_attributes' table."
A081201: "Failed to prepare a JWT-based access token: {Error Message}"
A081301: "The credentials (username & password) passed to the token endpoint are invalid."
A082201: "The authentication callback endpoint of the service ({Service's API Key}) is not registered."
A082202: "The authentication callback failed (Service = {Service's API Key}, Client = {Client ID}): {Error Message}"
A082203: "'subject' in the response from the authentication callback endpoint of the service ({Service's API Key}) is empty."
A082204: "The length ({Number}) of 'subject' in the response from the authentication callback endpoint of the service ({Service's API Key}) exceeds the maximum size ({Number})."
A082205: "'subject' in the response from the authentication callback endpoint of the service ({Service's API Key}) contains non-ASCII letters."
A082206: "'claims' in the response from the authentication callback endpoint of the service ({Service's API Key}) failed to be parsed as JSON."
A088101: "Failed to get information about the access token from the database."
A088301: "The request does not contain a valid access token."
A088302: "The access token does not exist."
A088303: "The access token does not belong to the service."
A088304: "Failed to extract the value of the 'jti' claim from the access token."
A088305: "The value of the 'jti' claim in the access token is null or empty."
A088306: "When the format of an access token is JWT, it must be a JWS signed with an asymmetric algorithm without encryption."
A088307: "The access token is invalid."
A089301: "The access token has expired and does not have an associated refresh token."
A089302: "Both the access token and the associated refresh token have expired."
A089303: "The access token has expired, but it can be refreshed by using the associated refresh token."
A089304: "The userinfo endpoint requires 'openid' scope, but the access token does not cover the scope."
A089305: "The userinfo endpoint requires an access token to be associated with a subject."
A089306: "An access token issued through the grant type of 'Resource Owner Password Credentials' is not allowed to access the userinfo endpoint."
A089307: "The access token is bound to a client certificate, but the userinfo request includes no client certificate."
A089308: "Failed to parse the client certificate because it is malformed."
A089309: "Failed to calculate the thumbprint of the client certificate."
A089310: "The thumbprint of the client certificate used in the userinfo request does not match the thumbprint of the client certificate to which the access token is bound."
A089311: "Expected a DPoP header but none was provided."
A089312: "Thumbprint of the provided DPoP key does not match the expected DPoP thumbprint."
A089313: "There was an error processing the DPoP header: {Error}."
A089314: "The DPoP signature algorithm ({Algorithm}) must not be symmetric or 'none'."
A089315: "The DPoP header did not include a public key in JWK format."
A089316: "The DPoP signature algorithm is missing."
A090101: "Failed to get the list of claims supported by the service."
A091001: "The access token presented at the userinfo endpoint is valid."
A092101: "Failed to get information about the access token from the database."
A092301: "The request does not contain a valid access token."
A092302: "The access token does not exist."
A092303: "The access token does not belong to the service."
A092304: "Failed to extract the value of the 'jti' claim from the access token."
A092305: "The value of the 'jti' claim in the access token is null or empty."
A092306: "When the format of an access token is JWT, it must be a JWS signed with an asymmetric algorithm without encryption."
A092307: "The access token is invalid."
A093301: "The access token has expired and does not have an associated refresh token."
A093302: "Both the access token and the associated refresh token have expired."
A093303: "The access token has expired, but it can be refreshed by using the associated refresh token."
A093304: "The userinfo endpoint requires 'openid' scope, but the access token does not cover the scope."
A093305: "The userinfo endpoint requires an access token to be associated with a subject."
A093306: "An access token issued through the grant type of 'Resource Owner Password Credentials' is not allowed to access the userinfo endpoint."
A094201: "The value of 'claims' in the /api/auth/userinfo/issue request failed to be parsed as a JSON object."
A094202: "'verified_claims' in the 'claims' request parameter is invalid: {Error Message}"
A095301: "The client application (ID = {Client ID}) has been deleted, so the user information cannot be serialized."
A096001: "User information was obtained successfully."
A097101: "Failed to get information about the client from the database."
A097301: "The client application associated with the presented access token does not exist any longer."
A097302: "The client application associated with the presented access token has been deleted."
A097303: "The client application associated with the presented access token is locked."
A098101: "Failed to get information about the client from the database."
A098301: "The client application associated with the presented access token does not exist any longer."
A098302: "The client application associated with the presented access token has been deleted."
A098303: "The client application associated with the presented access token is locked."
A099001: "The developer authentication request was processed successfully. (authenticated={Boolean})"
A099101: "Failed to get information about the service."
A099201: "The service has already been deleted."
A099202: "The service is locked."
A101201: "The developer authentication callback endpoint of the service ({Service's API Key}) is not registered."
A101202: "The developer authentication callback failed (Service = {Service's API Key}): {Error Message}"
A101203: "'subject' in the response from the developer authentication callback endpoint of the service ({Service's API Key}) is empty."
A101204: "The length ({Number}) of 'subject' in the response from the developer authentication callback endpoint of the service ({Service's API Key}) exceeds the maximum size ({Number})."
A101205: "'subject' in the response from the developer authentication callback endpoint of the service ({Service's API Key}) contains non-ASCII letters."
A101206: "The length ({Number}) of 'displayName' in the response from the developer authentication callback endpoint of the service ({Service's API Key}) exceeds the maximum size ({Number})."
A104201: "The 'grantType' parameter is empty."
A104202: "REFRESH_TOKEN is not allowed as a value for the 'grantType' parameter."
A104203: "The specified grant type ({Grant Type}) is not supported by this service ({Service's API Key})."
A105201: "The 'subject' parameter is empty."
A105202: "The length of 'subject' in the /api/auth/token/create request exceeds the maximum length ({Number})."
A105203: "The 'subject' in the /api/auth/token/create request contains non-ASCII letters."
A106101: "Failed to get supported custom scopes of the service ({Service's API Key}) from the database."
A106102: "Failed to get the list of scope attributes from 'scope_attributes' table."
A106201: "Unsupported scope: {Scope Name}"
A107101: "Failed to get information about the client (ID = {Client ID})."
A107102: "Failed to get extension data of the client (ID = {Client ID})."
A107201: "No client has the client ID ({Client ID})."
A107202: "The client identified by the client ID ({Client ID}) does not belong to the service."
A107203: "The client identified by the client ID ({Client ID}) is locked."
A108101: "Failed to insert a new access token into the database."
A108201: "The total size of 'properties' is too big."
A108202: "The 'refreshToken' parameter cannot be specified since the service does not support the refresh token flow."
A108203: "The 'refreshToken' parameter cannot be specified when 'grant_type' is 'implicit'."
A108204: "The 'refreshToken' parameter cannot be specified when 'grant_type' is 'client_credentials'."
A109001: "An access token was created successfully: {Grant Type}, client = {Client ID}"
A110101: "Failed to get the JWK Set record of the service ({Service's API Key})."
A110105: "Failed to get the list of hardware-secured keys of the service (%d)."
A110106: "Failed to convert an HskEntity (alg={Algorithm}, handle={Handle}) to a JWK: {Error Message}"
A111201: "The value of 'subject' in the /api/auth/token/issue request is null or empty."
A111202: "The length ({Number}) of 'subject' in the /api/auth/token/issue request exceeds the maximum size ({Number})."
A111203: "'subject' in the /api/auth/token/issue request contains non-ASCII letters."
A113001: "The token has been revoked successfully."
A113201: "The revocation request from the service does not contain 'parameters' parameter."
A113202: "The format of the value of 'parameters' request parameter is wrong."
A113301: "The revocation request does not contain any request parameters."
A114101: "Failed to get the client information from the database (ID = {Client ID})."
A114102: "Failed to get the client information by a client ID alias."
A114301: "The revocation endpoint of this service requires 'client_id' parameter."
A114302: "The value of 'client_id' passed to the revocation endpoint is empty."
A114303: "The revocation request contains multiple 'client_id' parameters."
A114304: "No client has the client ID ({Client ID})."
A114305: "The client (ID = {Client ID}) does not belong to this service."
A114306: "The client (ID = {Client ID}) has been deleted."
A114307: "The client (ID = {Client ID}) is locked."
A114308: "The revocation request does not contain 'client_secret' although the client type is 'confidential'."
A114309: "The value of 'client_secret' in the revocation request is empty."
A114310: "The revocation request contains multiple 'client_secret' parameters."
A114311: "The client credentials contained in the revocation request are invalid."
A114312: "The revocation request specifies the client ID by two different ways but the values are different."
A114313: "The revocation request specifies the client secret by two different ways but the values are different."
A114314: "No client has the client ID (%s) or the client ID alias."
A114315: "The client ID alias (%s) of the client is not enabled."
A115301: "The revocation request does not contain 'token' parameter."
A115302: "The value of 'token' in the revocation request is empty."
A115303: "The revocation request contains multiple 'token' parameters."
A116101: "Failed to look up an access token."
A116102: "Failed to look up a refresh token."
A116103: "Failed to revoke the token."
A116104: "Failed to get information about the client application that is associated with the token."
A116301: "The presented token has not been issued to the client application (ID = {Client ID})."
A116302: "The revocation request does not contain 'client_secret' although the client type of the client application that is associated with the token is 'confidential'."
A116303: "The client application associated with the token does not belong to the service."
A116304: "The client application associated with the token is locked."
A117301: "The direct token endpoint is not enabled in this service ({Service's API Key})."
A117302: "HTTP method for a token request must be POST."
A118301: "The direct revocation endpoint is not enabled in this service ({Service's API Key})."
A119301: "The direct jwks endpoint is not enabled in this service ({Service's API Key})."
A120201: "The service owner (API Key = {Service Owner's API Key}) does not exist."
A122601: "The service owner (API key = {Service Owner's API Key}) cannot create a new service because the current number of services has reached the maximum number ({Number}) of the plan ({Plan Name})."
A123601: "Cannot create a new client because the current number of clients has reached the maximum number ({Number}) of clients per developer."
A123602: "Cannot create a new client because the current number of clients has reached the maximum number ({Number}) of the plan ({Plan Name}). Consult the manager of this service."
A123603: "Cannot create a new client because the client ID alias is already in use. Client ID aliases must be unique in the same service."
A123604: "The size of 'customMetadata' is too big."
A124301: "The authorization request does not contain 'code_challenge' parameter. See RFC 7636 for details."
A124302: "The value of 'code_challenge' parameter in the authorization request is empty. See RFC 7636 for details."
A124303: "The authorization request contains multiple 'code_challenge' parameters."
A124304: "The value of 'code_challenge' does not comply with RFC 7636."
A124305: "The authorization request contains multiple 'code_challenge_method' parameters."
A124306: "The value of 'code_challenge_method' is not supported."
A124307: "'code_challenge_method=S256' must be explicitly included in the request."
A124308: "The value of the 'code_challenge_method' request parameter must be 'S256'."
A124309: "The value of the 'code_challenge' parameter in the request object is not a string."
A124310: "The value of the 'code_challenge_method' parameter in the request object is not a string."
A125101: "Failed to correct the configuration information of the service."
A127001: "The client (ID = {Client ID}) does not have extension data and so does not have requestable scopes."
A127002: "Cleared requestable scopes of the client (ID = {Client ID}) successfully."
A127003: "Requestable scopes of the client (ID = {Client ID}) have already been cleared."
A127101: "Failed to clear requestable scopes of the client (ID = {Client ID})."
A128101: "Failed to update requestable scopes of the client (ID = {Client ID})."
A128201: "Failed to parse the request body as a JSON object."
A128202: "The value of 'requestableScopes' in the request body is not an array."
A128203: "The array of 'requestableScopes' contains a non-string element."
A133101: "Failed to get the list of pre-defined scopes of the service ({Service's API Key}) from the 'scope' table."
A133102: "Failed to get the list of scope attributes from 'scope_attributes' table."
A134101: "Failed to get the information about the access token passed to the /api/auth/token/update API."
A134102: "Failed to clear an access token cache."
A134103: "Failed to clear a refresh token cache."
A134104: "Failed to get the information about the service from the database."
A134105: "Failed to get the information about the client from the database."
A134106: "Failed to get the extension data of the client from the database."
A134107: "The client associated with the access token no longer exists: ID = {Client ID}"
A134109: "Failed to get the information about the supported scopes."
A134110: "Failed to get the list of scope attributes from 'scope_attributes' table."
A134201: "The /api/auth/token/update API call must contain either the 'accessToken' or 'accessTokenHash' parameter."
A134202: "The access token identified by the 'accessToken' request parameter does not exist."
A134203: "The access token identified by the 'accessToken' request parameter does not belong to the service."
A134204: "The service that the access token belongs to no longer exists: Service = {Service's API Key}"
A135001: "Updated the access token successfully."
A135101: "Failed to update the database record of the access token."
A136102: "Failed to get the list of clients from the database."
A136201: "Parameter 'start' failed to be parsed as int."
A136202: "Parameter 'start' must not be negative."
A136203: "Parameter 'end' failed to be parsed as int."
A136204: "Parameter 'end' must not be negative."
A136205: "The input JSON to /api/client/authorization/client/get/list API is wrong."
A136206: "The request parameter 'subject' must be specified."
A137001: "Deleted {Number} access token(s) issued to the client (ID = {Client ID}) of the service (API Key = {Service's API Key})."
A137102: "Failed to delete access tokens issued to the client (ID = {Client ID})."
A137201: "The input JSON to /api/client/authorization/client/delete/{clientId} API is wrong."
A137202: "The request parameter 'subject' must be specified."
A138001: "Updated {Number} access token(s) issued to the client (ID = {Client ID}) of the service (API Key = {Service's API Key})."
A138102: "Failed to update access tokens issued to the client (ID = {Client ID})."
A138201: "The request parameter 'subject' must be specified."
A139001: "There is no information about scopes granted to the combination of the client (ID = {Client ID}) and the subject ({Subject})."
A139002: "Successfully obtained the information about scopes granted to the combination of the client (ID = {Client ID}) and the subject ({Subject})."
A139101: "Failed to get information about scopes granted to the combination of the client (ID = {Client ID}) and the subject ({Subject})."
A139201: "The input JSON to /api/client/granted_scopes/get/{clientId} API is wrong."
A139202: "The request parameter 'subject' must be specified."
A140001: "There was no information about scopes granted to the combination of the client (ID = {Client ID}) and the subject ({Subject})."
A140002: "Successfully deleted the information about scopes granted to the combination of the client (ID = {Client ID}) and the subject ({Subject})."
A140101: "Failed to delete information about scopes granted to the combination of the client (ID = {Client ID}) and the subject ({Subject})."
A140201: "The input JSON to /api/client/granted_scopes/delete/{clientId} API is wrong."
A140202: "The request parameter 'subject' must be specified."
A144101: "Failed to get the information about the access token associated with the value of the 'accessToken' parameter."
A144102: "Failed to get the information about the access token associated with the value of the 'refreshToken' parameter."
A144103: "Failed to insert a new access token into the database."
A144201: "Cannot create an access token because the specified access token value is already in use."
A144202: "Cannot create an access token because the specified refresh token value is already in use."
A145001: "Introspection was performed successfully (type={{access_token|refresh_token|null}}, active={{true|false}})."
A145201: "The standard introspection request from the service does not contain 'parameters' parameter."
A145202: "The format of the value of 'parameters' request parameter is wrong."
A145301: "The standard introspection request does not contain any request parameters."
A145302: "The 'token' request parameter is missing."
A145401: "The response from /api/auth/introspection/standard: %s"
A146101: "Failed to look up an access token."
A146102: "Failed to look up a refresh token."
A147301: "The direct introspection endpoint is not enabled."
A148001: "Successfully refreshed the client secret of the client (ID = {Client ID})."
A148101: "Failed to refresh the client secret of the client (identifier = {Client Identifier})."
A148201: "No client has the client identifier ({Client Identifier})."
A149001: "Successfully updated the client secret of the client (ID = {Client ID})."
A149101: "Failed to update the client secret of the client (identifier = {Client Identifier})."
A149201: "No client has the client identifier ({Client Identifier})."
A149601: "The format of the value of the 'clientSecret' request parameter is wrong: {Error Message}"
A150101: "Failed to get the list of registered redirect URIs from 'redirect_uri' table."
A150301: "A request object is required."
A150302: "The request object passed by 'request' parameter is not signed."
A150303: "The authorization request contains multiple '{Parameter Name}' parameters."
A150304: "The parameter '{Parameter Name}' exists in the request parameters but is not contained in the request object passed by 'request' parameter."
A150305: "The parameter '{Parameter Name}' exists in both the request parameters and the request object passed by 'request' parameter but their values are different."
A150306: "The value of the signing algorithm for the request object ({Algorithm}) is not allowed."
A150307: "'redirect_uri' parameter must be contained in the authorization request."
A150308: "The value of 'redirect_uri' in the request object is not a string."
A150309: "The authorization request contains multiple 'redirect_uri' parameters."
A150310: "The client has not registered any redirect URI."
A150311: "The value of 'redirect_uri' ({Redirect URI}) is not registered."
A150312: "The value of 'response_type' ({Response Type}) is not allowed."
A150313: "The 'state' request parameter is not contained in the request."
A150314: "The 'nonce' request parameter is not contained in the request."
A150315: "The 'code_challenge' parameter is not contained in the request."
A150316: "The value of 'code_challenge_method' parameter ({Parameter Name}) is not allowed."
A150317: "The 'acr' claim is not contained in the request."
A150318: "The value of the 'essential' of the 'acr' claim must be 'true'."
A150319: "An 'exp' claim is required but not contained in the request object passed by 'request' parameter."
A150320: "An 'exp' claim is contained in the request object passed by 'request' parameter but its value is not a number."
A150321: "The time in the 'exp' claim in the request object passed by 'request' parameter is in the past."
A150322: "The value of the signing algorithm ({Algorithm}) for the authorization response is not allowed."
A150323: "The scheme of the redirect URI must be 'https'."
A150324: "The request object pointed to by 'request_uri' parameter is not signed."
A150325: "The parameter '{Parameter Name}' exists in the request parameters but is not contained in the request object pointed to by 'request_uri' parameter."
A150326: "The parameter '{Parameter Name}' exists in both the request parameters and the request object pointed to by 'request_uri' parameter but their values are different."
A150327: "An 'exp' claim is required but not contained in the request object pointed to by 'request_uri'."
A150328: "An 'exp' claim is contained in the request object pointed to by 'request_uri' parameter but its value is not a number."
A150329: "The time in the 'exp' claim in the request object pointed to by 'request_uri' parameter is in the past."
A150330: "The value of the signing algorithm for the request object pointed to by 'request_uri' parameter ({Algorithm}) is not allowed."
A150331: "An 'aud' claim is required but not contained in the request object passed by 'request' parameter."
A150332: "An 'aud' claim is required but not contained in the request object pointed to by 'request_uri' parameter."
A150333: "The 'aud' claim in the request object passed by 'request' parameter is not a string or an array."
A150334: "The 'aud' claim in the request object pointed to by 'request_uri' parameter is not a string or an array."
A150335: "The value of the 'aud' claim in the request object passed by 'request' parameter does not match the issuer identifier of the OpenID provider."
A150336: "The value of the 'aud' claim in the request object pointed to by 'request_uri' parameter does not match the issuer identifier of the OpenID provider."
A150337: "The value of the 'aud' claim in the request object passed by 'request' parameter does not contain the issuer identifier of the OpenID provider."
A150338: "The value of the 'aud' claim in the request object pointed to by 'request_uri' parameter does not contain the issuer identifier of the OpenID provider."
A150339: "The value of 'redirect_uri' contained in the request is not well-formed."
A150340: "The value of 'redirect_uri' contained in the request is not absolute."
A150341: "The value of 'redirect_uri' contained in the request has a fragment component."
A150342: "The value of 'response_mode' in the request object is not a string."
A150343: "The authorization request contains multiple 'response_mode' parameters."
A150344: "The value of 'response_mode' is not supported."
A150345: "For the response type ('{Response Type}'), the response mode ('{Response Mode}') is allowed only when the authorization response JWT is encrypted. Set the value of the 'authorization_encrypted_response_alg' metadata of the client (ID = {Client ID})."
A150346: "The authorization request required the authorization response be encoded as JWT by specifying 'response_mode={Response Mode}', but the 'authorization_signed_response_alg' metadata of the client (ID = {Client ID}) is not set."
A150347: "The authorization request required the authorization response be encoded as JWT by specifying 'response_mode={Response Mode}', but the 'authorization_signed_response_alg' metadata of the client (ID = {Client ID}) is 'none'. Change the registered value of the metadata."
A150348: "The authorization request required the authorization response be encoded as JWT by specifying 'response_mode={Response Mode}', but the 'authorization_signed_response_alg' metadata of the client (ID = {Client ID}) is a symmetric algorithm ('{Algorithm}'). Change the algorithm to an asymmetric one or change the client type to 'confidential'."
A150349: "The authorization request required the authorization response be encoded as JWT by specifying 'response_mode={Response Mode}', but the 'authorization_encrypted_response_alg' metadata of the client (ID = {Client ID}) is a symmetric algorithm ('{Algorithm}'). Change the algorithm to an asymmetric one or change the client type to 'confidential'."
A150201: "The key of the algorithm ('{Signature Algorithm}') to sign the authorization response with is not available."
A150350: "The key of the algorithm ('{Encryption Algorithm}') to encrypt the authorization response with is not available."
A150351: "An 'nbf' claim is required but not contained in the request object passed by the 'request' parameter."
A150352: "An 'nbf' claim is required but not contained in the request object pointed to by the 'request_uri' parameter."
A150353: "An 'nbf' claim is contained in the request object passed by the 'request' parameter but its value is not a number."
A150354: "An 'nbf' claim is contained in the request object pointed to by the 'request_uri' parameter but its value is not a number."
A150355: "The value of the 'exp' claim in the request object passed by the 'request' parameter is a negative number."
A150356: "The value of the 'exp' claim in the request object pointed to by the 'request_uri' parameter is a negative number."
A150357: "The value of the 'nbf' claim in the request object passed by the 'request' parameter is a negative number."
A150358: "The value of the 'nbf' claim in the request object pointed to by the 'request_uri' parameter is a negative number."
A150359: "The lifetime of the request object passed by the 'request' parameter is negative. (exp - nbf < 0)"
A150360: "The lifetime of the request object pointed to by the 'request_uri' parameter is negative. (exp - nbf < 0)"
A150361: "The value of the 'exp' claim in the request object passed by the 'request' parameter indicates that the request object has expired."
A150362: "The value of the 'exp' claim in the request object pointed to by the 'request_uri' parameter indicates that the request object has expired."
A150363: "The value of the 'nbf' claim in the request object passed by the 'request' parameter indicates that the request object has not become valid yet."
A150364: "The value of the 'nbf' claim in the request object pointed to by the 'request_uri' parameter indicates that the request object has not become valid yet."
A150365: "The lifetime of the request object passed by the 'request' parameter exceeds the allowed maximum value ({Maximum Lifetime} seconds)."
A150366: "The lifetime of the request object pointed to by the 'request_uri' parameter exceeds the allowed maximum value ({Maximum Lifetime} seconds)."
A150367: "Clients with the client type '{Client Type}' are not allowed to make this kind of authorization requests."
A150378: "The encryption algorithm ('{Algorithm}') of the request object passed by the 'request' parameter is prohibited."
A150379: "The encryption algorithm ('{Algorithm}') of the request object pointed to by the 'request_uri' parameter is prohibited."
A150380: "The encryption algorithm for authorization responses ('{Algorithm}' for 'authorization_encrypted_response_alg') is prohibited."
A151301: "The algorithm ('{Algorithm}' for 'id_token_signed_response_alg') to sign the ID token is not allowed."
A151302: "The encryption algorithm for ID tokens ('{Algorithm}' for 'id_token_encrypted_response_alg') is prohibited."
A152301: "The client authentication method (%s) is not allowed."
A152302: "The value of the signing algorithm used for the client's assertion (%s) is not allowed."
A152303: "The length of the key to verify the signature of the client's assertion is shorter than the minimum size ({Key Length})."
A152304: "The algorithm ('{Algorithm}' for 'id_token_signed_response_alg') to sign the ID token is not allowed."
A152305: "The service and the client are not configured so that the required Holder of Key methods are performed."
A152306: "The encryption algorithm for ID tokens ('{Algorithm}' for 'id_token_encrypted_response_alg') is prohibited."
A153301: "The algorithm ('{Algorithm}' for 'userinfo_signed_response_alg') to sign the response is not allowed."
A153302: "The encryption algorithm for userinfo responses ('{Algorithm}' for 'userinfo_encrypted_response_alg') is prohibited."
A154101: "Failed to get the list of scope attributes from 'scope_attributes' table."
A155301: "The backchannel token delivery mode of the client is '{Delivery Mode}', but the backchannel authentication request does not contain a client notification token."
A155302: "The length of a client notification token must not exceed 1024."
A155303: "The format of the client notification token must conform to the syntax for bearer credentials as defined in Section 2.1 of RFC 6750."
A156101: "Failed to get root certificates of the client application (ID = {Client ID}) from 'trusted_root_certificate' table."
A156102: "Failed to fetch the JWK Set of the client application (ID = {Client ID}) from the location pointed to by 'jwks_uri' ({URL})."
A156103: "Failed to put the JWK Set of the client application (ID = {Client ID}) into 'client_jwks' table."
A156104: "The client application (ID = {Client ID}) was not found in the database, unexpectedly."
A156105: "The JWK Set of the client application (ID = {Client ID}) was not found in the database, unexpectedly."
A156106: "The key type '{Key Type}' cannot have a public key."
A156107: "Failed to convert a JWK to a PublicKey."
A156301: "Client authentication failed because the client application (ID = {Client ID}) has registered neither 'jwks_uri' nor 'jwks'."
A156302: "Failed to parse the JWK Set of the client application (ID = {Client ID}) fetched from the location pointed to by 'jwks_uri' ({URL}) as JWKSet."
A156303: "The client application (ID = {Client ID}) has not registered its JWK Set."
A156304: "The registered JWK Set of the client application (ID = {Client ID}) does not contain the key for client authentication. (kid={Key ID})"
A156305: "The JWK Set of the client application (ID = {Client ID}) pointed to by 'jwks_uri' ({URL}) does not contain the key for client authentication. (kid={Key ID})"
A156306: "The registered JWK Set of the client application (ID = {Client ID}) contains multiple candidate keys for client authentication. (kid={Key ID})"
A156307: "The JWK Set of the client application (ID = {Client ID}) pointed to by 'jwks_uri' ({URL}) contains multiple candidate keys for client authentication. (kid={Key ID})"
A156308: "A key ID or an algorithm must be specified to look up a JWK for client assertion signature verification."
A157101: "Failed to create a validator for certificate path."
A157102: "Something went wrong during client certificate path validation."
A157301: "The client type of the client is 'confidential' but the client authentication method is 'none'."
A157302: "The client type of the client is 'public' but the client authentication method is not 'none'."
A157303: "The request contains data for client authentication although the client type is 'public' and the client authentication method is 'none'."
A157304: "The client authentication method is '{Client Authentication Method}' but the request does not include a client secret."
A157305: "The client secret presented by the client does not match the expected one."
A157306: "The client authentication method is '{Client Authentication Method}' but the signature algorithm is not available."
A157307: "The client authentication method is 'client_secret_jwt' but the configured signature algorithm is not symmetric (signature algorithm = {Signature Algorithm})."
A157308: "The client authentication method is 'private_key_jwt' but the configured signature algorithm is not asymmetric (signature algorithm = {Signature Algorithm})."
A157309: "The request does not contain 'client_assertion_type' parameter."
A157310: "The value of the client assertion type is not supported (assertion type = {Assertion Type})."
A157311: "The request does not contain 'client_assertion' parameter."
A157312: "The client assertion is malformed."
A157313: "The signature algorithm of the JWT for client authentication is invalid (signature algorithm = {Signature Algorithm})."
A157314: "The payload of the client assertion is malformed."
A157315: "The value of the 'iss' claim of the client assertion is invalid (iss = {\"iss\" Claim Value}, expected issuer = {Expected Issuer})."
A157316: "The value of the 'sub' claim of the client assertion is invalid (sub = {\"sub\" Claim Value}, expected subject = {Expected Subject})."
A157317: "Valid values for the 'aud' claim must not be empty."
A157318: "The 'aud' claim of the client assertion is invalid (aud = {\"aud\" Claim Value}, valid audiences = {Valid Audiences})."
A157319: "The expiration time ('exp') of the client assertion is not found."
A157320: "The expiration time ('exp') of the client assertion is invalid (expiration time = {Expiration Time})."
A157321: "The not-before time ('nbf') of the client assertion is not found."
A157322: "The not-before time ('nbf') of the client assertion is invalid (not-before time = {Not-before Time})."
A157323: "The issue time ('iat') of the client assertion points to the future (issue time = {Issue Time})."
A157324: "A JWT ID ('jti') is not found in the client assertion."
A157325: "The JWK for client assertion signature verification is empty."
A157326: "The signature of the JWT for client authentication is invalid."
A157327: "The request does not contain a client certificate."
A157328: "The client certificate is malformed."
A157329: "The request does not contain a JWK which contains the registered self-signed certificate."
A157330: "The JWK which contains the registered self-signed certificate does not have 'x5c' claim or the value of the claim is empty."
A157331: "The DER expression of the client certificate that the client presented is not available."
A157332: "The DER expression of the registered client certificate is not available."
A157333: "The DER of the presented self-signed certificate and the DER of the registered self-signed certificate do not match."
A157334: "The certificate presented by the client is not an X.509 certificate."
A157335: "Trusted root certificates are not registered although validation of certificate chain is required."
A157336: "A registered root certificate is malformed."
A157337: "A registered root certificate is not an X.509 certificate."
A157338: "Failed to generate a certificate path."
A157339: "The client certificate path was invalid."
A157340: "A subject DN or SAN of the client certificate is not registered."
A157341: "The subject DN of the presented client certificate is malformed."
A157342: "The subject DN of the registered client certificate is malformed."
A157343: "The subject DN of the presented client certificate ('{Presented DN}') and the registered subject DN ('{Registered DN}') do not match."
A157344: "The client authentication method '{Client Authentication Method}' is not supported."
A157345: "The client has multiple certificate subject types registered, only one is allowed at a time."
A157346: "The subject alternative name DNS entry of the presented client certificate ('{Present SAN values}') did not match the registered subject alternative name DNS entry of the client ('{Registered SAN value}')."
A157347: "The subject alternative name URI of the presented client certificate ('{Present SAN values}') did not match the registered subject alternative name URI of the client ('{Registered SAN value}')."
A157348: "The subject alternative name IP address of the presented client certificate ('{Present SAN values}') did not match the registered subject alternative name IP address of the client ('{Registered SAN value}')."
A157349: "The subject alternative name email address of the presented client certificate ('{Present SAN values}') did not match the registered subject alternative name email address of the client ('{Registered SAN value}')."
A157350: "The subject alternative name entry of the presented client certificate is malformed."
A157351: "The subject alternative name type field of the presented client certificate is malformed."
A157352: "The subject alternative name of the presented client certificate is malformed."
A158301: "The request contains multiple 'client_secret' parameters."
A158302: "The request does not contain 'client_assertion_type' parameter."
A158303: "The value of 'client_assertion_type' in the request is empty."
A158304: "The request contains multiple 'client_assertion_type' parameters."
A158305: "The request contains multiple 'client_assertion' parameters."
A159102: "Failed to get the list of access tokens from the database."
A159201: "Parameter 'start' failed to be parsed as int."
A159202: "Parameter 'start' must not be negative."
A159203: "Parameter 'end' failed to be parsed as int."
A159204: "Parameter 'end' must not be negative."
A159205: "The requested number of access tokens to be returned from this endpoint exceeds the maximum number (%d)."
A160001: "The JOSE is valid."
A160101: "JWE is not supported."
A160102: "Failed to create a signature verifier for the symmetric algorithm ('{Algorithm}') specified in the JWS header."
A160103: "Failed to get the service's JWK Set."
A160104: "The service's JWK Set is not found."
A160105: "Failed to create a signature verifier for the RSA algorithm ({Algorithm}) from the JWK (kid = {Key ID})."
A160106: "Failed to create a signature verifier for the EC algorithm ({Algorithm}) from the JWK (kid = {Key ID})."
A160107: "Failed to create a signature verifier for the unsupported algorithm ({Algorithm})."
A160108: "Failed to get the client JWK Set."
A160109: "The client's JWK Set is not found."
A160110: "Failed to verify the signature."
A160111: "Failed to create a signature verifier for the unsupported ED algorithm ({Algorithm}) from the JWK (kid = {Key ID})."
A160201: "The 'jose' request parameter is missing or empty."
A160202: "Failed to parse the value of the 'jose' request parameter as JOSE."
A160203: "The payload of the JOSE object couldn't be parsed as JSON although some claims were declared as mandatory."
A160204: "The mandatory claim '{Claim}' is missing."
A160205: "The value of the claim '{Claim}' is not an integer."
A160206: "The expiration time of the JOSE has been reached: exp = {Expiration Time}, current time = {Current Time}, clock skew = {Clock Skew}"
A160207: "The issue time exceeds the current time: iat = {Issued At}, current time = {Current Time}, clock skew = {Clock Skew}"
A160208: "The current time has not reached the time before which the JOSE must be regarded as invalid: nbf = {Not Before}, current time = {Current Time}, clock skew = {Clock Skew}"
A160209: "The JWS does not have a valid header."
A160210: "The JWS header does not have a valid 'alg' parameter."
A160211: "The 'alg' value ('{Algorithm}') in the JWS header is not supported."
A160212: "The unsecured JWS does not have a valid payload."
A160213: "The JWS does not have a valid payload."
A160214: "The value of the claim '{Claim}' is not a string."
A160215: "The identifier of the client application is necessary for verification but it is not available."
A160216: "Failed to get information about the client application (identifier = '{Client Identifier}')."
A160217: "Cannot verify the signature because the shared symmetric key based on the client secret cannot be computed."
A160218: "The service's JWK Set has not been registered."
A160219: "The signature of the JOSE object is invalid."
A160220: "Cannot determine a JWK because there are multiple JWKs that match the conditions for signature verification. (alg = {Algorithm}, kid = {Key ID})"
A160221: "Could not find any appropriate JWK for signature verification in the {client|service}'s JWK Set. (alg = {Algorithm}, kid = {Key ID})"
A160301: "The client's JWK Set has not been registered."
A161001: "The token was deleted successfully."
A161101: "Failed to get the information about the token from the database."
A161102: "Failed to delete the token."
A161201: "No token identifier is specified."
A161202: "The specified token does not exist."
A161203: "The specified token does not belong to the service."
A162101: "onFetchFailed() was called for a private key."
A162102: "onParseFailed() was called for a private key."
A162103: "onCacheFailed() was called for a private key."
A162104: "onNoService() was called for a private key."
A162105: "The JWK Set of the service is marked as hosted but not found in the database table."
A162106: "onNoJwks() was called for a private key with hosted=false."
A162107: "onNoKey() was called for a private key with hosted=false."
A162108: "onMultipleKeys() was called for a private key with hosted=false."
A162109: "Failed to convert a JWK to a PrivateKey."
A162201: "Cannot get the service's private key because the service has not registered its JWK Set."
A162202: "Cannot get the service's private key because the service has not registered its JWK Set. The current implementation does not refer to a JWK Set pointed to by 'jwks_uri' for private keys."
A162203: "The registered JWK Set of this service does not contain the private key."
A162204: "The registered JWK Set of this service contains multiple candidate private keys."
A162205: "The key type ('{Key Type}') cannot have a private key."
A163101: "Failed to fetch the JWK Set of the client application (ID = {Client ID}) from '%s'."
A163102: "Failed to put the JWK Set of the client application (ID = {Client ID}) into the database table."
A163103: "The JWK Set of the client application (ID = {Client ID}) was not found in the database."
A163104: "Failed to convert a JWK to a PublicKey."
A163301: "The client application (ID = {Client ID}) has registered neither 'jwks_uri' nor 'jwks'."
A163302: "Failed to parse the JWK Set of the client application (ID = {Client ID}) which was fetched from '{URI}'."
A163303: "The client application (ID = {Client ID}) was not found in the database."
A163304: "The client application (ID = {Client ID}) has not registered its JWK Set."
A163305: "The registered JWK Set of the client application (ID = {Client ID}) does not contain the public key."
A163306: "The JWK Set of the client application (ID = {Client ID}) pointed to by 'jwks_uri' ({URI}) does not contain the public key."
A163307: "The registered JWK Set of the client application (ID = {Client ID}) contains multiple candidate public keys."
A163308: "The JWK Set of the client application (ID = {Client ID}) pointed to by 'jwks_uri' ({URI}) contains multiple candidate public keys."
A163309: "The key type ('{Key Type}') cannot have a public key."
A164101: "Failed to sign the JWS with the algorithm ('{Signature Algorithm}')."
A164102: "Cannot sign the JWS because the algorithm ('{Signature Algorithm}') is not supported."
A164103: "Failed to create a JWS signer for the algorithm ('{Signature Algorithm}')."
A164104: "Failed to encrypt the JWE with the algorithm ('{Encryption Algorithm}') and the method ('{Encryption Method}')."
A164105: "Cannot encrypt the JWE because the algorithm ('{Encryption Algorithm}') is not supported."
A164106: "Failed to create a JWE encrypter for the algorithm ('{Encryption Algorithm}')."
A164107: "Failed to generate a JOSE (JWS alg = {Signature Algorithm}, JWE alg = {Encryption Algorithm}, JWE enc = {Encryption Method})."
A164201: "The key of the algorithm ('{Signature Algorithm}') to sign the JWS with is not available."
A164301: "The key of the algorithm ('{Encryption Algorithm}') to encrypt the JWE with is not available."
A165101: "Failed to get information about the client application (ID = {Client ID})."
A165301: "There is no client application that has the client ID ('{Client ID}')."
A166201: "The API call does not contain the 'parameters' request parameter."
A166202: "The format of the 'parameters' request parameter passed to this API does not conform to application/x-www-form-urlencoded."
A166301: "The request does not contain any request parameters."
A166302: "The request parameter '%s' is missing."
A166303: "The value of the request parameter '%s' is empty."
A166304: "The request parameter '%s' is included in the request more than once."
A166305: "The grant type '%s' is not supported by this service."
A166306: "The client does not declare that it will use the grant type '%s'."
A167101: "Failed to get the JWK Set of the client application (ID = {Client ID})."
A167102: "The JWK Set of the client application is not found (ID = {Client ID})."
A167103: "Failed to create a signature verifier from a JWK whose algorithm is '{Signature Algorithm}' and key ID is '{Key ID}'."
A167104: "Cannot create a signature verifier for the algorithm ('{Signature Algorithm}')."
A167301: "When a backchannel authentication request contains the 'request' request parameter, other CIBA request parameters such as '{Request Parameter}' must not be present outside the JWT."
A167302: "The value of the 'request' request parameter contained in the backchannel authentication request failed to be parsed as JOSE."
A167303: "A request object included in a backchannel authentication request must be signed."
A167304: "A request object included in a backchannel authentication request must not be encrypted."
A167305: "The payload of the request object included in the backchannel authentication request failed to be parsed as JSON."
A167306: "The request object included in the backchannel authentication request does not contain the 'iss' claim or its value is empty."
A167307: "Failed to find a client application whose ID matches the value of the 'iss' claim in the request object included in the backchannel authentication request."
A167308: "The signature algorithm of a request object included in a backchannel authentication request must be asymmetric."
A167309: "Use of the 'request' request parameter is not allowed because the 'backchannel_authentication_request_signing_alg' metadata of the client is not set."
A167310: "The signature algorithm ('{Signature Algorithm}') of the request object included in the backchannel authentication request is different from the value ('{Signature Algorithm}') of the 'backchannel_authentication_request_signing_alg' metadata of the client."
A167311: "Cannot verify the signature of the request object included in the backchannel authentication request because the client application has not registered its JWK Set."
A167312: "Cannot find any appropriate JWK to verify the signature of the request object included in the backchannel authentication request with. (alg = '{Signature Algorithm}', kid = '{Key ID}')"
A167313: "Cannot determine a JWK to verify the signature of the request object included in the backchannel authentication request with because there exist multiple JWKs that satisfy the conditions. (alg = '{Signature Algorithm}', kid = '{Key ID}')"
A167314: "The signature of the request object included in the backchannel authentication request is invalid."
A167315: "The request object included in the backchannel authentication request does not contain the '{Claim Name}' claim."
A167316: "The value of the '{Claim Name}' claim in the request object included in the backchannel authentication request is null."
A167317: "The value of the '{Claim Name}' claim in the request object included in the backchannel authentication request failed to be parsed as an integer."
A167318: "The request object included in the backchannel authentication request has expired."
A167319: "The 'iat' claim in the request object included in the backchannel authentication request claims that the JWT has issued in the future."
A167320: "The 'nbf' claim in the request object included in the backchannel authentication request indicates that the JWT has not become valid yet."
A167321: "The value of the 'aud' claim in a request object in a backchannel authentication request must match the issuer identifier of the OpenID provider."
A167322: "Request parameters related to client authentication such as '{Request Parameter}' must be outside the JWT specified by the 'request' request parameter."
A167323: "The value of the '{Claim Name}' claim in the request object included in the backchannel authentication request failed to be parsed as a string."
A167324: "The value of the 'aud' claim in a request object in a backchannel authentication request must contain the issuer identifier of the OpenID provider."
A167325: "The signature of the request object included in the backchannel authentication request couldn't be verified."
A167326: "The type of the 'request_context' claim in the request object included in the backchannel authentication request is not a JSON object."
A168301: "Failed to parse the 'client_assertion' request parameter as JWS."
A168302: "Failed to extract the value of the 'iss' claim from the 'client_assertion'."
A168303: "The client ID used in the Authorization header does not match the value of the 'client_id' request parameter."
A168304: "The 'iss' claim in the 'request' does not match the value of the 'client_id' request parameter."
A168305: "The 'iss' claim in the 'client_assertion' does not match the value of the 'client_id' request parameter."
A168306: "The client ID used in the Authorization header does not match the 'iss' claim in the 'request'."
A168307: "The client ID used in the Authorization header does not match the 'iss' claim in the 'client_assertion'."
A168308: "The 'iss' claim in the 'request' does not match the 'iss' claim in the 'client_assertion'."
A168309: "The backchannel authentication request does not include any clue to identify the client application with. Adding the 'client_id' request parameter may solve this problem."
A168310: "Information about the client application having the client ID '%s' was not found."
A168311: "Public clients are not allowed to use the CIBA flow."
A169301: "The backchannel token delivery mode of the client application is not set."
A169302: "The backchannel token delivery mode ('{Delivery Mode}') of the client is not supported by the server."
A170101: "IdP initialization must include an 'issuer'."
A170102: "Unable to generate a keypair."
A171101: "A 'clientId' must be supplied when creating a service access token."
A171102: "The 'clientId' was malformed ('{Client ID}')."
A171103: "The client does not exist ('{Client ID}')."
A171104: "The service owner for the IdP service could not be found ('{Service owner number}')."
A171105: "There must be an internal service set up for the IdP but none was configured."
A171106: "The internal IdP service cannot be found ('{Service number}')."
A172101: "The API access token was either missing or did not contain the correct information."
A172102: "The request must contain an 'email' address for the service owner."
A173101: "Failed to get the list of supported ACR values from the database."
A173102: "Failed to get information about default ACR values from the database."
A173301: "The ACR value '{ACR Value}' required by the backchannel authentication request is ignored because it is not registered as a supported ACR value."
A173401: "Because the 'acr_values' parameter was omitted, the default set of ACR values is implicitly used: {Default ACR Values}"
A174301: "The backchannel authentication request does not contain any hint."
A174302: "The backchannel authentication request contains multiple hints."
A175301: "The value of the 'id_token_hint' request parameter contained in the backchannel authentication request failed to be parsed as JOSE."
A175302: "The value of the 'id_token_hint' request parameter contained in the backchannel authentication request is not signed."
A175303: "Encrypted ID tokens are not allowed to be used as 'id_token_hint'."
A175304: "The payload of the 'id_token_hint' failed to be parsed as JSON."
A175305: "The payload of the 'id_token_hint' does not contain the 'iss' claim."
A175306: "The value of the 'iss' claim in the 'id_token_hint' is different from the issuer identifier of this server."
A175307: "The payload of the 'id_token_hint' does not contain the 'aud' claim."
A175308: "The 'aud' claim in the 'id_token_hint' does not contain the client ID."
A175309: "The value of the 'aud' claim in the 'id_token_hint' does not match the client ID."
A175310: "The payload of the 'id_token_hint' does not contain the 'sub' claim."
A176101: "Failed to get custom scope records from the database."
A176102: "Failed to get the client extension data from the database."
A176103: "Could not find the client extension data of the client. (extension number = {Extension Number})"
A176104: "Failed to get scope attributes from the database."
A176105: "The mandatory scope '{Scope Name}' is not supported by the server."
A176301: "The backchannel authentication request does not contain the 'scope' request parameter or its value is empty."
A176302: "The client application is not allowed to request the '{Scope Name}' scope, so the scope is ignored."
A176303: "The '{Scope Name}' scope is not supported by the server, so the scope is ignored."
A176304: "The backchannel authentication request does not include the mandatory scope '{Scope Name}'."
A176305: "The client application is not allowed to request the mandatory scope '{Scope Name}'."
A176306: "The '{Claim Name}' claim is being requested by the '{Scope Name}' scope but won't be processed because the claim is not supported by the server."
A176307: "The value of the 'scope' request parameter is too long."
A176401: "Because the 'scope' parameter was omitted, the default scope set is implicitly used: {Default Scopes}"
A177301: "The backchannel authentication request does not include a user code."
A178101: "Failed to insert a new record into the 'bc_auth' table."
A179001: "The backchannel authentication request was processed successfully."
A180101: "Failed to compute the thumbprint of the client certificate used in the backchannel authentication request."
A180301: "The backchannel authentication request does not include a client certificate although certificate binding is enabled and the token delivery mode is 'push'."
A180302: "The client certificate used in the backchannel authentication request failed to be parsed as a certificate."
A181201: "The ticket does not exist."
A181202: "The ticket does not belong to this service."
A181203: "The ticket has already expired."
A181204: "The ticket has already been consumed by /api/backchannel/authentication/complete API."
A181205: "The ticket has already been used to issue an auth_req_id by the previous API call."
A182101: "Failed to issue an 'auth_req_id' due to a database error."
A182201: "The request to /api/backchannel/authentication/issue API does not contain the 'ticket' request parameter or its value is empty."
A182401: "Failed to delete an expired record from the 'bc_auth' table."
A182402: "Deleting the expired record from the 'bc_auth' table."
A183001: "An auth_req_id was issued successfully."
A185001: "Successfully generated an error response for the backchannel authentication request."
A186101: "Failed to get the record for the ticket from the database."
A186201: "The 'ticket' request parameter is missing or its value is empty."
A186202: "No record that holds the ticket."
A186203: "The ticket does not belong to the service."
A187201: "The mandatory request parameter 'result' is missing."
A188201: "The 'subject' request parameter is missing or its value is empty."
A188202: "The length of the 'subject' request parameter exceeds the maximum length ({Number})."
A188203: "The value of the 'subject' request parameter contains non-ASCII letters."
A189201: "The length of the 'sub' request parameter exceeds the maximum length ({Number})."
A189202: "The value of the 'sub' request parameter contains non-ASCII letters."
A190201: "The value of the 'claims' request parameter failed to be parsed as JSON."
A190202: "The size of the 'claims' is too big."
A191201: "The size of the 'properties' is too big."
A192101: "Failed to get custom scope records from the database."
A192102: "Failed to get the client extension data from the database."
A192103: "Could not find the client extension data of the client. (extension number = {Number})"
A192104: "Failed to get scope attributes from the database."
A192105: "Failed to get information about the client application from the database."
A192301: "The list of requested scopes is too long."
A193201: "The value of the 'errorDescription' request parameter is too long."
A193202: "The value of the 'errorUri' request parameter is too long."
A193203: "The value of the 'errorUri' request parameter contains non-ASCII letters."
A194201: "The length of the 'acr' request parameter exceeds the maximum length ({Number})."
A194202: "The value of the 'acr' request parameter contains non-ASCII letters."
A195201: "The value of the 'authTime' request parameter must not be negative."
A196101: "Failed to generate an ID token: {Error Message}"
A196201: "The ticket is not found."
A196202: "The ticket has already expired."
A196203: "The ticket has already been consumed by the previous API call."
A196204: "No auth_req_id has been issued for the ticket. Call /api/backchannel/authentication/issue API with the ticket in advance before calling this API."
A196205: "Failed to prepare a JWT-based access token: {Error Message}"
A197101: "Failed to generate an ID token: {Error Message}"
A197102: "Failed to update the database record."
A197103: "Unexpected error in getting live access token records: grant_id={Grant ID}, client_id={Client ID}"
A197104: "Failed to get live access token records: grant_id={Grant ID}, client_id={Client ID}"
A197301: "The algorithm for signing ID tokens must not be 'none'."
A197401: "Failed to delete an expired record from the 'bc_auth' table."
A197402: "Deleting the expired record from the 'bc_auth' table."
A197403: "Deleting the record from the 'bc_auth' table because it is no longer needed."
A198001: "Successfully updated the database so that the token endpoint can generate tokens (mode = {Delivery Mode}, result = {Result})."
A198002: "Successfully updated the database so that the token endpoint can generate an error response (mode = {Delivery Mode}, result = {Result})."
A198003: "Successfully generated tokens that are to be delivered to the client notification endpoint (mode = {Delivery Mode}, result = {Result})."
A198004: "Successfully prepared an error content that is to be reported to the client notification endpoint (mode = {Delivery Mode}, result = {Result})."
A199101: "Failed to get information about the client from the database."
A199301: "The client that has made the backchannel authentication request does not exist any longer."
A200001: "Generated an error response corresponding to the result ({Result}) given to the /api/backchannel/authentication/complete API."
A200002: "The token request (grant_type=urn:openid:params:grant-type:ciba) was processed successfully."
A200101: "Failed to get the record holding the auth_req_id from the database."
A200102: "Failed to generate an ID token."
A200103: "Failed to insert a new access token into the database."
A200104: "Unexpected error in getting live access token records: grant_id={Grant ID}, client_id={Client ID}"
A200105: "Failed to get live access token records: grant_id={Grant ID}, client_id={Client ID}"
A200201: "The total size of 'properties' is too big."
A200202: "Failed to prepare a JWT-based access token: {Error Message}"
A200301: "The token request does not contain 'auth_req_id' parameter."
A200302: "The value of 'auth_req_id' in the token request is empty."
A200303: "The token request contains multiple 'auth_req_id' parameters."
A200304: "The 'auth_req_id' does not exist."
A200305: "The client is not the owner of the 'auth_req_id'."
A200306: "The 'auth_req_id' cannot be used at the token endpoint because it has issued in the 'push' mode."
A200307: "The 'auth_req_id' has expired."
A200308: "The end-user has not been authenticated yet."
A200309: "The algorithm for signing ID tokens must not be 'none'."
A200310: "The auth_req_id for token issuance was consumed by another transaction, so tokens are not issued."
A200401: "The response from Authlete's /api/auth/token endpoint (grant_type=urn:openid:params:grant-type:ciba): {Message}"
A201301: "The value of the 'requested_expiry' request parameter is not an integer."
A201302: "The value of the 'requested_expiry' request parameter must be a positive integer."
A202001: "The client was created with id '{client id}'."
A203301: "There was an error serializing the client information."
A203302: "Client metadata was empty."
A203303: "Client metadata did not parse as valid JSON."
A203304: "The 'jwks' claim must be a JSON object."
A203305: "Custom metadata did not parse as valid JSON."
A204101: "Failed to retrieve extension information of the client."
A204301: "Client cannot have both 'jwks_uri' and 'jwks' properties simultaneously."
A204302: "A grant type of 'authorization_code' requires at least one response type containing 'code'."
A204303: "A grant type of 'implicit' requires at least one response type containing 'token' or 'id_token'."
A204304: "A response type containing 'code' requires the 'authorization_code' grant type."
A204305: "A response type containing 'token' or 'id_token' requires the 'implicit' grant type."
A204306: "The '{claim name}' claim must be a list of strings."
A204307: "The '{claim name}' claim must be a URI."
A204308: "The '{claim name}' claim must be a string."
A204309: "The '{claim name}' claim must be an integer."
A204310: "The '{claim name}' claim must be a boolean."
A204311: "The 'jwks' claim must be a JSON object."
A204312: "The 'pairwise' subject type must be used with a 'sector_identifier_uri' or a single host in 'redirect_uris'."
A204313: "The '{claim name}' claim must be an https URI."
A204314: "The format of the custom client metadata is wrong."
A204315: "The '{claim name}' claim must be a JSON object."
A205301: "Software statement must be a JOSE object."
A205302: "Software statement must be signed with JWS."
A205303: "Software statement cannot be encrypted."
A205304: "Software statement payload must be JSON."
A205305: "Software statement did not pass processing rules for this service."
A205306: "Software statement signature did not validate against configured keys."
A205307: "Software statement claim ('{claim name}') did not match a rule."
A206201: "Service ({service api key}) does not support dynamic client registration."
A207201: "The service (API Key = {service api key}) does not exist."
A207202: "The service (API Key = {service api key}) does not belong to the service owner."
A207203: "The service (API Key = {service api key}) has been deleted."
A207204: "The service (API Key = {service api key}) is locked."
A207205: "Failed to parse the JWK set of the assertion processor."
A207206: "Failed to create the assertion processor."
A207207: "A key in the JWK Set does not supply an appropriate algorithm identifier."
A208201: "The service (API Key = {service api key}) does not exist."
A208202: "The service (API Key = {service api key}) does not belong to the service owner."
A208203: "The service (API Key = {service api key}) has been deleted."
A208204: "The service (API Key = {service api key}) is locked."
A209201: "The service ({service number}) does not exist."
A209202: "The service ({service number}) does not belong to the service owner."
A209203: "The service ({service number}) has been deleted."
A209204: "The service ({service number}) is locked."
A209205: "The assertion processor entity was not found."
A210201: "The service ({service number}) does not exist."
A210202: "The service ({service number}) does not belong to the service owner."
A210203: "The service ({service number}) has been deleted."
A210204: "The service ({service number}) is locked."
A210205: "Failed to parse the JWK set of the assertion processor."
A210206: "Failed to update the assertion processor."
A210207: "The assertion processor entity was not found."
A210208: "A key in the JWK Set does not supply an appropriate algorithm identifier."
A211201: "The JWK set does not exist."
A212001: "The assertion processor ({assertion processor number}) was deleted."
A212201: "The service ({service number}) does not exist."
A212202: "The service ({service number}) does not belong to the service owner."
A212203: "The service ({service number}) has been deleted."
A212204: "The service ({service number}) is locked."
A212205: "The assertion processor entity was not found."
A213001: "The client has been updated."
A214301: "The 'client_id' field must be present in the registration update request."
A214302: "The 'client_id' in the registration update request ('{client id}') did not match the expected client ID ('{client id}')."
A215301: "Unable to parse client ID ({client id})."
A215302: "Client with id '{client id}' not found."
A215303: "Client ({client id}) is not dynamically registered."
A215304: "The 'client_secret' in the registration update request did not match the expected client secret."
A215305: "The registration access token is not present."
A215306: "The client ({client id}) has no registration access token, update function is not available."
A215307: "The registration access token presented does not match the registration access token for this client ({client id})."
A216001: "The client has been deleted."
A217001: "The client information has been returned."
A218301: "Failed to parse the 'client_assertion' request parameter as JWS."
A218302: "Failed to extract the value of the 'iss' claim from the 'client_assertion'."
A218303: "The client ID used in the Authorization header does not match the value of the 'client_id' request parameter."
A218304: "The 'iss' claim in the 'client_assertion' does not match the value of the 'client_id' request parameter."
A218305: "Information about the client application having the client ID '{Client Identifier}' was not found."
A219101: "Failed to get custom scope records from the database."
A219102: "Failed to get the client extension data from the database."
A219103: "Could not find the client extension data of the client. (extension number = {Number})"
A219104: "Failed to get scope attributes from the database."
A219301: "The client application is not allowed to request the '{Scope Name}' scope, so the scope is ignored."
A219302: "The '{Scope Name}' scope is not supported by this service, so the scope is ignored."
A219303: "The list of requested scopes is too long."
A219304: "The '{Claim Name}' claim is implied by the '{Scope Name}' scope but ignored because the service does not support the claim."
A219305: "The device authorization request has no 'scope' parameter or none of the given scopes is recognized as valid, and the service's default scope set is empty. The service's configuration does not allow requests that request no scope."
A219401: "Because the 'scope' parameter was omitted, the default scope set is implicitly used: {Default Scopes}"
A220001: "The device authorization request was processed successfully."
A221101: "Failed to insert a new record into the 'df_code' table."
A222101: "This service has not set up the verification URI yet, so Device Flow cannot be used."
A222102: "This service has not set up duration of verification codes yet, so Device Flow cannot be used."
A223101: "Failed to build verification_uri_complete from the template '{URI}': {Error Message}"
A223201: "Because the template URI '{URI}' does not contain the placeholder '{Placeholder}' for a user code, verification_uri_complete is not included in the response from the device authorization endpoint."
A224001: "The user code is valid."
A225101: "Failed to get the record for the user code from the database."
A225102: "Failed to delete the record for the expired user code from the database (but this error is not critical)."
A225201: "The API call to /api/device/verification does not have the 'userCode' parameter or its value is empty."
A225301: "No record for the user code exists in the database."
A225302: "The database record for the user code does not belong to this service."
A225303: "The user code has already expired."
A226101: "Failed to get custom scope records from the database."
A226102: "Failed to get scope attributes from the database."
A227101: "Failed to get the record for the user code from the database."
A227102: "Failed to delete the record for the expired user code from the database (but this error is not critical)."
A227201: "The API call to /api/device/complete does not have the 'userCode' parameter or its value is empty."
A227301: "No record for the user code exists in the database."
A227302: "The database record for the user code does not belong to this service."
A227303: "The user code has already expired."
A228201: "The mandatory request parameter 'result' is missing."
A229101: "Failed to get information about the client from the database."
A229301: "The client that has made the device authorization request does not exist any longer."
A230201: "The 'subject' request parameter is missing or its value is empty."
A230202: "The length of the 'subject' request parameter exceeds the maximum length ({Number})."
A230203: "The value of the 'subject' request parameter contains non-ASCII letters."
A231201: "The length of the 'sub' request parameter exceeds the maximum length ({Number})."
A231202: "The value of the 'sub' request parameter contains non-ASCII letters."
A232201: "The value of the 'authTime' request parameter must not be negative."
A233201: "The length of the 'acr' request parameter exceeds the maximum length ({Number})."
A233202: "The value of the 'acr' request parameter contains non-ASCII letters."
A234201: "The value of the 'claims' request parameter failed to be parsed as JSON."
A234202: "The size of the 'claims' is too big."
A235201: "The size of the 'properties' is too big."
A236201: "The value of the 'errorDescription' request parameter is too long."
A236202: "The value of the 'errorUri' request parameter is too long."
A236203: "The value of the 'errorUri' request parameter contains non-ASCII letters."
A237101: "Failed to get custom scope records from the database."
A237102: "Failed to get the client extension data from the database."
A237103: "Could not find the client extension data of the client. (extension number = {Number})"
A237104: "Failed to get scope attributes from the database."
A237105: "Failed to get information about the client application from the database."
A237301: "The list of requested scopes is too long."
A238101: "Failed to get information about supported ACR values from the database."
A238102: "Failed to get information about default ACR values from the database."
A238301: "The list of requested ACRs is too long."
A238302: "The ACR value '{ACR Value}' is not supported by this service, so it is ignored."
A238401: "Because the 'acr_values' parameter was omitted, the default set of ACR values is implicitly used: {Default ACR Values}"
A239201: "The user code has already been consumed by another transaction."
A239202: "The user code has already expired."
A239203: "The user code has already been consumed by the previous API call."
A240101: "Failed to update the record in the 'df_code' table."
A240401: "Failed to delete an expired record from the 'df_code' table."
A240402: "Deleting the expired record from the 'df_code' table."
A241001: "The API call was processed successfully."
A242001: "Generated an error response corresponding to the result ({Result}) given to the /api/device/complete API."
A242002: "The token request (grant_type=urn:ietf:params:oauth:grant-type:device_code) was processed successfully."
A242101: "Failed to get the record holding the device_code from the database."
A242102: "Failed to generate an ID token."
A242103: "Failed to insert a new access token into the database."
A242104: "Unexpected error in getting live access token records: grant_id={Grant ID}, client_id={Client ID}"
A242105: "Failed to get live access token records: grant_id={Grant ID}, client_id={Client ID}"
A242201: "The total size of 'properties' is too big."
A242202: "Failed to prepare a JWT-based access token: {Error Message}"
A242301: "The token request does not contain 'device_code' parameter."
A242302: "The value of 'device_code' in the token request is empty."
A242303: "The token request contains multiple 'device_code' parameters."
A242304: "The 'device_code' does not exist."
A242305: "The client is not the owner of the 'device_code'."
A242306: "The 'device_code' has expired."
A242307: "The device authorization request has not been authorized yet."
A242308: "The algorithm for signing ID tokens must not be 'none'."
A242309: "The device_code was consumed by another transaction, so tokens are not issued."
A242401: "The response from Authlete's /api/auth/token endpoint (grant_type=urn:ietf:params:oauth:grant-type:device_code): {Message}"
A243301: "The 'binding_message' request parameter is mandatory."
A243302: "The token delivery mode '{Delivery Mode}' is not allowed. Change the configuration of the client application."
A243303: "The request must be signed. Use the 'request' request parameter."
A243304: "The lifetime of the signed authentication request exceeds the upper limit ({Number} seconds)."
A243305: "The client authentication method ({Client Authentication Method}) used at the backchannel authentication endpoint is not allowed."
A243306: "The signature algorithm ({Algorithm}) of the signed authentication request is not allowed."
A243307: "The signature algorithm ({Algorithm}) of the client assertion is not allowed."
A243308: "The size (%d) of the signing key of the client assertion is less than the allowed minimum size (%d)."
A244101: "Failed to get information about the authorization code."
A244102: "Failed to get information about the client."
A244103: "Failed to get information about the refresh token."
A244301: "The token request contains multiple 'client_id' parameters."
A244302: "The token request contains multiple 'client_assertion' parameters."
A244303: "The format of 'client_assertion' is wrong."
A244304: "The 'client_assertion' does not include an 'iss' claim or its value is empty."
A244305: "The token request does not include any clue to identify the client. Add a 'client_id' parameter."
A244306: "Information about the client is not available."
A244307: "The token request used the client ID alias, but the feature is not enabled. Check the configuration of the client."
A244308: "Because the feature of certificate-bound access tokens is enabled, the client must establish a mutual TLS connection to the token endpoint."
A244309: "The client certificate cannot be parsed as a valid certificate."
A244310: "The authorization code does not exist."
A244311: "The information about the client is not found in the database."
A244312: "The information about the client associated with the authorization code is not found in the database."
A244313: "The information about the client associated with the refresh token is not found in the database."
A244314: "The refresh token does not exist."
A245001: "Successfully registered a request object for client ({Client ID}), URI is {URI}."
A245101: "Unable to add request object URI to client. Error was: {Error Message}"
A245301: "Couldn't parse the request object's claims. Error was: {Error Message}"
A245302: "A claim in the request object did not match the plain parameter '{Parameter Name}'."
A245401: "The response from Authlete's /api/pushed_auth_req endpoint is: {Response Message}"
A246301: "Client tried to register a signed request object but has no request object signing algorithm set."
A246302: "Client tried to register a request object but has a request object signing algorithm of 'none'."
A246303: "Client has a request object signing algorithm of {JWS Algorithm} but client secret was null or empty."
A246304: "Client has a request object signing algorithm of {JWS Algorithm} but no public key was found."
A246305: "Client has a request object signing algorithm of {JWS Algorithm} but no suitable keys were found."
A246306: "Client tried to register an invalid JOSE object as a request object. Error was: {Error Message}"
A246307: "Couldn't parse the request object's claims. Error was: {Error Message}"
A246308: "The request object does not include the 'iss' claim."
A246309: "The client ID in the request object ({Client ID}) does not match the client ID ({Client ID}) of the client."
A246310: "The client ID in the request object ({Client ID}) does not match the client ID ({Client ID}) of the client."
A247301: "Failed to parse the 'client_assertion' request parameter as JWS."
A247302: "Failed to extract the value of the 'iss' claim from the 'client_assertion'."
A247303: "The client ID used in the Authorization header does not match the value of the 'client_id' request parameter."
A247304: "The 'iss' claim in the 'client_assertion' does not match the value of the 'client_id' request parameter."
A247305: "The client ID used in the Authorization header does not match the 'iss' claim in the 'client_assertion'."
A247306: "The pushed authorization request endpoint request does not include any clue to identify the client application with. Adding the 'client_id' request parameter may solve this problem."
A247307: "Information about the client application having the client ID '{Client ID}' was not found."
A248101: "An error occurred while hardware-secured keys were checked to create a JWE decrypter: {Error Message}"
A248301: "The 'request_uri' parameter is not allowed at this endpoint."
A248302: "Unable to parse the request object into a JWT: {Error Message}"
A248303: "The request object JWE header did not contain the 'alg' parameter."
A248304: "The request object JWE header did not contain the 'enc' parameter."
A248305: "The request object JWE header's 'alg' value ({JWE Algorithm}) did not match the client's registered request object JWE 'alg' value ({JWE Algorithm})."
A248306: "The request object JWE header's 'enc' value ({JWE Encryption Method}) did not match the client's registered request object JWE 'enc' value ({JWE Encryption Method})."
A248307: "Failed to decrypt the encrypted request object."
A248308: "Failed to get payload of the encrypted request object."
A248309: "Failed to parse payload of the encrypted request object as a signed JWT."
A248310: "The value of 'enc' in the JWT ({JWE Encryption Method}) is not supported."
A248311: "Failed to create a decrypter for the JWE due to an unexpected key length."
A248312: "Failed to create a decrypter for the JWE."
A248313: "The value of 'alg' in the JWE ({JWE Algorithm}) is not supported."
A248314: "The encryption algorithm of the request object is symmetric, but the client type is not 'confidential'."
A248315: "The request object is not signed."
A248316: "Failed to parse the payload part of the request object."
A248317: "'{Claim Name}' must not be included in the request object."
A249101: "Failed to get the list of supported authorization data types."
A249102: "Failed to get the list of authorization data types that the client has declared it may use."
A249301: "The 'type' of the element (index = {Number}) in 'authorization_details' is null or empty."
A249302: "The 'type' of the element (index = {Number}) in 'authorization_details' is not supported."
A249303: "The client has not declared it may use the 'type' of the element (index = {Number}) in 'authorization_details'."
A249304: "The format of the value of 'authorization_details' is wrong."
A249305: "The value of 'authorization_details' must be a JSON array."
A249306: "The format of the element (index = {Number}) in 'authorization_details' is wrong."
A250101: "Failed to get extension data of the client application."
A250102: "Extension data of the client application is not found unexpectedly."
A250301: "The request parameter '{Request Parameter Name}' is included in the request more than once."
A251301: "The value of the 'resource' property in the request object is neither a string nor an array."
A251302: "The element at the index {Number} in the 'resource' property in the request object is not a JSON string."
A251303: "The element at the index {Number} in the 'resource' property in the request object is not a valid URI."
A251304: "The element at the index {Number} in the 'resource' property in the request object is not an absolute URI."
A251305: "The element at the index {Number} in the 'resource' property in the request object includes a fragment component."
A251306: "The value of a 'resource' is not a valid URI."
A251307: "The value of a 'resource' is not an absolute URI."
A251308: "The value of a 'resource' includes a fragment component."
A251309: "The value of the 'resource' property in the request object is not a valid URI."
A251310: "The value of the 'resource' property in the request object is not an absolute URI."
A251311: "The value of the 'resource' property in the request object includes a fragment component."
A252301: "The value of 'purpose' in the request object is not a string."
A252302: "The authorization request contains multiple 'purpose' parameters."
A252303: "The length of 'purpose' is shorter than {Lower Limit}."
A252304: "The length of 'purpose' is longer than {Upper Limit}."
A253101: "Failed to get the list of registered redirect URIs."
A253301: "The '{Parameter Name}' in the request failed to be parsed as a string."
A253302: "The 'redirect_uri' parameter must be explicitly included when the 'scope' parameter includes 'openid'."
A253303: "The 'redirect_uri' is not registered."
A253304: "The 'redirect_uri' is malformed."
A254301: "There was a problem processing the DPoP header: {Error}"
A254302: "The DPoP signature algorithm ({Algorithm}) must not be symmetric or 'none'."
A254303: "The DPoP header did not include a public key in JWK format."
A254304: "The DPoP signature algorithm is missing."
A255201: "The value of 'idtHeaderParams' in the /api/auth/authorization/issue request failed to be parsed as a JSON object."
A256201: "The value of 'idtHeaderParams' in the /api/backchannel/authentication/complete request failed to be parsed as a JSON object."
A256202: "The total size of 'idtHeaderParams' is too big."
A257201: "The value of 'idtHeaderParams' in the /api/device/complete request failed to be parsed as a JSON object."
A257202: "The total size of 'idtHeaderParams' is too big."
A258201: "{API Path}, Content-Type header is not specified."
A261601: "Cannot create a new client because the current number of clients has reached the maximum number ({Number}) of clients per developer."
A261602: "Cannot create a new client because the current number of clients has reached the maximum number ({Number}) of the plan ({Plan Name}). Consult the manager of this service."
A261603: "The size of the custom metadata is too big."
A261604: "Cannot create a new client because the client ID alias is already in use."
A262201: "The client (ID = {Client ID}) does not exist."
A262202: "The client (ID = {Client ID}) has been deleted."
A262203: "The client (ID = {Client ID}) is locked."
A262601: "The size of the custom metadata is too big."
A262602: "Cannot update the client because the client ID alias is already in use."
A263201: "The '{Request Parameter}' request parameter is not specified or its value is empty."
A263202: "The value of the '{Request Parameter}' request parameter is not supported."
A263203: "The value of the 'alg' request parameter is not supported for the use of '{Key Use}'."
A263204: "The value of the 'alg' ({Algorithm}) request parameter is invalid for the key type '{Key Type}'."
A263205: "The length of the 'kid' request parameter exceeds the allowed maximum length ({Number})."
A263206: "The value of the 'kid' request parameter contains non-ASCII letters."
A263207: "The algorithm '{Algorithm}' is not supported by the HSM '{HSM}'."
A263401: "Accepted a key creation request: hsm={HSM}, kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}"
A264101: "Failed to load the class '{Class Name}' for the HSM '{HSM}'."
A264102: "The class '{Class Name}' for the HSM '{HSM}' does not implement the 'HSM' interface."
A264103: "The class '{Class Name}' for the HSM '{HSM}' does not have a default constructor."
A264104: "Failed to create an HSM instance for the HSM '{HSM}'."
A264105: "The HSM name that the implementation declares is different from the expected one: expected={HSM Name}, actual={HSM Name}"
A264201: "The specified HSM name is invalid."
A264401: "Loading the '{Class Name}' class for the HSM '{HSM}'."
A264402: "Succeeded in loading the '{Class Name}' class for the HSM '{HSM}'."
A265101: "Failed to create a key on the HSM '{HSM}': kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}"
A265102: "Failed to get the public key corresponding to the key created on the HSM '{HSM}': kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}"
A265103: "Failed to delete the key created on the HSM '{HSM}': kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}"
A265104: "The HSM '{HSM}' did not return a public key."
A265401: "Created a key on the HSM '{HSM}': service={Service API Key}, kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A265402: "Information about the key on the HSM '{HSM}' (handle={Handle}): {Information}"
A265403: "The public key corresponding to the key on the HSM '{HSM}' (handle={Handle}):\n{Public Key}"
A266001: "Successfully created a key on the HSM '{HSM}': service={Service API Key}, kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A266201: "HSM support is not enabled for the service ({Service API Key})."
A267101: "Failed to insert a record to the 'hsk' table that corresponds to the key created on the HSM '{HSM}': handle={Handle}"
A267102: "Failed to delete the key on the HSM '{HSM}': handle={Handle}"
A267401: "Inserted a new record into the 'hsk' table: service={Service API Key}, hsm={HSM}, kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A268001: "Successfully obtained the key information: service={Service API Key}, hsm={HSM}, kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A268101: "Failed to get the record that matches the handle from the database: service={Service API Key}, handle={Handle}"
A268201: "HSM support is not enabled for the service ({Service API Key})."
A268202: "No record matches the handle: service={Service API Key}, handle={Handle}"
A269001: "Successfully obtained the records from the 'hsk' table: service={Service API Key}, count={Number of Records}"
A269101: "Failed to get records from the 'hsk' table: service={Service API Key}"
A269201: "HSM support is not enabled for the service ({Service API Key})."
A270001: "Successfully deleted the key: service={Service API Key}, hsm={HSM}, kty={Key Type}, use={Key Use}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A270101: "Failed to get the record that matches the handle from the database: service={Service API Key}, handle={Handle}"
A270102: "[INCONSISTENCY] The key on the HSM was deleted but the record corresponding to the key failed to be deleted from the database: service={Service API Key}, handle={Handle}"
A270201: "HSM support is not enabled for the service ({Service API Key})."
A270202: "No record matches the handle: service={Service API Key}, handle={Handle}"
A271101: "Failed to load the underlying implementation for the HSM '{HSM}'."
A271102: "Failed to delete the key on the HSM '{HSM}': service={Service API Key}, handle={Handle}"
A271401: "Deleted the key on the HSM '{HSM}': service={Service API Key}, handle={Handle}"
A272101: "Failed to get the implementation for the HSM on which the key corresponding to the record exists: hsm={HSM} service number={Service Number}, handle={Handle}"
A272102: "Failed to delete the key on the HSM: hsm={HSM}, service number={Service Number}, handle={Handle}"
A272103: "The key on the HSM was not deleted, so the record in the 'hsk' table is kept for consistency: hsm={HSM}, service number={Service Number}, handle={Handle}"
A272104: "[INCONSISTENCY] The key on the HSM was deleted but the record in the 'hsk' table failed to be deleted: hsm={HSM}, service number={Service Number}, handle={Handle}"
A272105: "Failed to get the records from the 'hsk' table: service number={Service Number}"
A272106: "Failed to delete some records from the 'hsk' table: service number={Service Number}, target records={Count}, deleted records=%s, deleted HSM keys={Count}"
A272401: "No record to delete in the 'hsk' table: service number={Service Number}"
A272402: "Deleted the key on the HSM: hsm={HSM}, service number={Service Number}, handle={Handle}"
A272403: "Deleted the record in the 'hsk' table: hsm={HSM}, service number={Service Number}, handle={Handle}"
A272404: "Deleted {Count} record(s) from the 'hsk' table successfully: service number={Service Number}"
A273101: "Virtual HSM: Failed to parse a string '{Input String}' as a key type: {Error Message}"
A273102: "Virtual HSM: Failed to create an RSA key: {Error Message}"
A273103: "Virtual HSM: Failed to create an EC key: {Error Message}"
A273104: "Virtual HSM: Failed to build a JWK from a Map: {Error Message}"
A273105: "Virtual HSM: Failed to convert a JWK into an RSA public key: {Error Message}"
A273106: "Virtual HSM: Failed to convert a JWK into an EC public key: {Error Message}"
A273107: "Virtual HSM: Failed to create an RSA signer: {Error Message}"
A273108: "Virtual HSM: Failed to create an EC signer: {Error Message}"
A273109: "Virtual HSM: Failed to sign the data: {Error Message}"
A273110: "Virtual HSM: Failed to convert a JWK into an RSA private key: {Error Message}"
A273111: "Virtual HSM: Failed to get a cipher for the transformation '{Transformation}': {Error Message}"
A273112: "Virtual HSM: Failed to initialize the cipher for decryption: transformation={Transformation}, error={Error Message}"
A273113: "Virtual HSM: Failed to decrypt the input data by the cipher: {Error Message}"
A273114: "Virtual HSM: Failed to get algorithm parameters for the algorithm '{Algorithm}': {Error Message}"
A273115: "Virtual HSM: Failed to initialize algorithm parameters with the spec: {Error Message}"
A273401: "Virtual HSM: Signed: alg={Algorithm}, handle={Handle}, signature={Signature}"
A273402: "Virtual HSM: Decrypted: alg={Algorithm}, handle={Handle}"
A274101: "Failed to sign: hsm={HSM}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A274401: "Signed: hsm={HSM}, alg={Algorithm}, kid={Key ID}, handle={Handle}, signature={Signature}"
A275101: "The HSM decrypter does not support the encryption algorithm: hsm={HSM}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A275102: "Failed to decrypt the encrypted CEK: hsm={HSM}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A275301: "The JWE lacks {Element}: alg={Algorithm}"
A275401: "Decrypted: hsm={HSM}, alg={Algorithm}, kid={Key ID}, handle={Handle}"
A276001: "Successfully updated the service owner's 'deleted' flag (Login ID = {Login ID})."
A276101: "Failed to update the service owner's 'deleted' flag."
A276201: "The 'id' request parameter must be specified."
A276202: "The presented ID was not associated with any service owner."
A276203: "The service owner is already deleted."
A276204: "The service owner is already undeleted."
A277001: "The grant management action '{Action}' for the grant ID '{Grant ID}' was processed successfully."
A278201: "The 'gmAction' request parameter is missing or its value is unknown."
A278202: "The value of the 'gmAction' request parameter ('{Action}') is not supported at the grant management endpoint."
A279101: "Failed to get the access token record."
A279301: "The grant management '{Action}' request contains no access token."
A279302: "When the format of an access token is JWT, it must be a JWS signed with an asymmetric algorithm without encryption."
A279303: "Validation of the JWT access token failed."
A279304: "Failed to extract the value of the 'jti' claim from the access token."
A279305: "The value of the 'jti' claim in the access token is null or empty."
A279306: "The access token does not exist."
A279307: "The access token does not belong to the service."
A280101: "Failed to get the client record."
A280301: "The client application associated with the presented access token does not exist any longer."
A280302: "The client application associated with the presented access token has been deleted."
A280303: "The client application associated with the presented access token is locked."
A281101: "Failed to delete the access token record."
A281102: "Failed to calculate the thumbprint of the client certificate."
A281201: "The client certificate passed from the implementation of the grant management endpoint is malformed."
A281301: "The access token has expired."
A281302: "The access token does not have the required scope '{Scope}'."
A281303: "The thumbprint of the client certificate used in the grant management request does not match the thumbprint of the client certificate to which the access token is bound."
A281304: "The access token is bound to a client certificate, but the grant management request includes no client certificate."
A281305: "The access token is bound to a public key but the grant management request includes no DPoP header."
A281306: "The signature algorithm of the DPoP proof JWT is missing or unsupported."
A281307: "The signature algorithm of the DPoP proof JWT must be asymmetric."
A281308: "The DPoP proof JWT does not include a JWK."
A281309: "The DPoP proof JWT is malformed."
A281310: "The thumbprint of the DPoP proof JWT does not match the expected value."
A282201: "The API call includes no grant ID."
A283101: "Failed to get records from the 'access_token' table: grant_id={Grant ID}, client_id={Client ID}"
A283102: "Failed to collect information about the grant: grant_id={Grant ID}, client_id={Client ID}"
A283301: "The grant ID '{Grant ID}' does not exist or is not for the client '{Client ID}', or it once existed but all its privileges have expired."
A284101: "Failed to get records from the 'access_token' table: grant_id={Grant ID}, client_id={Client ID}"
A284102: "Failed to delete a record from the 'access_token' table: grant_id={Grant ID}, client_id={Client ID}"
A284103: "Failed to revoke the grant '{Grant ID}': client_id={Client ID}"
A285101: "Failed to retrieve information about the grant '{Grant ID}'."
A285102: "Failed to get access token records: grant_id={Grant ID}, client_id={Client ID}"
A285301: "The value of the 'grant_id' request parameter is not a string."
A285302: "The 'grant_id' request parameter is included more than once."
A285303: "The value of the 'grant_management_action' request parameter is not a string."
A285304: "The 'grant_management_action' request parameter is included more than once."
A285305: "The value of the 'grant_management_action' request parameter is invalid."
A285306: "'{Action}' is not allowed as a value for the 'grant_management_action' request parameter."
A285307: "The 'grant_management_action' request parameter must be always specified."
A285308: "The 'grant_id' request parameter is given without the 'grant_management_action' request parameter."
A285309: "The 'grant_id' request parameter is given although the value of the 'grant_management_action' request parameter is 'create'."
A285310: "The 'grant_id' request parameter must be given when the value of the 'grant_management_action' is '{Action}'."
A285311: "It is confidential clients only that are allowed to use the grant management feature."
A285312: "The grant specified by the grant ID '{Grant ID}' does not exist or is not for the client '{Client ID}', or all the privileges of the grant have expired."
A286301: "The access token does not cover necessary scopes."
A286302: "The access token does not cover necessary resources."
A286303: "The access token does not cover the necessary combination of scopes and resources."
A287101: "Failed to get access token records: grant_id={Grant ID}, client_id={Client ID}"
A287102: "Failed to retrieve information about the grant '{Grant ID}'."
A287301: "The value of the 'grant_management_action' request parameter is invalid."
A287302: "'{Grant Management Action}' is not allowed as a value for the 'grant_management_action' request parameter."
A287303: "The 'grant_management_action' request parameter must be always specified."
A287304: "The 'grant_id' request parameter is given without the 'grant_management_action' request parameter."
A287305: "The 'grant_id' request parameter is given although the value of the 'grant_management_action' request parameter is 'create'."
A287306: "The 'grant_id' request parameter must be given when the value of the 'grant_management_action' is '{Grant Management Action}'."
A287307: "It is confidential clients only that are allowed to use the grant management feature."
A287308: "The grant specified by the grant ID '{Grant ID}' does not exist or is not for the client '{Client ID}', or all the privileges of the  grant have expired."
A288101: "Failed to get access token records: grant_id={Grant ID}, client_id={Client ID}"
A288102: "Failed to retrieve information about the grant '{Grant ID}'."
A288301: "The value of the 'grant_management_action' request parameter is invalid."
A288302: "'{Grant Management Action}' is not allowed as a value for the 'grant_management_action' request parameter."
A288303: "The 'grant_management_action' request parameter must be always specified."
A288304: "The 'grant_id' request parameter is given without the 'grant_management_action' request parameter."
A288305: "The 'grant_id' request parameter is given although the value of the 'grant_management_action' request parameter is 'create'."
A288306: "The 'grant_id' request parameter must be given when the value of the 'grant_management_action' is '{Grant Management Action}'."
A288307: "It is confidential clients only that are allowed to use the grant management feature."
A288308: "The grant specified by the grant ID '{Grant ID}' does not exist or is not for the client '{Client ID}', or all the privileges of the  grant have expired."
A289101: "Failed to get records from the 'access_token' table: grant_id={Grant ID}, client_id={Client ID}"
A289102: "Failed to collect information about the grant: grant_id={Grant ID}, client_id={Client ID}"
A290101: "Failed to get records from the 'claims' table."
A291101: "Failed to get records from the 'claims' table."
A292101: "Failed to get records from the 'claims' table."

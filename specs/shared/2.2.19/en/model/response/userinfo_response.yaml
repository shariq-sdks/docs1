content:
  application/json:
    schema:
      allOf:
        - $ref: result.yaml
        - type: object
          properties:
            action:
              type: string
              enum:
                - INTERNAL_SERVER_ERROR
                - BAD_REQUEST
                - UNAUTHORIZED
                - FORBIDDEN
                - OK
              description: The next action that the authorization server implementation should take.
            claims:
              type: array
              items:
                type: string
              description: |
                The list of claims that the client application requests to be embedded in the ID token.
            clientId:
              type: string
              required: false
              description: |
                The ID of the client application which is associated with the access token.
            clientIdAlias:
              type: string
              description: |
                The client ID alias when the authorization request for the access token was made.
            clientIdAliasUsed:
              type: boolean
              description: |
                The flag which indicates whether the client ID alias was used when the authorization
                request for the access token was made.
            responseContent:
              type: string
              description: |
                The content that the authorization server implementation can use as the value of `WWW-Authenticate`
                header on errors.
            scopes:
              type: array
              items:
                type: string
              description: |
                The scopes covered by the access token.
            subject:
              type: string
              description: |
                The subject (= resource owner's ID).
            token:
              type: string
              description: |
                The access token that came along with the userinfo request.
            properties:
              type: array
              items:
                $ref: ../property.yaml
              description: |
                The extra properties associated with the access token.
            userInfoClaims:
              type: string
              description: |
                The value of the `userinfo` property in the `claims` request parameter or in the `claims` property in an authorization request object.

                A client application may request certain claims be embedded in an ID token or in a response from the userInfo endpoint.
                There are several ways. Including the `claims` request parameter and including the `claims` property in a request object are such examples.
                In both cases, the value of the `claims` parameter/property is JSON. Its format is described in [5.5. Requesting Claims using the "claims"
                Request Parameter](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter).

                The following is an excerpt from the specification. You can find `userinfo` and `id_token` are top-level properties.

                ```json
                {
                  "userinfo":
                  {
                    "given_name": { "essential": true },
                    "nickname": null,
                    "email": { "essential": true },
                    "email_verified": { "essential": true },
                    "picture": null,
                    "http://example.info/claims/groups": null
                  },
                  "id_token":
                  {
                    "auth_time": { "essential": true },
                    "acr": { "values": [ "urn:mace:incommon:iap:silver" ] }
                  }
                }
                ````

                The value of this property is the value of the `userinfo` property in JSON format.
                For example, if the JSON above is included in an authorization request, this property holds JSON equivalent to the following.

                ```json
                {
                  "given_name": { "essential": true },
                  "nickname": null,
                  "email": { "essential": true },
                  "email_verified": { "essential": true },
                  "picture": null,
                  "http://example.info/claims/groups": null
                }
                ```

                Note that if a request object is given and it contains the `claims` property and if the `claims` request parameter is also given,
                the value of this property holds the former value.
            serviceAttributes:
              type: array
              items:
                $ref: ../pair.yaml
              description: |
                The attributes of this service that the client application belongs to.
            clientAttributes:
              type: array
              items:
                $ref: ../pair.yaml
              description: |
                The attributes of the client.
    example:
      {
        "resultCode": "A091001",
        "resultMessage": "[A091001] The access token presented at the userinfo endpoint is valid.",
        "action": "OK",
        "clientId": 15518267821,
        "clientIdAliasUsed": false,
        "scopes": [ "openid" ],
        "subject": "john",
        "token": "Ntm9MDb8WXQAevqrBkd84KTTHbYHVQrTjgUZCOWqEUI"
      }
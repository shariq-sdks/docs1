post:
  summary: /client/registration/get API
  description: |
    Get a dynamically registered client. This API is supposed to be used to implement a client registration
    management endpoint that complies with [RFC 7592](https://datatracker.ietf.org/doc/html/rfc7592)
    (OAuth 2.0 Dynamic Registration Management).

    <br>
    <details>
    <summary>Description</summary>

    This API is supposed to be called from the within the implementation of the client registration
    management endpoint of the authorization server. The authorization server implementation should
    retrieve the value of `action` from the response and take the following steps according to the value.

    **INTERNAL_SERVER_ERROR**

    When the value of `action` is `INTERNAL_SERVER_ERROR`, it means that the API call from the authorization
    server implementation was wrong or that an error occurred in Authlete.

    In either case, from a viewpoint of the client or developer, it is an error on the server side.
    Therefore, the authorization server implementation should generate a response to the client or developer
    with "500 Internal Server Error"s and `application/json`.

    The value of `responseContent` is a JSON string which describes the error, so it can be used as
    the entity body of the response.

    The following illustrates the response which the authorization server implementation should generate
    and return to the client or developer.

    ```http
    HTTP/1.1 500 Internal Server Error
    Content-Type: application/json
    Cache-Control: no-store
    Pragma: no-cache

    {responseContent}
    ```

    The endpoint implementation may return another different response to the client or developer since
    "500 Internal Server Error" is not required by the specification.

    **BAD_REQUEST**

    When the value of `action` is `BAD_REQUEST`, it means that the request from the client or developer
    was wrong.

    The authorization server implementation should generate a response to the client or developer with
    "400 Bad Request" and `application/json`.

    The value of `responseContent` is a JSON string which describes the error, so it can be used as
    the entity body of the response.

    The following illustrates the response which the authorization server implementation should generate
    and return to the client or developer.

    ```http
    HTTP/1.1 400 Bad Request
    Content-Type: application/json
    Cache-Control: no-store
    Pragma: no-cache

    {responseContent}
    ```

    **UNAUTHORIZED**

    When the value of `action` is `UNAUTHORIZED`, it means that the registration access token used by
    the client configuration request (RFC 7592) is invalid, or the client application which the token
    is tied to does not exist any longer or is invalid.

    The HTTP status of the response returned to the client application must be "401 Unauthorized" and
    the content type must be `application/json`.

    The value of `responseContent` is a JSON string which describes the error, so it can be used as
    the entity body of the response.

    The following illustrates the response which the endpoint implementation should generate and return
    to the client application.

    ```http
    HTTP/1.1 401 Unauthorized
    Content-Type: application/json
    Cache-Control: no-store
    Pragma: no-cache

    {responseContent}
    ```

    NOTE: The `UNAUTHORIZED` value was added in October, 2021. See the description of
    `Service.unauthorizedOnClientConfigSupported` for details.

    **OK**

    When the value of `action` is `OK`, it means that the request from the client or developer is valid.

    The authorization server implementation should generate a response to the client or developer with
    "200 OK" and `application/json`.

    The `responseContent` a JSON string which can be used as the entity body of the response.

    The following illustrates the response which the authorization server implementation should generate
    and return to the client or developer.

    ```http
    HTTP/1.1 200 OK
    Content-Type: application/json
    Cache-Control: no-store
    Pragma: no-cache

    {responseContent}
    ```
    </details>

  security:
    - ServiceCredentials: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: ../model/request/client_registration_get_request.yaml
        example:
          clientId: "26837717140341"
          token: "qs4Tu5TV7qqDYT93bFs6ISyhTByMF9o-54GY4JU5vTA"
      application/x-www-form-urlencoded:
        schema:
          $ref: ../model/request/client_registration_get_request.yaml
  responses:
    '200':
        $ref: ../model/response/client_registration_get_response.yaml
    '400':
      $ref: ../model/response/400.yaml
    '401':
      $ref: ../model/response/401.yaml
    '403':
      $ref: ../model/response/403.yaml
    '500':
      $ref: ../model/response/500.yaml
  operationId: ''
  x-code-samples:
    - lang: shell
      label: curl
      source: |
        curl -v -X POST https://api.authlete.com/api/client/registration/get \
        -H 'Content-Type:application/json' \
        -u '10167240911:LFpGEwpyHKNYMeMHg-H339X8gXdVlix-GoCHQAjAMbI' \
        -d '{ "clientId": "26837717140341", "token": "qs4Tu5TV7qqDYT93bFs6ISyhTByMF9o-54GY4JU5vTA" }'

    - lang: java
      label: java
      source: |
        AuthleteConfiguration conf = ...;
        AuthleteApi api = AuthleteApiFactory.create(conf);

        ClientRegistrationRequest req = new ClientRegistrationRequest();
        req.setClientId("26837717140341");
        req.setToken("qs4Tu5TV7qqDYT93bFs6ISyhTByMF9o-54GY4JU5vTA");

        api.dynamicClientGet(req);

    - lang: cs
      label: C#
      source: |
        IAuthleteConfiguration conf = ...;
        IAuthleteApi api = new AuthleteApi(conf);

        ClientRegistrationRequest req = new ClientRegistrationRequest();
        req.ClientId = "26837717140341";
        req.Token = "qs4Tu5TV7qqDYT93bFs6ISyhTByMF9o-54GY4JU5vTA";

        await api.DynamicClientGet(req);

    - lang: php
      label: PHP
      source: |
        $conf = ...;
        $api = new AuthleteApiImpl($conf);

        $req = new ClientRegistrationRequest();
        $req.clientId = "26837717140341";
        $req.token = "qs4Tu5TV7qqDYT93bFs6ISyhTByMF9o-54GY4JU5vTA";

        $api.dynamicClientGet($req);

    - lang: ruby
      source: |
        conf = ...
        api = Authlete::Api.new(conf)

        req = Authlete::Model::ClientRegistrationRequest.new
        req.clientId = '26837717140341'
        req.token = 'qs4Tu5TV7qqDYT93bFs6ISyhTByMF9o-54GY4JU5vTA'

        api.dynamic_client_get(req)

    - lang: python
      source: |
        conf = ...
        api = AuthleteApiImpl(conf)

        req = new ClientRegistrationRequest()
        req.clientId = '26837717140341'
        req.token = 'qs4Tu5TV7qqDYT93bFs6ISyhTByMF9o-54GY4JU5vTA'

        api.dynamicClientGet(req)

    - lang: go
      source: |
        conf := ...
        api := api.New(&conf)

        req := dto.ClientRegistrationRequest{}
        req.ClientId = "26837717140341"
        req.Token = "qs4Tu5TV7qqDYT93bFs6ISyhTByMF9o-54GY4JU5vTA"

        api.DynamicClientGet(&req)

    - lang: ts
      label: deno
      source: |
        // This API is not supported yet.
  tags:
    - Dynamic Client Registration
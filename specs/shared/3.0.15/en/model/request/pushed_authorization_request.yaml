type: object
required: [ parameters ]
properties:
  parameters:
    type: string
    description: |
      The pushed authorization request body received from the client application.

      The value of parameters is the entire entity body (which is formatted in `application/x-www-form-urlencoded`) of the request from
      the client application.
  clientId:
    type: string
    description: |
      The client ID extracted from `Authorization` header of the pushed request from the client application.
  clientSecret:
    type: string
    description: |
      The client secret extracted from `Authorization` header of the pushed authorization request from the client application.
  clientCertificate:
    type: string
    description: The client certificate from the MTLS connection to pushed authorization endpoint from the client application.
  clientCertificatePath:
    type: string
    description: |
      The certificate path presented by the client during client authentication. These certificates are strings in PEM format.
  dpop:
    type: string
    description: |
      DPoP Header
  htm:
    type: string
    description: |
      HTTP Method (for DPoP validation).
  htu:
    type: string
    description: |
      HTTP URL base (for DPoP validation).
  oauthClientAttestation:
    type: string
    description: |
      The value of the `OAuth-Client-Attestation` HTTP header, which is defined in the specification
      of [OAuth 2.0 Attestation-Based Client Authentication](https://datatracker.ietf.org/doc/draft-ietf-oauth-attestation-based-client-auth/).
  oauthClientAttestationPop:
    type: string
    description: |
      The value of the `OAuth-Client-Attestation-PoP` HTTP header, which is defined in the specification
      of [OAuth 2.0 Attestation-Based Client Authentication](https://datatracker.ietf.org/doc/draft-ietf-oauth-attestation-based-client-auth/).
  dpopNonceRequired:
    type: boolean
    description: |
      The flag indicating whether to require the DPoP proof JWT to include the `nonce` claim. Even if
      the service's `dpopNonceRequired` property is `false`, calling the `/pushed_auth_req` API with
      this `dpopNonceRequired` parameter `true` will force the Authlete API to check whether the DPoP
      proof JWT includes the expected `nonce` value.

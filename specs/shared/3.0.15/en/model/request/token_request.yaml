type: object
required: [ parameters ]
properties:
  parameters:
    type: string
    description: |
      OAuth 2.0 token request parameters which are the request parameters that the OAuth 2.0 token endpoint of the authorization server
      implementation received from the client application.

      The value of parameters is the entire entity body (which is formatted in `application/x-www-form-urlencoded`) of the request from
      the client application.
  clientId:
    type: string
    description: |
      The client ID extracted from `Authorization` header of the token request from the client application.

      If the token endpoint of the authorization server implementation supports basic authentication as
      a means of client authentication, and the request from the client application contained its client ID
      in `Authorization` header, the value should be extracted and set to this parameter.
  clientSecret:
    type: string
    description: |
      The client secret extracted from `Authorization` header of the token request from the client application.

      If the token endpoint of the authorization server implementation supports basic authentication as a means of
      client authentication, and the request from the client application contained its client secret in `Authorization` header,
      the value should be extracted and set to this parameter.
  clientCertificate:
    type: string
    description: The client certificate from the MTLS of the token request from the client application.
  clientCertificatePath:
    type: string
    description: |
      The certificate path presented by the client during client authentication. These certificates are strings in PEM format.
  properties:
    type: string
    description: |
      Extra properties to associate with an access token. See [Extra Properties](https://www.authlete.com/developers/definitive_guide/extra_properties/)
      for details.
  dpop:
    type: string
    description: |
      `DPoP` header presented by the client during the request to the token endpoint.

      The header contains a signed JWT which includes the public key that is paired with the private key used to sign the JWT.
      See [OAuth 2.0 Demonstration of Proof-of-Possession at the Application Layer (DPoP)](https://datatracker.ietf.org/doc/html/draft-ietf-oauth-dpop)
      for details.
  htm:
    type: string
    description: |
      HTTP method of the token request. This field is used to validate the `DPoP` header.

      In normal cases, the value is `POST`. When this parameter is omitted, `POST` is used as the default value.
      See [OAuth 2.0 Demonstration of Proof-of-Possession at the Application Layer (DPoP)](https://datatracker.ietf.org/doc/html/draft-ietf-oauth-dpop)
      for details.
  htu:
    type: string
    description: |
      URL of the token endpoint. This field is used to validate the `DPoP` header.

      If this parameter is omitted, the `tokenEndpoint` property of the Service is used as the default value.
      See [OAuth 2.0 Demonstration of Proof-of-Possession at the Application Layer (DPoP)](https://datatracker.ietf.org/doc/html/draft-ietf-oauth-dpop)
      for details.
  accessToken:
    type: string
    description: |
      The representation of an access token that may be issued as a result of the Authlete API call.
  jwtAtClaims:
    type: string
    description: |
      Additional claims that are added to the payload part of the JWT access token.
  oauthClientAttestation:
    type: string
    description: |
      The value of the `OAuth-Client-Attestation` HTTP header, which is defined in the specification
      of [OAuth 2.0 Attestation-Based Client Authentication](https://datatracker.ietf.org/doc/draft-ietf-oauth-attestation-based-client-auth/).
  oauthClientAttestationPop:
    type: string
    description: |
      The value of the `OAuth-Client-Attestation-PoP` HTTP header, which is defined in the specification
      of [OAuth 2.0 Attestation-Based Client Authentication](https://datatracker.ietf.org/doc/draft-ietf-oauth-attestation-based-client-auth/).
  accessTokenDuration:
    type: integer
    format: int64
    description: |
      The duration (in seconds) of the access token that may be issued as a result of the Authlete
      API call.

      When this request parameter holds a positive integer, it is used as the duration of the access
      token in. In other cases, this request parameter is ignored.
  refreshTokenDuration:
    type: integer
    format: int64
    description: |
      The duration (in seconds) of the refresh token that may be issued as a result of the Authlete
      API call.

      When this request parameter holds a positive integer, it is used as the duration of the refresh
      token in. In other cases, this request parameter is ignored.
  dpopNonceRequired:
    type: boolean
    description: |
      The flag indicating whether to require the DPoP proof JWT to include the `nonce` claim. Even if
      the service's `dpopNonceRequired` property is `false`, calling the `/auth/token` API with this
      `dpopNonceRequired` parameter `true` will force the Authlete API to check whether the DPoP proof
      JWT includes the expected `nonce` value.

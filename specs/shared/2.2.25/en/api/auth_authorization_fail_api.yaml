post:
  summary: /api/auth/authorization/fail API
  description: |
    This API generates a content of an error authorization response that the authorization server implementation
    returns to the client application.

    <br>
    <details>
    <summary>Description</summary>

    This API is supposed to be called from within the implementation of the authorization endpoint of the service
    in order to generate an error response to the client application.

    The description of the `/auth/authorization` API describes the timing when this API should be called.

    The response from `/auth/authorization/fail` API has some parameters.
    Among them, it is `action` parameter that the authorization server implementation should check first because
    it denotes the next action that the authorization server implementation should take.
    According to the value of `action`, the authorization server implementation must take the steps described below.

    **INTERNAL_SERVER_ERROR**

    When the value of `action` is `INTERNAL_SERVER_ERROR`, it means that the request from the authorization
    server implementation was wrong or that an error occurred in Authlete.

    In either case, from the viewpoint of the client application, it is an error on the server side.
    Therefore, the service implementation should generate a response to the client application with
    HTTP status of "500 Internal Server Error". Authlete recommends `application/json` as the content type.

    The value of `responseContent` is a JSON string which describes the error, so it can be used
    as the entity body of the response.

    The following illustrates the response which the service implementation should generate and return
    to the client application.

    ```
    HTTP/1.1 500 Internal Server Error
    Content-Type: application/json
    Cache-Control: no-store
    Pragma: no-cache

    {responseContent}
    ```

    The endpoint implementation may return another different response to the client application since
    "500 Internal Server Error" is not required by OAuth 2.0.

    **BAD_REQUEST**

    When the value of `action` is `BAD_REQUEST`, it means that the ticket is no longer valid (deleted
    or expired) and that the reason of the invalidity was probably due to the end-user's too-delayed
    response to the authorization UI.

    A response with HTTP status of "400 Bad Request" should be returned to the client application and
    Authlete recommends `application/json` as the content type.

    The value of `responseContent` is a JSON string which describes the error, so it can be used
    as the entity body of the response.

    The following illustrates the response which the service implementation should generate and return
    to the client application.

    ```
    HTTP/1.1 400 Bad Request
    Content-Type: application/json
    Cache-Control: no-store
    Pragma: no-cache

    {responseContent}
    ```

    The endpoint implementation may return another different response to the client application since
    "400 Bad Request" is not required by OAuth 2.0.

    **LOCATION**

    When the value of `action` is `LOCATION`, it means that the response to the client application must
    be "302 Found" with Location header.

    The parameter responseContent contains a redirect URI with (1) an authorization code, an ID token
    and/or an access token (on success) or (2) an error code (on failure), so it can be used as the
    value of `Location` header.

    The following illustrates the response which the service implementation must generate and return
    to the client application.

    ```
    HTTP/1.1 302 Found
    Location: {responseContent}
    Cache-Control: no-store
    Pragma: no-cache
    ```

    **FORM**

    When the value of `action` is `FORM`, it means that the response to the client application must be 200 OK
    with an HTML which triggers redirection by JavaScript.
    This happens when the authorization request from the client application contained `response_mode=form_post`.

    The value of `responseContent` is an HTML which can be used as the entity body of the response.

    The following illustrates the response which the service implementation must generate and return
    to the client application.

    ```
    HTTP/1.1 200 OK
    Content-Type: text/html;charset=UTF-8
    Cache-Control: no-store
    Pragma: no-cache

    {responseContent}
    ```
    </details>
  security:
    - ServiceCredentials: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: ../model/request/authorization_fail_request.yaml
        example:
          ticket: qA7wGybwArICpbUSutrf5Xc9-i1fHE0ySOHxR1eBoBQ
          reason: NOT_AUTHENTICATED
      application/x-www-form-urlencoded:
        schema:
          $ref: ../model/request/authorization_fail_request.yaml
  responses:
    '200':
      description: ""
      content:
        application/json:
          schema:
            $ref: ../model/response/authorization_fail_response.yaml
          example:
            {
              "resultCode": "A004201",
              "resultMessage": "[A004201] The authorization request from the service does not contain 'parameters' parameter.",
              "action": "BAD_REQUEST",
              "responseContent": "{\\\"error_description\\\":\\\"[A004201] The authorization request from the service does not contain 'parameters' parameter.\\\",\\\"error\\\":\\\"invalid_request\\\",\\\"error_uri\\\":\\\"https://docs.authlete.com/#A004201\\\"}"
            }
    '400':
      description: ""
      content:
        application/json:
          schema:
            $ref: ../model/response/result.yaml
          example:
            resultCode: A001201
            resultMessage: '[A001201] /auth/authorization/fail, TLS must be used.'
    '401':
      description: ""
      content:
        application/json:
          schema:
            $ref: ../model/response/result.yaml
          example:
            resultCode: A001202
            resultMessage: '[A001202] /auth/authorization/fail, Authorization header is missing.'
    '403':
      description: ""
      content:
        application/json:
          schema:
            $ref: ../model/response/result.yaml
          example:
            resultCode: A001215
            resultMessage: '[A001215] /auth/authorization/fail, The client (ID = 26837717140341) is locked.'
    '500':
      description: ""
      content:
        application/json:
          schema:
            $ref: ../model/response/result.yaml
          example:
            resultCode: A001101
            resultMessage: '[A001101] /auth/authorization/fail, Authlete Server error.'
  operationId: 'auth_authorization_fail_api'
  x-code-samples:
    - lang: shell
      label: curl
      source: |
        curl -v -X POST https://api.authlete.com/api/auth/authorization/fail \
        -H 'Content-Type: application/json' \
        -u '21653835348762:uE4NgqeIpuSV_XejQ7Ds3jsgA1yXhjR1MXJ1LbPuyls' \
        -d '{ "ticket": "c4iy3TWGn74UMO7ihRl0ZS8OEUzV9axBlBbJbqxH-9Q", "reason": "NOT_AUTHENTICATED" }'

    - lang: java
      label: java
      source: |
        AuthleteConfiguration conf = ...;
        AuthleteApi api = AuthleteApiFactory.create(conf);

        AuthorizationFailRequest req = new AuthorizationFailRequest();
        req.setTicket("c4iy3TWGn74UMO7ihRl0ZS8OEUzV9axBlBbJbqxH-9Q");
        req.setReason(AuthorizationFailRequest.Reason.NOT_AUTHENTICATED);

        api.authorizationFail(req);

    - lang: cs
      label: C#
      source: |
        IAuthleteConfiguration conf = ...;
        IAuthleteApi api = new AuthleteApi(conf);

        AuthorizationFailRequest req = new AuthorizationFailRequest();
        req.Ticket = "c4iy3TWGn74UMO7ihRl0ZS8OEUzV9axBlBbJbqxH-9Q";
        req.Reason = AuthorizationFailReason.NOT_AUTHENTICATED;

        await api.AuthorizationFail(req);

    - lang: php
      label: PHP
      source: |
        $conf = ...;
        $api = new AuthleteApiImpl($conf);

        $req = new AuthorizationFailRequest();
        $req.setTicket("c4iy3TWGn74UMO7ihRl0ZS8OEUzV9axBlBbJbqxH-9Q");
        $req.setReason(AuthorizationFailReason.$NOT_AUTHENTICATED);

        $api.authorizationFail($req);

    - lang: ruby
      source: |
        conf = ...
        api = Authlete::Api.new(conf)

        req = Authlete::Model::Request::AuthorizationFailRequest.new
        req.ticket = 'c4iy3TWGn74UMO7ihRl0ZS8OEUzV9axBlBbJbqxH-9Q'
        req.reason = 'NOT_AUTHENTICATED'

        api.authorization_fail(req)

    - lang: python
      source: |
        conf = ...
        api = AuthleteApiImpl(conf)

        req = AuthorizationFailRequest()
        req.ticket = 'c4iy3TWGn74UMO7ihRl0ZS8OEUzV9axBlBbJbqxH-9Q'
        req.reason = AuthorizationFailReason.NOT_AUTHENTICATED

        api.authorizationFail(req)

    - lang: go
      source: |
        conf := ...
        api := api.New(&conf)

        req := dto.AuthorizationFailRequest{}
        req.Ticket = "c4iy3TWGn74UMO7ihRl0ZS8OEUzV9axBlBbJbqxH-9Q"
        req.Reason = AuthorizationFailReason.NOT_AUTHENTICATED

        api.AuthorizationFail(&req)

    - lang: ts
      label: deno
      source: |
        const conf: AuthleteConfiguration = ...;
        const api: AuthleteApi = new AuthleteApiImpl(conf);

        const req = new AuthorizationFailRequest();
        req.ticket = 'c4iy3TWGn74UMO7ihRl0ZS8OEUzV9axBlBbJbqxH-9Q';
        req.reason = AuthorizationFailRequest.Reason.NOT_AUTHENTICATED;

        await api.authorizationFail(req);
  tags: [ Authorization Endpoint ]

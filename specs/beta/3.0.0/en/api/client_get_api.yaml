get:
  summary: /api/{serviceId}/client/get/{clientId} API
  description: |
    Get a client.
  security:
    - AccessToken: []
  parameters:
    - in: path
      name: serviceId
      description: A service ID.
      required: true
      schema:
        type: string
    - in: path
      name: clientId
      schema:
        type: string
      required: true
      description:
        A client ID.
  responses:
    '200':
      description: ""
      content:
        application/json:
          schema:
            $ref: ../model/client.yaml
          example:
            {
              "applicationType": "WEB",
              "attributes": [
                {
                  "key": "attribute1-key",
                  "value": "attribute1-value"
                },
                {
                  "key": "attribute2-key",
                  "value": "attribute2-value"
                }
              ],
              "authTimeRequired": false,
              "bcUserCodeRequired": false,
              "clientId": 26478243745571,
              "clientIdAlias": "my-client",
              "clientIdAliasEnabled": true,
              "clientName": "My client",
              "clientSecret": "gXz97ISgLs4HuXwOZWch8GEmgL4YMvUJwu3er_kDVVGcA0UOhA9avLPbEmoeZdagi9yC_-tEiT2BdRyH9dbrQQ",
              "clientType": "CONFIDENTIAL",
              "createdAt": 1639468356000,
              "defaultMaxAge": 0,
              "derivedSectorIdentifier": "my-client.example.com",
              "developer": "john",
              "dynamicallyRegistered": false,
              "frontChannelRequestObjectEncryptionRequired": false,
              "grantTypes": [
                "AUTHORIZATION_CODE",
                "REFRESH_TOKEN"
              ],
              "idTokenSignAlg": "RS256",
              "modifiedAt": 1639468356000,
              "number": 6164,
              "parRequired": false,
              "redirectUris": [
                "https://my-client.example.com/cb1",
                "https://my-client.example.com/cb2"
              ],
              "requestObjectEncryptionAlgMatchRequired": false,
              "requestObjectEncryptionEncMatchRequired": false,
              "requestObjectRequired": false,
              "responseTypes": [
                "CODE",
                "TOKEN"
              ],
              "serviceNumber": 5041,
              "subjectType": "PUBLIC",
              "tlsClientCertificateBoundAccessTokens": false,
              "tokenAuthMethod": "CLIENT_SECRET_BASIC"
            }
    '400':
      $ref: ../model/response/400.yaml
    '401':
      $ref: ../model/response/401.yaml
    '403':
      $ref: ../model/response/403.yaml
    '500':
      $ref: ../model/response/500.yaml
  operationId: 'client_get_api'
  x-code-samples:
    - lang: shell
      label: curl
      source: |
        curl -v https://beta.authlete.com/api/21653835348762/client/get/26478243745571 \
        -u 'Authorization: Bearer V5a40R6dWvw2gMkCOBFdZcM95q4HC0Z-T0YKD9-nR6F'

    - lang: java
      label: java
      source: |
        AuthleteConfiguration conf = ...;
        AuthleteApi api = AuthleteApiFactory.create(conf);

        long clientId = ...;

        api.getClient(clientId);

    # - lang: cs
    #   label: C#
    #   source: |
    #     IAuthleteConfiguration conf = ...;
    #     IAuthleteApi api = new AuthleteApi(conf);

    #     long clientId = ...;

    #     await api.GetClient(clientId);

    # - lang: php
    #   label: PHP
    #   source: |
    #     $conf = ...;
    #     $api = new AuthleteApiImpl($conf);

    #     $clientId = ...;

    #     $api.getClient($clientId);

    # - lang: ruby
    #   source: |
    #     conf = ...
    #     api = Authlete::Api.new(conf)

    #     client_id = ...

    #     api.client_get(client_id)

    - lang: python
      source: |
        conf = ...
        api = AuthleteApiImpl(conf)

        clientId = ...

        api.getClient(clientId)

    # - lang: go
    #   source: |
    #     conf := ...
    #     api := api.New(&conf)

    #     clientId := ...

    #     api.GetClient(clientId)

    # - lang: ts
    #   label: deno
    #   source: |
    #     const conf: AuthleteConfiguration = ...;
    #     const api: AuthleteApi = new AuthleteApiImpl(conf);

    #     const clientId = ...;

    #     await api.getClient(clientId);
  tags:
    - Client Management

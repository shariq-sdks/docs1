get:
  summary: /api/{serviceId}/service/get API
  description: |
    Get a service.
  security:
    - AccessToken: []
  parameters:
    - in: path
      name: serviceId
      description: A service ID.
      schema:
        type: string
      required: true
  responses:
    '200':
      description: ""
      content:
        application/json:
          schema:
            $ref: ../model/service.yaml
          example:
            accessTokenDuration: 3600
            accessTokenType: Bearer
            allowableClockSkew: 0
            apiKey: 21653835348762
            apiSecret: uE4NgqeIpuSV_XejQ7Ds3jsgA1yXhjR1MXJ1LbPuyls
            attributes:
              - key: attribute1-key
                value: attribute1-value
              - key: attribute2-key
                value: attribute2-value
            authorizationEndpoint: https://my-service.example.com/authz
            authorizationResponseDuration: 0
            backchannelAuthReqIdDuration: 0
            backchannelBindingMessageRequiredInFapi: false
            backchannelPollingInterval: 0
            backchannelUserCodeParameterSupported: false
            claimShortcutRestrictive: false
            clientIdAliasEnabled: true
            clientsPerDeveloper: 0
            createdAt: 1639373421000
            dcrScopeUsedAsRequestable: false
            deviceFlowCodeDuration: 0
            deviceFlowPollingInterval: 0
            directAuthorizationEndpointEnabled: false
            directIntrospectionEndpointEnabled: false
            directJwksEndpointEnabled: false
            directRevocationEndpointEnabled: false
            directTokenEndpointEnabled: false
            directUserInfoEndpointEnabled: false
            dynamicRegistrationSupported: false
            errorDescriptionOmitted: false
            errorUriOmitted: false
            frontChannelRequestObjectEncryptionRequired: false
            grantManagementActionRequired: false
            hsmEnabled: false
            idTokenDuration: 0
            introspectionEndpoint: https://my-service.example.com/introspection
            issSuppressed: false
            issuer: https://my-service.example.com
            metadata:
              - key: clientCount
                value: '1'
            missingClientIdAllowed: false
            modifiedAt: 1639373421000
            mutualTlsValidatePkiCertChain: false
            nbfOptional: false
            number: 5041
            parRequired: false
            pkceRequired: true
            pkceS256Required: false
            pushedAuthReqDuration: 0
            refreshTokenDuration: 3600
            refreshTokenDurationKept: false
            refreshTokenDurationReset: false
            refreshTokenKept: false
            requestObjectEncryptionAlgMatchRequired: false
            requestObjectEncryptionEncMatchRequired: false
            requestObjectRequired: false
            revocationEndpoint: https://my-service.example.com/revocation
            scopeRequired: false
            serviceName: My service
            serviceOwnerNumber: 2
            singleAccessTokenPerSubject: false
            supportedClaimTypes:
              - NORMAL
            supportedDisplays:
              - PAGE
            supportedGrantTypes:
              - AUTHORIZATION_CODE
              - REFRESH_TOKEN
            supportedIntrospectionAuthMethods:
              - CLIENT_SECRET_BASIC
            supportedResponseTypes:
              - CODE
            supportedRevocationAuthMethods:
              - CLIENT_SECRET_BASIC
            supportedScopes:
              - defaultEntry: false
                description: A permission to read your history.
                name: history.read
              - defaultEntry: false
                description: A permission to read your timeline.
                name: timeline.read
            supportedTokenAuthMethods:
              - CLIENT_SECRET_BASIC
            tlsClientCertificateBoundAccessTokens: false
            tokenEndpoint: https://my-service.example.com/token
            tokenExpirationLinked: false
            traditionalRequestObjectProcessingApplied: false
            unauthorizedOnClientConfigSupported: false
            userCodeLength: 0
    '400':
      $ref: ../model/response/400.yaml
    '401':
      $ref: ../model/response/401.yaml
    '403':
      $ref: ../model/response/403.yaml
    '500':
      $ref: ../model/response/500.yaml
  operationId: 'service_get_api'
  x-code-samples:
    - lang: shell
      label: curl
      source: |
        curl -v https://beta.authlete.com/api/21653835348762/service/get \
        -u 'Authorization: Bearer V5a40R6dWvw2gMkCOBFdZcM95q4HC0Z-T0YKD9-nR6F'

    - lang: java
      label: java
      source: |
        AuthleteConfiguration conf = ...;
        AuthleteApi api = AuthleteApiFactory.create(conf);

        long serviceId = ...;

        api.getService(serviceId);

    - lang: cs
      label: C#
      source: |
        IAuthleteConfiguration conf = ...;
        IAuthleteApi api = new AuthleteApi(conf);

        long serviceId = ...;

        await api.GetService(serviceId);

    - lang: php
      label: PHP
      source: |
        $conf = ...;
        $api = new AuthleteApiImpl($conf);

        $serviceId = ...;

        $api.getService($serviceId);

    - lang: ruby
      source: |
        conf = ...
        api = Authlete::Api.new(conf)

        service_api_key = ...

        api.service_get(service_api_key)

    - lang: python
      source: |
        conf = ...
        api = AuthleteApiImpl(conf)

        serviceId = ...

        api.getService(serviceId)

    - lang: go
      source: |
        conf := ...
        api := api.New(&conf)

        serviceId := ...

        api.GetService(serviceId)

    - lang: ts
      label: deno
      source: |
        const conf: AuthleteConfiguration = ...;
        const api: AuthleteApi = new AuthleteApiImpl(conf);

        const serviceId = ...;

        await api.getService(serviceId);
  tags:
    - Service Management

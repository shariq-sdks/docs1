post:
  summary: /api/{serviceId}/auth/token/issue API
  description: |
    This API generates a content of a successful token response that the authorization server implementation
    returns to the client application.

    <br>
    <details>
    <summary>Description</summary>

    This API is supposed to be called from within the implementation of the token endpoint of the service
    in order to generate a successful response to the client application.

    The description of the `/auth/token` API describes the timing when this API should be called. See
    the description for the case of `action=PASSWORD`.

    The response from `/auth/token/issue` API has some parameters. Among them, it is `action` parameter
    that the authorization server implementation should check first because it denotes the next action
    that the authorization server implementation should take. According to the value of `action`, the
    authorization server implementation must take the steps described below.

    **INTERNAL_SERVER_ERROR**

    When the value of `action` is `INTERNAL_SERVER_ERROR`, it means that the request from the authorization
    server implementation was wrong or that an error occurred in Authlete.

    In either case, from the viewpoint of the client application, it is an error on the server side.
    Therefore, the service implementation should generate a response to the client application with
    HTTP status of "500 Internal Server Error".

    The value of `responseContent` is a JSON string which describes the error, so it can be used
    as the entity body of the response.

    The following illustrates the response which the service implementation should generate and return
    to the client application.

    ```
    HTTP/1.1 500 Internal Server Error
    Content-Type: application/json
    Cache-Control: no-store
    Pragma: no-cache

    {responseContent}
    ```

    The endpoint implementation may return another different response to the client application
    since "500 Internal Server Error" is not required by OAuth 2.0.

    **OK**

    When the value of `action` is `OK`, it means that Authlete's `/auth/token/issue` API successfully
    generated an access token.

    The HTTP status of the response returned to the client application must be "200 OK" and the content
    type must be`application/json`.

    The value of `responseContent` is a JSON string which contains an access token, so it can be used
    as the entity body of the response.

    The following illustrates the response which the service implementation must generate and return
    to the client application.

    ```
    HTTP/1.1 200 OK
    Content-Type: application/json
    Cache-Control: no-store
    Pragma: no-cache

    {responseContent}
    ```

    </details>

  security:
    - AccessToken: []
  parameters:
    - in: path
      name: serviceId
      description: A service ID.
      required: true
      schema:
        type: string
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: ../model/request/token_issue_request.yaml
        example:
          ticket: p7SXQ9JFjng7KFOZdCMBKcoR3ift7B54l1LGIgQXqEM
          subject: john
      application/x-www-form-urlencoded:
        schema:
          $ref: ../model/request/token_issue_request.yaml
  responses:
    '200':
      description: ""
      content:
        application/json:
          schema:
            $ref: ../model/response/token_issue_response.yaml
          example:
            {
              "resultCode": "A054001",
              "resultMessage": "[A054001] The token request (grant_type=password) was processed successfully.",
              "accessToken": "OthV6TlZ2pPUtlBBvBSGFYzSdgVy87SSIPz2Zjwi-m0",
              "accessTokenDuration": 3600,
              "accessTokenExpiresAt": 1640331371876,
              "action": "OK",
              "clientAttributes": [
                {
                  "key": "attribute1-key",
                  "value": "attribute1-value"
                },
                {
                  "key": "attribute2-key",
                  "value": "attribute2-value"
                }
              ],
              "clientId": 26478243745571,
              "clientIdAlias": "my-client",
              "clientIdAliasUsed": false,
              "refreshToken": "ICPN0-sG3BH4szqiNqaFHZrWUGt7e0zaPuhys3ejQow",
              "refreshTokenDuration": 3600,
              "refreshTokenExpiresAt": 1640331371876,
              "responseContent": "{\\\"access_token\\\":\\\"OthV6TlZ2pPUtlBBvBSGFYzSdgVy87SSIPz2Zjwi-m0\\\",\\\"refresh_token\\\":\\\"ICPN0-sG3BH4szqiNqaFHZrWUGt7e0zaPuhys3ejQow\\\",\\\"scope\\\":null,\\\"token_type\\\":\\\"Bearer\\\",\\\"expires_in\\\":3600}",
              "serviceAttributes": [
                {
                  "key": "attribute1-key",
                  "value": "attribute1-value"
                },
                {
                  "key": "attribute2-key",
                  "value": "attribute2-value"
                }
              ],
              "subject": "john"
            }
    '400':
      $ref: ../model/response/400.yaml
    '401':
      $ref: ../model/response/401.yaml
    '403':
      $ref: ../model/response/403.yaml
    '500':
      $ref: ../model/response/500.yaml
  operationId: 'auth_token_issue_api'
  x-code-samples:
    - lang: shell
      label: curl
      source: |
        curl -v -X POST https://beta.authlete.com/api/21653835348762/auth/token/issue \
        -H 'Content-Type: application/json' \
        -u 'Authorization: Bearer V5a40R6dWvw2gMkCOBFdZcM95q4HC0Z-T0YKD9-nR6F' \
        -d '{ "ticket": "p7SXQ9JFjng7KFOZdCMBKcoR3ift7B54l1LGIgQXqEM", "subject": "john" }'

    - lang: java
      label: java
      source: |
        AuthleteConfiguration conf = ...;
        AuthleteApi api = AuthleteApiFactory.create(conf);

        TokenIssueRequest req = new TokenIssueRequest()
        req.setTicket("83BNqKIhGMyrkvop_7jQjv2Z1612LNdGSQKkvkrf47c");

        api.tokenIssue(req);

    - lang: cs
      label: C#
      source: |
        IAuthleteConfiguration conf = ...;
        IAuthleteApi api = new AuthleteApi(conf);

        TokenIssueRequest req = new TokenIssueRequest();
        req.Ticket  = "83BNqKIhGMyrkvop_7jQjv2Z1612LNdGSQKkvkrf47c";

        await api.TokenIssue(req);

    - lang: php
      label: PHP
      source: |
        $conf = ...;
        $api = new AuthleteApiImpl($conf);

        $req = new TokenIssueRequest();
        $req.setTicket("83BNqKIhGMyrkvop_7jQjv2Z1612LNdGSQKkvkrf47c");

        $api.tokenIssue($req);

    - lang: ruby
      source: |
        conf = ...
        api = Authlete::Api.new(conf)

        req = Authlete::Model::Request::TokenIssueRequest.new
        req.ticket = '83BNqKIhGMyrkvop_7jQjv2Z1612LNdGSQKkvkrf47c'

        api.token_issue(req)

    - lang: python
      source: |
        conf = ...
        api = AuthleteApiImpl(conf)

        req = TokenIssueRequest()
        req.ticket = '83BNqKIhGMyrkvop_7jQjv2Z1612LNdGSQKkvkrf47c'

        api.tokenIssue(req)

    - lang: go
      source: |
        conf := ...
        api := api.New(&conf)

        req := dto.TokenIssueRequest{}
        req.Ticket = "83BNqKIhGMyrkvop_7jQjv2Z1612LNdGSQKkvkrf47c"

        api.TokenIssue(&req)

    - lang: ts
      label: deno
      source: |
        const conf: AuthleteConfiguration = ...;
        const api: AuthleteApi = new AuthleteApiImpl(conf);

        const req = new TokenIssueRequest();
        req.ticket = '83BNqKIhGMyrkvop_7jQjv2Z1612LNdGSQKkvkrf47c';

        await api.tokenIssue(req);
  tags:
    - Token Endpoint

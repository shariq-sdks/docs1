post:
  summary: /api/backchannel/authentication/fail API
  description: |
    The API prepares JSON that contains an error. The JSON should be used as the response body of the
    response which is returned to the client from the [backchannel authentication endpoint](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html#auth_backchannel_endpoint).

    <br>
    <details>
    <summary>Description</summary>

    This API is supposed to be called from within the implementation of the [backchannel authentication
    endpoint](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html#auth_backchannel_endpoint)
    of the service in order to generate an error response to the client application.

    The response from `/backchannel/authentication/fails` API has some parameters. Among them, it is
    `action` parameter that the authorization server implementation should check first because it denotes
    the next action that the authorization server implementation should take. According to the value
    of `action`, the authorization server implementation must take the steps described below.

    **INTERNAL_SERVER_ERROR**

    When the value of `action` is `INTERNAL_SERVER_ERROR`, it means that (1) the `reason` request parameter
    of the API call was `SERVER_ERROR`, (2) an error occurred on Authlete side, or (3) the request parameters
    of the API call were wrong. In this case, the authorization server implementation should return
    a "500 Internal Server Error" response to the client application. However, in most cases, commercial
    implementations prefer to use other HTTP status code than 5xx.

    **BAD_REQUEST**

    When the value of `action` is `BAD_REQUEST`, the authorization server implementation should return a
    "400 Bad Request" response to the client application.

    **FORBIDDEN**

    When the value of `action` is `FORBIDDEN`, it means that the `reason` request parameter of the API call
    was `ACCESS_DENIED`. In this case, the backchannel authentication endpoint of the authorization
    server implementation should return a "403 Forbidden" response to the client application.

    </details>

  security:
    - AccessToken: []
  parameters:
    - in: path
      name: serviceApiKey
      description: serviceApiKey
      required: true
      schema:
        type: string
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: ../model/request/backchannel_authentication_fail_request.yaml
      application/x-www-form-urlencoded:
        schema:
          $ref: ../model/request/backchannel_authentication_fail_request.yaml
  responses:
    '200':
      description: ""
      content:
        application/json:
          schema:
            $ref: ../model/response/backchannel_authentication_fail_response.yaml
          example:
            {
              "resultCode": "A185001",
              "resultMessage": "[A185001] Successfully generated an error response for the backchannel authentication request.",
              "action": "FORBIDDEN",
              "responseContent": "{\\\"error\\\":\\\"access_denied\\\"}"
            }
    '400':
      $ref: ../model/response/400.yaml
    '401':
      $ref: ../model/response/401.yaml
    '403':
      $ref: ../model/response/403.yaml
    '500':
      $ref: ../model/response/500.yaml
  operationId: 'backchannel_authentication_fail_api'
  x-code-samples:
    - lang: shell
      label: curl
      source: |
        curl -v -X POST https://api.authlete.com/api/backchannel/authentication/fail \
        -H 'Content-Type: application/json' \
        -u '21653835348762:uE4NgqeIpuSV_XejQ7Ds3jsgA1yXhjR1MXJ1LbPuyls' \
        -d '{ "ticket": "holsZhINBhum6j6MYE4yZefHuQN_kd609veKCst31p0", "reason": "ACCESS_DENIED" }'

    - lang: java
      label: java
      source: |
        AuthleteConfiguration conf = ...;
        AuthleteApi api = AuthleteApiFactory.create(conf);

        BackchannelAuthenticationFailRequest req = new BackchannelAuthenticationFailRequest();
        req.setTicket("holsZhINBhum6j6MYE4yZefHuQN_kd609veKCst31p0");
        req.setReason(BackchannelAuthenticationFailRequest.Reason.ACCESS_DENIED);

        api.backchannelAuthenticationFail(req);

    - lang: cs
      label: C#
      source: |
        IAuthleteConfiguration conf = ...;
        IAuthleteApi api = new AuthleteApi(conf);

        BackchannelAuthenticationFailRequest req = new BackchannelAuthenticationFailRequest();
        req.Ticket = "holsZhINBhum6j6MYE4yZefHuQN_kd609veKCst31p0";
        req.Reason = BackchannelAuthenticationFailReason.ACCESS_DENIED;

        await api.BackchannelAuthenticationFail(req);

    - lang: php
      label: PHP
      source: |
        $conf = ...;
        $api = new AuthleteApiImpl($conf);

        $req = new BackchannelAuthenticationFailRequest();
        $req.setTicket("holsZhINBhum6j6MYE4yZefHuQN_kd609veKCst31p0");
        $req.setReason(BackchannelAuthenticationFailReason.ACCESS_DENIED);

        $api.backchannelAuthenticationFail($req);

    - lang: ruby
      source: |
        conf = ...
        api = Authlete::Api.new(conf)

        req = Authlete::Model::Request::BackchannelAuthenticationFailRequest.new
        req.ticket = 'holsZhINBhum6j6MYE4yZefHuQN_kd609veKCst31p0'
        req.reason = 'ACCESS_DENIED'

        api.backchannel_authentication_fail(req)

    - lang: python
      source: |
        conf = ...
        api = AuthleteApiImpl(conf)

        req = BackchannelAuthenticationFailRequest()
        req.ticket = 'holsZhINBhum6j6MYE4yZefHuQN_kd609veKCst31p0'
        req.reason = BackchannelAuthenticationFailReason.ACCESS_DENIED

        api.backchannelAuthenticationFail(req)

    - lang: go
      source: |
        conf := ...
        api := api.New(&conf)

        req := dto.BackchannelAuthenticationFailRequest{}
        req.Ticket = "holsZhINBhum6j6MYE4yZefHuQN_kd609veKCst31p0"
        req.Reason = BackchannelAuthenticationFailReason.ACCESS_DENIED

        api.backchannelAuthenticationFail(&req)

    - lang: ts
      label: deno
      source: |
        // This API is not supported yet.
  tags:
    - CIBA

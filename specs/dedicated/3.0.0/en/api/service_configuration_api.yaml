get:
  summary: /api/service/configuration API
  description: |
    This API gathers configuration information about a service.

    <br>
    <details>
    <summary>Description</summary>

    This API is supposed to be called from within the implementation of the configuration endpoint of
    the service where the service that supports OpenID Connect and [OpenID Connect Discovery 1.0](https://openid.net/specs/openid-connect-discovery-1_0.html)
    must expose its configuration information in a JSON format. Details about the format are described
    in "[3. OpenID Provider Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata)"
    in OpenID Connect Discovery 1.0.

    </details>

  security:
    - ServiceCredentials: []
  parameters:
    - in: path
      name: serviceApiKey
      description: serviceApiKey
      required: true
      schema:
        type: string
    - in: query
      name: pretty
      schema:
        type: boolean
      required: false
      description:
        This boolean value indicates whether the JSON in the response should be formatted or not. If
        `true`, the JSON in the response is pretty-formatted. The default value is `false`.
  responses:
    '200':
      description: ""
      content:
        application/json:
          schema:
            type: object
            description: >
              An object representing OpenID Provider configuration information.
              See [OpenID Provider Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata)
              and [OpenID Provider Configuration Response](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationResponse)
              for more details.
          example:
            {
              "issuer": "https://my-service.example.com",
              "authorization_endpoint": "https://my-service.example.com/authz",
              "token_endpoint": "https://my-service.example.com/token",
              "scopes_supported": [
                "history.read",
                "timeline.read"
              ],
              "response_types_supported": [
                "code"
              ],
              "response_modes_supported": [
                "query",
                "fragment",
                "form_post",
                "query.jwt",
                "fragment.jwt",
                "form_post.jwt",
                "jwt"
              ],
              "grant_types_supported": [
                "authorization_code",
                "password",
                "refresh_token"
              ],
              "subject_types_supported": [
                "public",
                "pairwise"
              ],
              "id_token_signing_alg_values_supported": [
                "HS256",
                "HS384",
                "HS512",
                "RS256",
                "RS384",
                "RS512",
                "PS256",
                "PS384",
                "PS512",
                "ES256",
                "ES384",
                "ES512",
                "ES256K",
                "EdDSA"
              ],
              "id_token_encryption_alg_values_supported": [
                "RSA1_5",
                "RSA-OAEP",
                "RSA-OEAP-256",
                "ECDH-ES",
                "ECDH-ES+A128KW",
                "ECDH-ES+A192KW",
                "ECDH-ES+A256KW",
                "A128KW",
                "A192KW",
                "A256KW",
                "dir",
                "A128GCMKW",
                "A192GCMKW",
                "A256GCMKW",
                "PBES2-HS256+A128KW",
                "PBES2-HS384+A192KW",
                "PBES2-HS512+A256KW"
              ],
              "id_token_encryption_enc_values_supported": [
                "A128CBC-HS256",
                "A192CBC-HS384",
                "A256CBC-HS512",
                "A128GCM",
                "A192GCM",
                "A256GCM"
              ],
              "userinfo_signing_alg_values_supported": [
                "HS256",
                "HS384",
                "HS512",
                "RS256",
                "RS384",
                "RS512",
                "PS256",
                "PS384",
                "PS512",
                "ES256",
                "ES384",
                "ES512",
                "ES256K",
                "EdDSA",
                "none"
              ],
              "userinfo_encryption_alg_values_supported": [
                "RSA1_5",
                "RSA-OAEP",
                "RSA-OEAP-256",
                "ECDH-ES",
                "ECDH-ES+A128KW",
                "ECDH-ES+A192KW",
                "ECDH-ES+A256KW",
                "A128KW",
                "A192KW",
                "A256KW",
                "dir",
                "A128GCMKW",
                "A192GCMKW",
                "A256GCMKW",
                "PBES2-HS256+A128KW",
                "PBES2-HS384+A192KW",
                "PBES2-HS512+A256KW"
              ],
              "userinfo_encryption_enc_values_supported": [
                "A128CBC-HS256",
                "A192CBC-HS384",
                "A256CBC-HS512",
                "A128GCM",
                "A192GCM",
                "A256GCM"
              ],
              "request_object_signing_alg_values_supported": [
                "HS256",
                "HS384",
                "HS512",
                "RS256",
                "RS384",
                "RS512",
                "PS256",
                "PS384",
                "PS512",
                "ES256",
                "ES384",
                "ES512",
                "ES256K",
                "EdDSA"
              ],
              "request_object_encryption_alg_values_supported": [
                "RSA1_5",
                "RSA-OAEP",
                "RSA-OEAP-256",
                "ECDH-ES",
                "ECDH-ES+A128KW",
                "ECDH-ES+A192KW",
                "ECDH-ES+A256KW",
                "A128KW",
                "A192KW",
                "A256KW",
                "dir",
                "A128GCMKW",
                "A192GCMKW",
                "A256GCMKW",
                "PBES2-HS256+A128KW",
                "PBES2-HS384+A192KW",
                "PBES2-HS512+A256KW"
              ],
              "request_object_encryption_enc_values_supported": [
                "A128CBC-HS256",
                "A192CBC-HS384",
                "A256CBC-HS512",
                "A128GCM",
                "A192GCM",
                "A256GCM"
              ],
              "authorization_signing_alg_values_supported": [
                "HS256",
                "HS384",
                "HS512",
                "RS256",
                "RS384",
                "RS512",
                "PS256",
                "PS384",
                "PS512",
                "ES256",
                "ES384",
                "ES512",
                "ES256K",
                "EdDSA"
              ],
              "authorization_encryption_alg_values_supported": [
                "RSA1_5",
                "RSA-OAEP",
                "RSA-OEAP-256",
                "ECDH-ES",
                "ECDH-ES+A128KW",
                "ECDH-ES+A192KW",
                "ECDH-ES+A256KW",
                "A128KW",
                "A192KW",
                "A256KW",
                "dir",
                "A128GCMKW",
                "A192GCMKW",
                "A256GCMKW",
                "PBES2-HS256+A128KW",
                "PBES2-HS384+A192KW",
                "PBES2-HS512+A256KW"
              ],
              "authorization_encryption_enc_values_supported": [
                "A128CBC-HS256",
                "A192CBC-HS384",
                "A256CBC-HS512",
                "A128GCM",
                "A192GCM",
                "A256GCM"
              ],
              "token_endpoint_auth_methods_supported": [
                "client_secret_basic"
              ],
              "token_endpoint_auth_signing_alg_values_supported": [
                "HS256",
                "HS384",
                "HS512",
                "RS256",
                "RS384",
                "RS512",
                "PS256",
                "PS384",
                "PS512",
                "ES256",
                "ES384",
                "ES512",
                "ES256K",
                "EdDSA"
              ],
              "display_values_supported": [
                "page"
              ],
              "claim_types_supported": [
                "normal"
              ],
              "claims_parameter_supported": true,
              "request_parameter_supported": true,
              "request_uri_parameter_supported": true,
              "require_request_uri_registration": true,
              "revocation_endpoint": "https://my-service.example.com/revocation",
              "revocation_endpoint_auth_methods_supported": [],
              "revocation_endpoint_auth_signing_alg_values_supported": [
                "HS256",
                "HS384",
                "HS512",
                "RS256",
                "RS384",
                "RS512",
                "PS256",
                "PS384",
                "PS512",
                "ES256",
                "ES384",
                "ES512",
                "ES256K",
                "EdDSA"
              ],
              "introspection_endpoint": "https://my-service.example.com/introspection",
              "introspection_endpoint_auth_methods_supported": [],
              "introspection_endpoint_auth_signing_alg_values_supported": [
                "HS256",
                "HS384",
                "HS512",
                "RS256",
                "RS384",
                "RS512",
                "PS256",
                "PS384",
                "PS512",
                "ES256",
                "ES384",
                "ES512",
                "ES256K",
                "EdDSA"
              ],
              "code_challenge_methods_supported": [
                "plain",
                "S256"
              ],
              "tls_client_certificate_bound_access_tokens": false,
              "backchannel_token_delivery_modes_supported": [],
              "backchannel_authentication_request_signing_alg_values_supported": [
                "RS256",
                "RS384",
                "RS512",
                "PS256",
                "PS384",
                "PS512",
                "ES256",
                "ES384",
                "ES512",
                "ES256K",
                "EdDSA"
              ],
              "backchannel_user_code_parameter_supported": false,
              "require_pushed_authorization_requests": false,
              "authorization_details_supported": true,
              "verified_claims_supported": false,
              "dpop_signing_alg_values_supported": [
                "RS256",
                "RS384",
                "RS512",
                "PS256",
                "PS384",
                "PS512",
                "ES256",
                "ES384",
                "ES512",
                "ES256K",
                "EdDSA"
              ],
              "require_signed_request_object": false,
              "authorization_response_iss_parameter_supported": true
            }
    '400':
      $ref: ../model/response/400.yaml
    '401':
      $ref: ../model/response/401.yaml
    '403':
      $ref: ../model/response/403.yaml
    '500':
      $ref: ../model/response/500.yaml
  operationId: 'service_configuration_api'
  x-code-samples:
    - lang: shell
      label: curl
      source: |
        curl -v https://api.authlete.com/api/service/configuration?pretty=true \
        -u '21653835348762:uE4NgqeIpuSV_XejQ7Ds3jsgA1yXhjR1MXJ1LbPuyls'

    - lang: java
      label: java
      source: |
        AuthleteConfiguration conf = ...;
        AuthleteApi api = AuthleteApiFactory.create(conf);

        api.getServiceConfiguration(true);

    - lang: cs
      label: C#
      source: |
        IAuthleteConfiguration conf = ...;
        IAuthleteApi api = new AuthleteApi(conf);

        await api.GetServiceConfiguration(true);

    - lang: php
      label: PHP
      source: |
        $conf = ...;
        $api = new AuthleteApiImpl($conf);

        $api.getServiceConfiguration(true);

    - lang: ruby
      source: |
        conf = ...
        api = Authlete::Api.new(conf)

        api.get_service_configuration(pretty: true)

    - lang: python
      source: |
        conf = ...
        api = AuthleteApiImpl(conf)

        api.getServiceConfiguration(True)

    - lang: go
      source: |
        conf := ...
        api := api.New(&conf)

        api.GetServiceConfiguration(true)

    - lang: ts
      label: deno
      source: |
        const conf: AuthleteConfiguration = ...;
        const api: AuthleteApi = new AuthleteApiImpl(conf);

        await api.getServiceConfiguration(true);
  tags:
    - Configuration Endpoint

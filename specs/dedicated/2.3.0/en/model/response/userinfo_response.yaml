type: object
properties:
  resultCode:
    type: string
    description: The code which represents the result of the API call.
  resultMessage:
    type: string
    description: A short message which explains the result of the API call.
  action:
    type: string
    enum:
      - INTERNAL_SERVER_ERROR
      - BAD_REQUEST
      - UNAUTHORIZED
      - FORBIDDEN
      - OK
    description: The next action that the authorization server implementation should take.
  claims:
    type: array
    items:
      type: string
    description: |
      The list of claims that the client application requests to be embedded in the ID token.
  clientId:
    type: string
    description: |
      The ID of the client application which is associated with the access token.
  clientIdAlias:
    type: string
    description: |
      The client ID alias when the authorization request for the access token was made.
  clientIdAliasUsed:
    type: boolean
    description: |
      The flag which indicates whether the client ID alias was used when the authorization
      request for the access token was made.
  responseContent:
    type: string
    description: |
      The content that the authorization server implementation can use as the value of `WWW-Authenticate`
      header on errors.
  scopes:
    type: array
    items:
      type: string
    description: |
      The scopes covered by the access token.
  subject:
    type: string
    description: |
      The subject (= resource owner's ID).
  token:
    type: string
    description: |
      The access token that came along with the userinfo request.
  properties:
    type: array
    items:
      $ref: ../property.yaml
    description: |
      The extra properties associated with the access token.
  userInfoClaims:
    type: string
    description: |
      The value of the `userinfo` property in the `claims` request parameter or in the `claims` property in an authorization request object.

      A client application may request certain claims be embedded in an ID token or in a response from the userInfo endpoint.
      There are several ways. Including the `claims` request parameter and including the `claims` property in a request object are such examples.
      In both cases, the value of the `claims` parameter/property is JSON. Its format is described in [5.5. Requesting Claims using the "claims"
      Request Parameter](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsParameter).

      The following is an excerpt from the specification. You can find `userinfo` and `id_token` are top-level properties.

      ```json
      {
        "userinfo":
        {
          "given_name": { "essential": true },
          "nickname": null,
          "email": { "essential": true },
          "email_verified": { "essential": true },
          "picture": null,
          "http://example.info/claims/groups": null
        },
        "id_token":
        {
          "auth_time": { "essential": true },
          "acr": { "values": [ "urn:mace:incommon:iap:silver" ] }
        }
      }
      ````

      The value of this property is the value of the `userinfo` property in JSON format.
      For example, if the JSON above is included in an authorization request, this property holds JSON equivalent to the following.

      ```json
      {
        "given_name": { "essential": true },
        "nickname": null,
        "email": { "essential": true },
        "email_verified": { "essential": true },
        "picture": null,
        "http://example.info/claims/groups": null
      }
      ```

      Note that if a request object is given and it contains the `claims` property and if the `claims` request parameter is also given,
      the value of this property holds the former value.
  serviceAttributes:
    type: array
    items:
      $ref: ../pair.yaml
    description: |
      The attributes of this service that the client application belongs to.
  clientAttributes:
    type: array
    items:
      $ref: ../pair.yaml
    description: |
      The attributes of the client.
  consentedClaims:
    type: array
    items:
      type: string
    description: |
      the claims that the user has consented for the client application
      to know.
  requestedClaimsForTx:
    type: array
    items:
      type: string
    description: |
      Get names of claims that are requested indirectly by <i>"transformed
      claims"</i>.

      <p>
      A client application can request <i>"transformed claims"</i> by adding
      names of transformed claims in the `claims` request parameter.
      The following is an example of the `claims` request parameter
      that requests a predefined transformed claim named `18_or_over`
      and a transformed claim named `nationality_usa` to be embedded
      in the response from the userinfo endpoint.
      </p>

      ```json
      {
        "transformed_claims": {
          "nationality_usa": {
            "claim": "nationalities",
            "fn": [
              [ "eq", "USA" ],
              "any"
            ]
          }
        },
        "userinfo": {
          "::18_or_over": null,
          ":nationality_usa": null
        }
      }
      ```

      The example above assumes that a transformed claim named `18_or_over`
      is predefined by the authorization server like below.

      ```json
      {
        "18_or_over": {
          "claim": "birthdate",
          "fn": [
            "years_ago",
            [ "gte", 18 ]
          ]
        }
      }
      ```

      In the example, the {@code nationalities} claim is requested indirectly
      by the `nationality_usa` transformed claim. Likewise, the
      {@code birthdate} claim is requested indirectly by the `18_or_over`
      transformed claim.

      When the `claims` request parameter of an authorization request is
      like the example above, this `requestedClaimsForTx` property will
      hold the following value.

      ```json
      [ "birthdate", "nationalities" ]
      ```

      It is expected that the authorization server implementation prepares values
      of the listed claims and passes them as the value of the `claimsForTx`
      request parameter when it calls the `/api/auth/userinfo/issue` API. The following
      is an example of the value of the `claimsForTx` request parameter.

      ```json
      {
        "birthdate": "1970-01-23",
        "nationalities": [ "DEU", "USA" ]
      }
      ```

  requestedVerifiedClaimsForTx:
    type: array
    items:
      type: array
      items:
        type: string
    description: |
      Names of verified claims that will be referenced when transformed claims are computed.
  transformedClaims:
    type: string
    description: |
      the value of the `transformed_claims` property in the `claims` request
      parameter of an authorization request or in the `claims` property in a
      request object.
  clientEntityId:
    type: string
    description: |
      The entity ID of the client.
  clientEntityIdUsed:
    type: boolean
    description: |
      Flag which indicates whether the entity ID of the client was used when the request for the access token was made.
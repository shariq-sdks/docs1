type: object
properties:
  resultCode:
    type: string
    description: The code which represents the result of the API call.
  resultMessage:
    type: string
    description: A short message which explains the result of the API call.
  action:
    $ref: ../en_test.yaml#/components/schemas/DeviceAuthorizationApiResponse200JsonAction
  responseContent:
    type: string
    description: >
      The content that the authorization server implementation is to return to
      the client

      application. Its format varies depending on the value of `action`
      parameter.
  clientId:
    type: integer
    format: int64
    description: >
      The client ID of the client application that has made the device
      authorization request.
  clientIdAlias:
    type: string
    description: >
      The client ID alias of the client application that has made the device
      authorization

      request.
  clientIdAliasUsed:
    type: boolean
    description: >
      `true` if the value of the client_id request parameter included in the
      device authorization

      request is the client ID alias. `false` if the value is the original
      numeric client ID.
  clientName:
    type: string
    description: >
      The name of the client application which has made the device authorization
      request.
  clientAuthMethod:
    type: string
    description: >
      The client authentication method that should be performed at the device
      authorization

      endpoint.
  scopes:
    type: array
    items:
      $ref: ../en_test.yaml#/components/schemas/DeviceAuthorizationApiResponse200JsonScopesItems
    description: >
      The scopes requested by the device authorization request.


      Basically, this property holds the value of the scope request parameter in
      the device

      authorization request. However, because unregistered scopes are dropped on
      Authlete

      side, if the `scope` request parameter contains unknown scopes, the list
      returned by

      this property becomes different from the value of the `scope` request
      parameter.


      Note that `description` property and `descriptions` property of each scope
      object in the

      array contained in this property is always `null` even if descriptions of
      the scopes

      are registered.
  claimNames:
    type: array
    items:
      type: string
    description: >
      The names of the claims which were requested indirectly via some special
      scopes.

      See [5.4. Requesting Claims using Scope
      Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)

      in OpenID Connect Core 1.0 for details.
  acrs:
    type: array
    items:
      type: string
    description: >
      The list of ACR values requested by the device authorization request.


      Basically, this property holds the value of the `acr_values` request
      parameter in the

      device authorization request. However, because unsupported ACR values are
      dropped

      on Authlete side, if the `acr_values` request parameter contains
      unrecognized ACR values,

      the list returned by this property becomes different from the value of the
      `acr_values`

      request parameter.
  deviceCode:
    type: string
    description: >
      The device verification code. This corresponds to the `device_code`
      property in the

      response to the client.
  userCode:
    type: string
    description: >
      The end-user verification code. This corresponds to the `user_code`
      property in the

      response to the client.
  verificationUri:
    type: string
    description: >
      The end-user verification URI. This corresponds to the `verification_uri`
      property in

      the response to the client.
  verificationUriComplete:
    type: string
    description: >
      The end-user verification URI that includes the end-user verification
      code. This corresponds

      to the `verification_uri_complete` property in the response to the client.
  expiresIn:
    type: integer
    format: int32
    description: >
      The duration of the device verification code in seconds. This corresponds
      to the `expires_in`

      property in the response to the client.
  interval:
    type: integer
    format: int32
    description: >
      The minimum amount of time in seconds that the client must wait for
      between polling

      requests to the token endpoint. This corresponds to the `interval`
      property in the response

      to the client.
  warnings:
    type: array
    items:
      type: string
    description: >
      The warnings raised during processing the backchannel authentication
      request.
  resources:
    type: array
    items:
      type: string
    description: >
      The resources specified by the `resource` request parameters. See
      "Resource Indicators

      for OAuth 2.0" for details.
  authorizationDetails:
    $ref: ../en_test.yaml#/components/schemas/DeviceAuthorizationApiResponse200JsonAuthorizationDetails
  serviceAttributes:
    type: array
    items:
      $ref: ../en_test.yaml#/components/schemas/DeviceAuthorizationApiResponse200JsonServiceAttributesItems
    description: |
      The attributes of this service that the client application belongs to.
  clientAttributes:
    type: array
    items:
      $ref: ../en_test.yaml#/components/schemas/DeviceAuthorizationApiResponse200JsonClientAttributesItems
    description: |
      The attributes of the client.
  dynamicScopes:
    type: array
    items:
      $ref: ../en_test.yaml#/components/schemas/DeviceAuthorizationApiResponse200JsonDynamicScopesItems
    description: >
      The dynamic scopes which the client application requested by the scope
      request parameter.
  gmAction:
    $ref: ../en_test.yaml#/components/schemas/DeviceAuthorizationApiResponse200JsonGmAction
  grantId:
    type: string
    description: >
      the value of the `grant_id` request parameter of the device authorization
      request.


      The `grant_id` request parameter is defined in

      [Grant Management for OAuth
      2.0](https://openid.net/specs/fapi-grant-management.html)

      , which is supported by Authlete 2.3 and newer versions.
  grant:
    $ref: ../en_test.yaml#/components/schemas/DeviceAuthorizationApiResponse200JsonGrant
  grantSubject:
    type: string
    description: |
      The subject identifying the user who has given the grant identified
      by the `grant_id` request parameter of the device authorization
      request.

      Authlete 2.3 and newer versions support <a href=
      "https://openid.net/specs/fapi-grant-management.html">Grant Management
      for OAuth 2.0</a>. An authorization request may contain a `grant_id`
      request parameter which is defined in the specification. If the value of
      the request parameter is valid, {@link #getGrantSubject()} will return
      the subject of the user who has given the grant to the client application.
      Authorization server implementations may use the value returned from
      {@link #getGrantSubject()} in order to determine the user to authenticate.

      The user your system will authenticate during the authorization process
      (or has already authenticated) may be different from the user of the
      grant. The first implementer's draft of "Grant Management for OAuth 2.0"
      does not mention anything about the case, so the behavior in the case is
      left to implementations. Authlete will not perform the grant management
      action when the `subject` passed to Authlete does not match the
      user of the grant.
  clientEntityId:
    type: string
    description: |
      The entity ID of the client.
  clientEntityIdUsed:
    type: boolean
    description: >
      Flag which indicates whether the entity ID of the client was used when the
      request for the access token was made.

openapi: 3.1.0
info:
  title: Authlete API Explorer - Test
  description: Test version for Scalar debugging
  version: 3.0.16
  contact: {}
jsonSchemaDialect: https://json-schema.org/draft/2020-12/schema
servers:
  - url: https://us.authlete.com
    description: US Cluster
    variables: {}
paths:
  /api/{serviceId}/service/get:
    get:
      summary: Get Service
      description: >
        Get a service.


        If the access token can only view or modify clients underneath this
        service, but does not

        have access to view this service directly, a limited view of the service
        will be returned.
      parameters:
        - in: path
          name: serviceId
          description: A service ID.
          schema:
            type: string
          required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceGetApiResponse200Json1"
              examples:
                full:
                  summary: Example showing the full service object.
                  value:
                    accessTokenDuration: 3600
                    accessTokenType: Bearer
                    allowableClockSkew: 0
                    apiKey: 21653835348762
                    attributes:
                      - key: attribute1-key
                        value: attribute1-value
                      - key: attribute2-key
                        value: attribute2-value
                    authorizationEndpoint: https://my-service.example.com/authz
                    authorizationResponseDuration: 0
                    backchannelAuthReqIdDuration: 0
                    backchannelBindingMessageRequiredInFapi: false
                    backchannelPollingInterval: 0
                    backchannelUserCodeParameterSupported: false
                    claimShortcutRestrictive: false
                    clientIdAliasEnabled: true
                    clientsPerDeveloper: 0
                    createdAt: 1639373421000
                    dcrScopeUsedAsRequestable: false
                    deviceFlowCodeDuration: 0
                    deviceFlowPollingInterval: 0
                    directAuthorizationEndpointEnabled: false
                    directIntrospectionEndpointEnabled: false
                    directJwksEndpointEnabled: false
                    directRevocationEndpointEnabled: false
                    directTokenEndpointEnabled: false
                    directUserInfoEndpointEnabled: false
                    dynamicRegistrationSupported: false
                    errorDescriptionOmitted: false
                    errorUriOmitted: false
                    frontChannelRequestObjectEncryptionRequired: false
                    grantManagementActionRequired: false
                    hsmEnabled: false
                    idTokenDuration: 0
                    introspectionEndpoint: https://my-service.example.com/introspection
                    issSuppressed: false
                    issuer: https://my-service.example.com
                    metadata:
                      - key: clientCount
                        value: "1"
                    missingClientIdAllowed: false
                    modifiedAt: 1639373421000
                    mutualTlsValidatePkiCertChain: false
                    nbfOptional: false
                    number: 5041
                    parRequired: false
                    pkceRequired: true
                    pkceS256Required: false
                    pushedAuthReqDuration: 0
                    refreshTokenDuration: 3600
                    refreshTokenDurationKept: false
                    refreshTokenDurationReset: false
                    refreshTokenKept: false
                    requestObjectEncryptionAlgMatchRequired: false
                    requestObjectEncryptionEncMatchRequired: false
                    requestObjectRequired: false
                    revocationEndpoint: https://my-service.example.com/revocation
                    scopeRequired: false
                    serviceName: My service
                    serviceOwnerNumber: 2
                    singleAccessTokenPerSubject: false
                    supportedClaimTypes:
                      - NORMAL
                    supportedDisplays:
                      - PAGE
                    supportedGrantTypes:
                      - AUTHORIZATION_CODE
                      - REFRESH_TOKEN
                    supportedIntrospectionAuthMethods:
                      - CLIENT_SECRET_BASIC
                    supportedResponseTypes:
                      - CODE
                    supportedRevocationAuthMethods:
                      - CLIENT_SECRET_BASIC
                    supportedScopes:
                      - defaultEntry: false
                        description: A permission to read your history.
                        name: history.read
                      - defaultEntry: false
                        description: A permission to read your timeline.
                        name: timeline.read
                    supportedTokenAuthMethods:
                      - CLIENT_SECRET_BASIC
                    tlsClientCertificateBoundAccessTokens: false
                    tokenEndpoint: https://my-service.example.com/token
                    tokenExpirationLinked: false
                    traditionalRequestObjectProcessingApplied: false
                    unauthorizedOnClientConfigSupported: false
                    userCodeLength: 0
                limited:
                  summary: Example showing the limited service object.
                  value:
                    apiKey: 21653835348762
                    description: This Service.
                    number: 5041
                    serviceName: My service
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceGetApiResponse400Json1"
              example:
                resultCode: A001201
                resultMessage: "[A001201] /auth/authorization, TLS must be used."
        "401":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceGetApiResponse401Json1"
              example:
                resultCode: A001202
                resultMessage: "[A001202] /auth/authorization, Authorization header is missing."
        "403":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceGetApiResponse403Json1"
              example:
                resultCode: A001215
                resultMessage: "[A001215] /auth/authorization, The client (ID = 26837717140341)
                  is locked."
        "500":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceGetApiResponse500Json1"
              example:
                resultCode: A001101
                resultMessage: "[A001101] /auth/authorization, Authlete Server error."
      operationId: service_get_api
      x-code-samples:
        - lang: shell
          label: curl
          source: >
            curl -v https://us.authlete.com/api/21653835348762/service/get \

            -u 'Authorization: Bearer
            V5a40R6dWvw2gMkCOBFdZcM95q4HC0Z-T0YKD9-nR6F'
        - lang: java
          label: java
          source: |
            AuthleteConfiguration conf = ...;
            AuthleteApi api = AuthleteApiFactory.create(conf);

            long serviceId = ...;

            api.getService(serviceId);
        - lang: python
          source: |
            conf = ...
            api = AuthleteApiImpl(conf)

            serviceId = ...

            api.getService(serviceId)
      tags:
        - Service Management
  /api/service/get/list:
    get:
      summary: List Services
      description: >
        Get a list of services.


        If the access token can only view or modify clients underneath a
        service, but does not

        have access to view that service directly, a limited view of the service
        will be returned.

        Otherwise, all properties of the service are returned.


        If the access token is an administrative token, this returns a list of
        all services on the Authlete instance.

        Otherwise, all services that the access token can view, even in a
        limited fashion, are returned.
      parameters:
        - in: query
          name: start
          schema:
            type: integer
            format: int32
          required: false
          description: Start index (inclusive) of the result set. The default value is 0.
            Must not be a negative number.
        - in: query
          name: end
          schema:
            type: integer
            format: int32
          required: false
          description: End index (exclusive) of the result set. The default value is 5.
            Must not be a negative number.
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceGetListApiResponse200Json1"
              examples:
                full:
                  summary: Example showing the full service view.
                  value:
                    start: 0
                    end: 5
                    totalCount: 1
                    services:
                      - accessTokenDuration: 3600
                        accessTokenType: Bearer
                        allowableClockSkew: 0
                        apiKey: 21653835348762
                        apiSecret: uE4NgqeIpuSV_XejQ7Ds3jsgA1yXhjR1MXJ1LbPuyls
                        attributes:
                          - key: attribute1-key
                            value: attribute1-value
                          - key: attribute2-key
                            value: attribute2-value
                        authorizationEndpoint: https://as.example.com/authz
                        authorizationResponseDuration: 0
                        backchannelAuthReqIdDuration: 0
                        backchannelBindingMessageRequiredInFapi: false
                        backchannelPollingInterval: 0
                        backchannelUserCodeParameterSupported: false
                        claimShortcutRestrictive: false
                        clientIdAliasEnabled: true
                        createdAt: 1639373421000
                        dcrScopeUsedAsRequestable: false
                        deviceFlowCodeDuration: 0
                        deviceFlowPollingInterval: 0
                        directAuthorizationEndpointEnabled: false
                        directIntrospectionEndpointEnabled: false
                        directJwksEndpointEnabled: false
                        directRevocationEndpointEnabled: false
                        directTokenEndpointEnabled: false
                        directUserInfoEndpointEnabled: false
                        dynamicRegistrationSupported: false
                        errorDescriptionOmitted: false
                        errorUriOmitted: false
                        frontChannelRequestObjectEncryptionRequired: false
                        grantManagementActionRequired: false
                        hsmEnabled: false
                        idTokenDuration: 0
                        introspectionEndpoint: https://my-service.example.com/introspection
                        issSuppressed: false
                        issuer: https://my-service.example.com
                        metadata:
                          - key: clientCount
                            value: "1"
                        missingClientIdAllowed: false
                        modifiedAt: 1639373421000
                        mutualTlsValidatePkiCertChain: false
                        nbfOptional: false
                        number: 5041
                        parRequired: false
                        pkceRequired: true
                        pkceS256Required: false
                        pushedAuthReqDuration: 0
                        refreshTokenDuration: 3600
                        refreshTokenDurationKept: false
                        refreshTokenDurationReset: false
                        refreshTokenKept: false
                        requestObjectEncryptionAlgMatchRequired: false
                        requestObjectEncryptionEncMatchRequired: false
                        requestObjectRequired: false
                        revocationEndpoint: https://my-service.example.com/revocation
                        scopeRequired: false
                        serviceName: My service
                        serviceOwnerNumber: 2
                        singleAccessTokenPerSubject: false
                        supportedClaimTypes:
                          - NORMAL
                        supportedDisplays:
                          - PAGE
                        supportedGrantTypes:
                          - AUTHORIZATION_CODE
                          - REFRESH_TOKEN
                        supportedIntrospectionAuthMethods:
                          - CLIENT_SECRET_BASIC
                        supportedResponseTypes:
                          - CODE
                        supportedRevocationAuthMethods:
                          - CLIENT_SECRET_BASIC
                        supportedScopes:
                          - defaultEntry: false
                            description: A permission to read your history.
                            name: history.read
                          - defaultEntry: false
                            description: A permission to read your timeline.
                            name: timeline.read
                        supportedTokenAuthMethods:
                          - CLIENT_SECRET_BASIC
                        tlsClientCertificateBoundAccessTokens: false
                        tokenEndpoint: https://my-service.example.com/token
                        tokenExpirationLinked: false
                        traditionalRequestObjectProcessingApplied: false
                        unauthorizedOnClientConfigSupported: false
                        userCodeLength: 0
                limited:
                  summary: Example showing the limited service view.
                  value:
                    start: 0
                    end: 5
                    totalCount: 1
                    services:
                      - apiKey: 21653835348762
                        clientIdAliasEnabled: true
                        number: 5041
                        serviceName: My service
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceGetListApiResponse400Json1"
              example:
                resultCode: A001201
                resultMessage: "[A001201] /auth/authorization, TLS must be used."
        "401":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceGetListApiResponse401Json1"
              example:
                resultCode: A001202
                resultMessage: "[A001202] /auth/authorization, Authorization header is missing."
        "403":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceGetListApiResponse403Json1"
              example:
                resultCode: A001215
                resultMessage: "[A001215] /auth/authorization, The client (ID = 26837717140341)
                  is locked."
        "500":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceGetListApiResponse500Json1"
              example:
                resultCode: A001101
                resultMessage: "[A001101] /auth/authorization, Authlete Server error."
      operationId: service_get_list_api
      x-code-samples:
        - lang: shell
          label: curl
          source: >
            curl -v
            https://us.authlete.com/api/9503564192/service/get/list?start=0\&end=5
            \

            -u 'Authorization: Bearer
            V5a40R6dWvw2gMkCOBFdZcM95q4HC0Z-T0YKD9-nR6F'
        - lang: java
          label: java
          source: |
            AuthleteConfiguration conf = ...;
            AuthleteApi api = AuthleteApiFactory.create(conf);

            int start = 0;
            int end = 5;

            api.getServiceList(start, end);
        - lang: python
          source: |
            conf = ...
            api = AuthleteApiImpl(conf)

            start = 0
            end = 5

            api.getServiceList(start, end)
      tags:
        - Service Management
  /api/service/create:
    post:
      summary: Create Service
      description: |
        Create a new service.
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1"
            example:
              serviceName: My service
              issuer: https://my-service.example.com
              clientIdAliasEnabled: true
              supportedGrantTypes:
                - AUTHORIZATION_CODE
                - REFRESH_TOKEN
              supportedResponseTypes:
                - CODE
              authorizationEndpoint: https://my-service.example.com/authz
              pkceRequired: true
              tokenEndpoint: https://my-service.example.com/token
              supportedTokenAuthMethods:
                - CLIENT_SECRET_BASIC
              revocationEndpoint: https://my-service.example.com/revocation
              supportedRevocationAuthMethods:
                - CLIENT_SECRET_BASIC
              introspectionEndpoint: https://my-service.example.com/introspection
              supportedIntrospectionAuthMethods:
                - CLIENT_SECRET_BASIC
              accessTokenType: Bearer
              accessTokenDuration: 3600
              refreshTokenDuration: 3600
              supportedScopes:
                - name: timeline.read
                  defaultEntry: false
                  description: A permission to read your timeline.
                - name: history.read
                  defaultEntry: false
                  description: A permission to read your history.
              attributes:
                - key: attribute1-key
                  value: attribute1-value
                - key: attribute2-key
                  value: attribute2-value
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/ServiceCreateApiRequestBody1"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceCreateApiResponse200Json1"
              example:
                accessTokenDuration: 3600
                accessTokenType: Bearer
                allowableClockSkew: 0
                apiKey: 21653835348762
                apiSecret: uE4NgqeIpuSV_XejQ7Ds3jsgA1yXhjR1MXJ1LbPuyls
                attributes:
                  - key: attribute1-key
                    value: attribute1-value
                  - key: attribute2-key
                    value: attribute2-value
                authorizationEndpoint: https://my-service.example.com/authz
                authorizationResponseDuration: 0
                backchannelAuthReqIdDuration: 0
                backchannelBindingMessageRequiredInFapi: false
                backchannelPollingInterval: 0
                backchannelUserCodeParameterSupported: false
                claimShortcutRestrictive: false
                clientIdAliasEnabled: true
                clientsPerDeveloper: 0
                createdAt: 1639373421000
                dcrScopeUsedAsRequestable: false
                deviceFlowCodeDuration: 0
                deviceFlowPollingInterval: 0
                directAuthorizationEndpointEnabled: false
                directIntrospectionEndpointEnabled: false
                directJwksEndpointEnabled: false
                directRevocationEndpointEnabled: false
                directTokenEndpointEnabled: false
                directUserInfoEndpointEnabled: false
                dynamicRegistrationSupported: false
                errorDescriptionOmitted: false
                errorUriOmitted: false
                frontChannelRequestObjectEncryptionRequired: false
                grantManagementActionRequired: false
                hsmEnabled: false
                idTokenDuration: 0
                introspectionEndpoint: https://my-service.example.com/introspection
                issSuppressed: false
                issuer: https://my-service.example.com
                metadata:
                  - key: clientCount
                    value: "0"
                missingClientIdAllowed: false
                modifiedAt: 1639373421000
                mutualTlsValidatePkiCertChain: false
                nbfOptional: false
                number: 5041
                parRequired: false
                pkceRequired: true
                pkceS256Required: false
                pushedAuthReqDuration: 0
                refreshTokenDuration: 3600
                refreshTokenDurationKept: false
                refreshTokenDurationReset: false
                refreshTokenKept: false
                requestObjectEncryptionAlgMatchRequired: false
                requestObjectEncryptionEncMatchRequired: false
                requestObjectRequired: false
                revocationEndpoint: https://my-service.example.com/revocation
                scopeRequired: false
                serviceName: My service
                serviceOwnerNumber: 2
                singleAccessTokenPerSubject: false
                supportedClaimTypes:
                  - NORMAL
                supportedDisplays:
                  - PAGE
                supportedGrantTypes:
                  - AUTHORIZATION_CODE
                  - REFRESH_TOKEN
                supportedIntrospectionAuthMethods:
                  - CLIENT_SECRET_BASIC
                supportedResponseTypes:
                  - CODE
                supportedRevocationAuthMethods:
                  - CLIENT_SECRET_BASIC
                supportedScopes:
                  - defaultEntry: false
                    description: A permission to read your history.
                    name: history.read
                  - defaultEntry: false
                    description: A permission to read your timeline.
                    name: timeline.read
                supportedTokenAuthMethods:
                  - CLIENT_SECRET_BASIC
                tlsClientCertificateBoundAccessTokens: false
                tokenEndpoint: https://my-service.example.com/token
                tokenExpirationLinked: false
                traditionalRequestObjectProcessingApplied: false
                unauthorizedOnClientConfigSupported: false
                userCodeLength: 0
        "400":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceCreateApiResponse400Json1"
              example:
                resultCode: A001201
                resultMessage: "[A001201] /auth/authorization, TLS must be used."
        "401":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceCreateApiResponse401Json1"
              example:
                resultCode: A001202
                resultMessage: "[A001202] /auth/authorization, Authorization header is missing."
        "403":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceCreateApiResponse403Json1"
              example:
                resultCode: A001215
                resultMessage: "[A001215] /auth/authorization, The client (ID = 26837717140341)
                  is locked."
        "500":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceCreateApiResponse500Json1"
              example:
                resultCode: A001101
                resultMessage: "[A001101] /auth/authorization, Authlete Server error."
      operationId: service_create_api
      x-code-samples:
        - lang: shell
          label: curl
          source: >
            curl -v -X POST https://us.authlete.com/api/service/create \

            -H 'Content-Type:application/json' \

            -u 'Authorization: Bearer
            V5a40R6dWvw2gMkCOBFdZcM95q4HC0Z-T0YKD9-nR6F' \

            -d '{ "serviceName": "My Service", ... }'
        - lang: java
          label: java
          source: |
            AuthleteConfiguration conf = ...;
            AuthleteApi api = AuthleteApiFactory.create(conf);

            Service service = new Service();
            service.setServiceName("My Service");
            ...

            api.createService(service);
        - lang: python
          source: |
            conf = ...
            api = AuthleteApiImpl(conf)

            service = Service()
            service.serviceName = 'My Service'
            ...

            api.createService(service)
      tags:
        - Service Management
components:
  schemas:
    AccessToken:
      type: object
      properties:
        accessTokenHash:
          type: string
          description: The hash of the access token.
        accessTokenExpiresAt:
          type: integer
          format: int64
          description: The timestamp at which the access token will expire.
        refreshTokenHash:
          type: string
          description: The hash of the refresh token.
        refreshTokenExpiresAt:
          type: integer
          format: int64
          description: The timestamp at which the refresh token will expire.
        createdAt:
          type: integer
          format: int64
          description: |
            The timestamp at which the access token was first created.
        lastRefreshedAt:
          type: integer
          format: int64
          description: >
            The timestamp at which the access token was last refreshed using the
            refresh token.
        clientId:
          type: integer
          format: int64
          description: |
            The ID of the client associated with the access token.
        subject:
          type: string
          description: |
            The subject (= unique user ID) associated with the access token.
        grantType:
          $ref: "#/components/schemas/AccessTokenGrantType1"
        scopes:
          type: array
          items:
            type: string
          description: |
            The scopes associated with the access token.
        properties:
          type: array
          items:
            $ref: "#/components/schemas/AccessTokenPropertiesItems1"
          description: |
            The properties associated with the access token.
        refreshTokenScopes:
          type: array
          items:
            type: string
          description: |
            The scopes associated with the refresh token.
    ApplicationType:
      type: string
      description: >
        The application type. The value of this property affects the validation
        steps for a redirect URI.

        See the description about `redirectUris` property for more details.
      enum:
        - WEB
        - NATIVE
    AuthorizationDetails:
      type: object
      description: >
        The authorization details. This represents the value of the
        `authorization_details`

        request parameter in the preceding device authorization request which is
        defined in

        "OAuth 2.0 Rich Authorization Requests".
      properties:
        elements:
          type: array
          items:
            $ref: "#/components/schemas/AuthorizationDetailsElementsItems1"
          description: |
            Elements of this authorization details.
    ServiceGetApiResponse200Json:
      $ref: en/ServiceGetApiResponse200Json.yaml
    ServiceGetApiResponse200JsonMetadataItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonMetadataItems.yaml
    ServiceGetApiResponse200JsonMtlsEndpointAliasesItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonMtlsEndpointAliasesItems.yaml
    ServiceGetApiResponse200JsonSupportedScopesItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedScopesItems.yaml
    ServiceGetApiResponse200JsonSupportedScopesItemsDescriptionsItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedScopesItems/ServiceGetApiResponse200JsonSupportedScopesItemsDescriptionsItems.yaml
    ServiceGetApiResponse200JsonSupportedScopesItemsAttributesItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedScopesItems/ServiceGetApiResponse200JsonSupportedScopesItemsAttributesItems.yaml
    ServiceGetApiResponse200JsonAttributesItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonAttributesItems.yaml
    ServiceGetApiResponse200JsonHsksItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonHsksItems.yaml
    ServiceGetApiResponse200JsonTrustAnchorsItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonTrustAnchorsItems.yaml
    ServiceGetApiResponse200JsonCredentialIssuerMetadata:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonCredentialIssuerMetadata.yaml
    ServiceGetApiResponse400Json:
      $ref: en/ServiceGetApiResponse400Json.yaml
    ServiceGetApiResponse401Json:
      $ref: en/ServiceGetApiResponse401Json.yaml
    ServiceGetApiResponse403Json:
      $ref: en/ServiceGetApiResponse403Json.yaml
    ServiceGetApiResponse500Json:
      $ref: en/ServiceGetApiResponse500Json.yaml
    ServiceGetListApiResponse200Json:
      $ref: en/ServiceGetListApiResponse200Json.yaml
    ServiceGetListApiResponse200JsonServicesItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsMetadataItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsMetadataItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsMtlsEndpointAliasesItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsMtlsEndpointAliasesItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedScopesItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedScopesItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedScopesItemsDescriptionsItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedScopesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedScopesItemsDescriptionsItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedScopesItemsAttributesItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedScopesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedScopesItemsAttributesItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsAttributesItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsAttributesItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsHsksItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsHsksItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsTrustAnchorsItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsTrustAnchorsItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsCredentialIssuerMetadata:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsCredentialIssuerMetadata.yaml
    ServiceGetListApiResponse400Json:
      $ref: en/ServiceGetListApiResponse400Json.yaml
    ServiceGetListApiResponse401Json:
      $ref: en/ServiceGetListApiResponse401Json.yaml
    ServiceGetListApiResponse403Json:
      $ref: en/ServiceGetListApiResponse403Json.yaml
    ServiceGetListApiResponse500Json:
      $ref: en/ServiceGetListApiResponse500Json.yaml
    ServiceCreateApiRequestBodyJson:
      $ref: en/ServiceCreateApiRequestBodyJson.yaml
    ServiceCreateApiRequestBodyJsonMetadataItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonMetadataItems.yaml
    ServiceCreateApiRequestBodyJsonMtlsEndpointAliasesItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonMtlsEndpointAliasesItems.yaml
    ServiceCreateApiRequestBodyJsonSupportedScopesItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedScopesItems.yaml
    ServiceCreateApiRequestBodyJsonSupportedScopesItemsDescriptionsItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedScopesItems/ServiceCreateApiRequestBodyJsonSupportedScopesItemsDescriptionsItems.yaml
    ServiceCreateApiRequestBodyJsonSupportedScopesItemsAttributesItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedScopesItems/ServiceCreateApiRequestBodyJsonSupportedScopesItemsAttributesItems.yaml
    ServiceCreateApiRequestBodyJsonAttributesItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonAttributesItems.yaml
    ServiceCreateApiRequestBodyJsonHsksItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonHsksItems.yaml
    ServiceCreateApiRequestBodyJsonTrustAnchorsItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonTrustAnchorsItems.yaml
    ServiceCreateApiRequestBodyJsonCredentialIssuerMetadata:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonCredentialIssuerMetadata.yaml
    ServiceCreateApiRequestBody:
      $ref: en/ServiceCreateApiRequestBody.yaml
    ServiceCreateApiRequestBodyMetadataItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodyMetadataItems.yaml
    ServiceCreateApiRequestBodyMtlsEndpointAliasesItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodyMtlsEndpointAliasesItems.yaml
    ServiceCreateApiRequestBodySupportedScopesItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedScopesItems.yaml
    ServiceCreateApiRequestBodySupportedScopesItemsDescriptionsItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedScopesItems/ServiceCreateApiRequestBodySupportedScopesItemsDescriptionsItems.yaml
    ServiceCreateApiRequestBodySupportedScopesItemsAttributesItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedScopesItems/ServiceCreateApiRequestBodySupportedScopesItemsAttributesItems.yaml
    ServiceCreateApiRequestBodyAttributesItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodyAttributesItems.yaml
    ServiceCreateApiRequestBodyHsksItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodyHsksItems.yaml
    ServiceCreateApiRequestBodyTrustAnchorsItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodyTrustAnchorsItems.yaml
    ServiceCreateApiRequestBodyCredentialIssuerMetadata:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodyCredentialIssuerMetadata.yaml
    ServiceCreateApiResponse200Json:
      $ref: en/ServiceCreateApiResponse200Json.yaml
    ServiceCreateApiResponse200JsonMetadataItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonMetadataItems.yaml
    ServiceCreateApiResponse200JsonMtlsEndpointAliasesItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonMtlsEndpointAliasesItems.yaml
    ServiceCreateApiResponse200JsonSupportedScopesItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedScopesItems.yaml
    ServiceCreateApiResponse200JsonSupportedScopesItemsDescriptionsItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedScopesItems/ServiceCreateApiResponse200JsonSupportedScopesItemsDescriptionsItems.yaml
    ServiceCreateApiResponse200JsonSupportedScopesItemsAttributesItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedScopesItems/ServiceCreateApiResponse200JsonSupportedScopesItemsAttributesItems.yaml
    ServiceCreateApiResponse200JsonAttributesItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonAttributesItems.yaml
    ServiceCreateApiResponse200JsonHsksItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonHsksItems.yaml
    ServiceCreateApiResponse200JsonTrustAnchorsItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonTrustAnchorsItems.yaml
    ServiceCreateApiResponse200JsonCredentialIssuerMetadata:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonCredentialIssuerMetadata.yaml
    ServiceCreateApiResponse400Json:
      $ref: en/ServiceCreateApiResponse400Json.yaml
    ServiceCreateApiResponse401Json:
      $ref: en/ServiceCreateApiResponse401Json.yaml
    ServiceCreateApiResponse403Json:
      $ref: en/ServiceCreateApiResponse403Json.yaml
    ServiceCreateApiResponse500Json:
      $ref: en/ServiceCreateApiResponse500Json.yaml
    ServiceUpdateApiRequestBodyJson:
      $ref: en/ServiceUpdateApiRequestBodyJson.yaml
    ServiceUpdateApiRequestBodyJsonMetadataItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonMetadataItems.yaml
    ServiceUpdateApiRequestBodyJsonMtlsEndpointAliasesItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonMtlsEndpointAliasesItems.yaml
    ServiceUpdateApiRequestBodyJsonSupportedScopesItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedScopesItems.yaml
    ServiceUpdateApiRequestBodyJsonSupportedScopesItemsDescriptionsItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedScopesItems/ServiceUpdateApiRequestBodyJsonSupportedScopesItemsDescriptionsItems.yaml
    ServiceUpdateApiRequestBodyJsonSupportedScopesItemsAttributesItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedScopesItems/ServiceUpdateApiRequestBodyJsonSupportedScopesItemsAttributesItems.yaml
    ServiceUpdateApiRequestBodyJsonAttributesItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonAttributesItems.yaml
    ServiceUpdateApiRequestBodyJsonHsksItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonHsksItems.yaml
    ServiceUpdateApiRequestBodyJsonTrustAnchorsItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonTrustAnchorsItems.yaml
    ServiceUpdateApiRequestBodyJsonCredentialIssuerMetadata:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonCredentialIssuerMetadata.yaml
    ServiceUpdateApiRequestBody:
      $ref: en/ServiceUpdateApiRequestBody.yaml
    ServiceUpdateApiRequestBodyMetadataItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodyMetadataItems.yaml
    ServiceUpdateApiRequestBodyMtlsEndpointAliasesItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodyMtlsEndpointAliasesItems.yaml
    ServiceUpdateApiRequestBodySupportedScopesItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedScopesItems.yaml
    ServiceUpdateApiRequestBodySupportedScopesItemsDescriptionsItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedScopesItems/ServiceUpdateApiRequestBodySupportedScopesItemsDescriptionsItems.yaml
    ServiceUpdateApiRequestBodySupportedScopesItemsAttributesItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedScopesItems/ServiceUpdateApiRequestBodySupportedScopesItemsAttributesItems.yaml
    ServiceUpdateApiRequestBodyAttributesItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodyAttributesItems.yaml
    ServiceUpdateApiRequestBodyHsksItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodyHsksItems.yaml
    ServiceUpdateApiRequestBodyTrustAnchorsItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodyTrustAnchorsItems.yaml
    ServiceUpdateApiRequestBodyCredentialIssuerMetadata:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodyCredentialIssuerMetadata.yaml
    ServiceUpdateApiResponse200Json:
      $ref: en/ServiceUpdateApiResponse200Json.yaml
    ServiceUpdateApiResponse200JsonMetadataItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonMetadataItems.yaml
    ServiceUpdateApiResponse200JsonMtlsEndpointAliasesItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonMtlsEndpointAliasesItems.yaml
    ServiceUpdateApiResponse200JsonSupportedScopesItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedScopesItems.yaml
    ServiceUpdateApiResponse200JsonSupportedScopesItemsDescriptionsItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedScopesItems/ServiceUpdateApiResponse200JsonSupportedScopesItemsDescriptionsItems.yaml
    ServiceUpdateApiResponse200JsonSupportedScopesItemsAttributesItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedScopesItems/ServiceUpdateApiResponse200JsonSupportedScopesItemsAttributesItems.yaml
    ServiceUpdateApiResponse200JsonAttributesItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonAttributesItems.yaml
    ServiceUpdateApiResponse200JsonHsksItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonHsksItems.yaml
    ServiceUpdateApiResponse200JsonTrustAnchorsItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonTrustAnchorsItems.yaml
    ServiceUpdateApiResponse200JsonCredentialIssuerMetadata:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonCredentialIssuerMetadata.yaml
    ServiceUpdateApiResponse400Json:
      $ref: en/ServiceUpdateApiResponse400Json.yaml
    ServiceUpdateApiResponse401Json:
      $ref: en/ServiceUpdateApiResponse401Json.yaml
    ServiceUpdateApiResponse403Json:
      $ref: en/ServiceUpdateApiResponse403Json.yaml
    ServiceUpdateApiResponse500Json:
      $ref: en/ServiceUpdateApiResponse500Json.yaml
    ServiceDeleteApiResponse400Json:
      $ref: en/ServiceDeleteApiResponse400Json.yaml
    ServiceDeleteApiResponse401Json:
      $ref: en/ServiceDeleteApiResponse401Json.yaml
    ServiceDeleteApiResponse403Json:
      $ref: en/ServiceDeleteApiResponse403Json.yaml
    ServiceDeleteApiResponse500Json:
      $ref: en/ServiceDeleteApiResponse500Json.yaml
    ClientGetApiResponse200Json:
      $ref: en/ClientGetApiResponse200Json.yaml
    ClientGetApiResponse200JsonClientNamesItems:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonClientNamesItems.yaml
    ClientGetApiResponse200JsonDescriptionsItems:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonDescriptionsItems.yaml
    ClientGetApiResponse200JsonLogoUrisItems:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonLogoUrisItems.yaml
    ClientGetApiResponse200JsonTosUrisItems:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonTosUrisItems.yaml
    ClientGetApiResponse200JsonPolicyUrisItems:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonPolicyUrisItems.yaml
    ClientGetApiResponse200JsonClientUrisItems:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonClientUrisItems.yaml
    ClientGetApiResponse200JsonAttributesItems:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonAttributesItems.yaml
    ClientGetApiResponse200JsonExtension:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonExtension.yaml
    ClientGetApiResponse400Json:
      $ref: en/ClientGetApiResponse400Json.yaml
    ClientGetApiResponse401Json:
      $ref: en/ClientGetApiResponse401Json.yaml
    ClientGetApiResponse403Json:
      $ref: en/ClientGetApiResponse403Json.yaml
    ClientGetApiResponse500Json:
      $ref: en/ClientGetApiResponse500Json.yaml
    ClientGetListApiResponse200Json:
      $ref: en/ClientGetListApiResponse200Json.yaml
    ClientGetListApiResponse200JsonClientsItems:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems.yaml
    ClientGetListApiResponse200JsonClientsItemsClientNamesItems:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsClientNamesItems.yaml
    ClientGetListApiResponse200JsonClientsItemsDescriptionsItems:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsDescriptionsItems.yaml
    ClientGetListApiResponse200JsonClientsItemsLogoUrisItems:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsLogoUrisItems.yaml
    ClientGetListApiResponse200JsonClientsItemsTosUrisItems:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsTosUrisItems.yaml
    ClientGetListApiResponse200JsonClientsItemsPolicyUrisItems:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsPolicyUrisItems.yaml
    ClientGetListApiResponse200JsonClientsItemsClientUrisItems:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsClientUrisItems.yaml
    ClientGetListApiResponse200JsonClientsItemsAttributesItems:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsAttributesItems.yaml
    ClientGetListApiResponse200JsonClientsItemsExtension:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsExtension.yaml
    ClientGetListApiResponse400Json:
      $ref: en/ClientGetListApiResponse400Json.yaml
    ClientGetListApiResponse401Json:
      $ref: en/ClientGetListApiResponse401Json.yaml
    ClientGetListApiResponse403Json:
      $ref: en/ClientGetListApiResponse403Json.yaml
    ClientGetListApiResponse500Json:
      $ref: en/ClientGetListApiResponse500Json.yaml
    ClientCreateApiRequestBodyJson:
      $ref: en/ClientCreateApiRequestBodyJson.yaml
    ClientCreateApiRequestBodyJsonClientNamesItems:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonClientNamesItems.yaml
    ClientCreateApiRequestBodyJsonDescriptionsItems:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonDescriptionsItems.yaml
    ClientCreateApiRequestBodyJsonLogoUrisItems:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonLogoUrisItems.yaml
    ClientCreateApiRequestBodyJsonTosUrisItems:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonTosUrisItems.yaml
    ClientCreateApiRequestBodyJsonPolicyUrisItems:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonPolicyUrisItems.yaml
    ClientCreateApiRequestBodyJsonClientUrisItems:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonClientUrisItems.yaml
    ClientCreateApiRequestBodyJsonAttributesItems:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonAttributesItems.yaml
    ClientCreateApiRequestBodyJsonExtension:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonExtension.yaml
    ClientCreateApiResponse200Json:
      $ref: en/ClientCreateApiResponse200Json.yaml
    ClientCreateApiResponse200JsonClientNamesItems:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonClientNamesItems.yaml
    ClientCreateApiResponse200JsonDescriptionsItems:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonDescriptionsItems.yaml
    ClientCreateApiResponse200JsonLogoUrisItems:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonLogoUrisItems.yaml
    ClientCreateApiResponse200JsonTosUrisItems:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonTosUrisItems.yaml
    ClientCreateApiResponse200JsonPolicyUrisItems:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonPolicyUrisItems.yaml
    ClientCreateApiResponse200JsonClientUrisItems:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonClientUrisItems.yaml
    ClientCreateApiResponse200JsonAttributesItems:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonAttributesItems.yaml
    ClientCreateApiResponse200JsonExtension:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonExtension.yaml
    ClientCreateApiResponse400Json:
      $ref: en/ClientCreateApiResponse400Json.yaml
    ClientCreateApiResponse401Json:
      $ref: en/ClientCreateApiResponse401Json.yaml
    ClientCreateApiResponse403Json:
      $ref: en/ClientCreateApiResponse403Json.yaml
    ClientCreateApiResponse500Json:
      $ref: en/ClientCreateApiResponse500Json.yaml
    ClientUpdateApiRequestBodyJson:
      $ref: en/ClientUpdateApiRequestBodyJson.yaml
    ClientUpdateApiRequestBodyJsonClientNamesItems:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonClientNamesItems.yaml
    ClientUpdateApiRequestBodyJsonDescriptionsItems:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonDescriptionsItems.yaml
    ClientUpdateApiRequestBodyJsonLogoUrisItems:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonLogoUrisItems.yaml
    ClientUpdateApiRequestBodyJsonTosUrisItems:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonTosUrisItems.yaml
    ClientUpdateApiRequestBodyJsonPolicyUrisItems:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonPolicyUrisItems.yaml
    ClientUpdateApiRequestBodyJsonClientUrisItems:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonClientUrisItems.yaml
    ClientUpdateApiRequestBodyJsonAttributesItems:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonAttributesItems.yaml
    ClientUpdateApiRequestBodyJsonExtension:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonExtension.yaml
    ClientUpdateApiRequestBody:
      $ref: en/ClientUpdateApiRequestBody.yaml
    ClientUpdateApiRequestBodyClientNamesItems:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyClientNamesItems.yaml
    ClientUpdateApiRequestBodyDescriptionsItems:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyDescriptionsItems.yaml
    ClientUpdateApiRequestBodyLogoUrisItems:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyLogoUrisItems.yaml
    ClientUpdateApiRequestBodyTosUrisItems:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyTosUrisItems.yaml
    ClientUpdateApiRequestBodyPolicyUrisItems:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyPolicyUrisItems.yaml
    ClientUpdateApiRequestBodyClientUrisItems:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyClientUrisItems.yaml
    ClientUpdateApiRequestBodyAttributesItems:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyAttributesItems.yaml
    ClientUpdateApiRequestBodyExtension:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyExtension.yaml
    ClientUpdateApiResponse200Json:
      $ref: en/ClientUpdateApiResponse200Json.yaml
    ClientUpdateApiResponse200JsonClientNamesItems:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonClientNamesItems.yaml
    ClientUpdateApiResponse200JsonDescriptionsItems:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonDescriptionsItems.yaml
    ClientUpdateApiResponse200JsonLogoUrisItems:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonLogoUrisItems.yaml
    ClientUpdateApiResponse200JsonTosUrisItems:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonTosUrisItems.yaml
    ClientUpdateApiResponse200JsonPolicyUrisItems:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonPolicyUrisItems.yaml
    ClientUpdateApiResponse200JsonClientUrisItems:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonClientUrisItems.yaml
    ClientUpdateApiResponse200JsonAttributesItems:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonAttributesItems.yaml
    ClientUpdateApiResponse200JsonExtension:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonExtension.yaml
    ClientUpdateApiResponse400Json:
      $ref: en/ClientUpdateApiResponse400Json.yaml
    ClientUpdateApiResponse401Json:
      $ref: en/ClientUpdateApiResponse401Json.yaml
    ClientUpdateApiResponse403Json:
      $ref: en/ClientUpdateApiResponse403Json.yaml
    ClientUpdateApiResponse500Json:
      $ref: en/ClientUpdateApiResponse500Json.yaml
    ClientDeleteApiResponse400Json:
      $ref: en/ClientDeleteApiResponse400Json.yaml
    ClientDeleteApiResponse401Json:
      $ref: en/ClientDeleteApiResponse401Json.yaml
    ClientDeleteApiResponse403Json:
      $ref: en/ClientDeleteApiResponse403Json.yaml
    ClientDeleteApiResponse500Json:
      $ref: en/ClientDeleteApiResponse500Json.yaml
    ClientFlagUpdateApiRequestBodyJson:
      $ref: en/ClientFlagUpdateApiRequestBodyJson.yaml
    ClientFlagUpdateApiRequestBody:
      $ref: en/ClientFlagUpdateApiRequestBody.yaml
    ClientFlagUpdateApiResponse200Json:
      $ref: en/ClientFlagUpdateApiResponse200Json.yaml
    ClientFlagUpdateApiResponse400Json:
      $ref: en/ClientFlagUpdateApiResponse400Json.yaml
    ClientFlagUpdateApiResponse401Json:
      $ref: en/ClientFlagUpdateApiResponse401Json.yaml
    ClientFlagUpdateApiResponse403Json:
      $ref: en/ClientFlagUpdateApiResponse403Json.yaml
    ClientFlagUpdateApiResponse500Json:
      $ref: en/ClientFlagUpdateApiResponse500Json.yaml
    ClientSecretRefreshApiResponse200Json:
      $ref: en/ClientSecretRefreshApiResponse200Json.yaml
    ClientSecretRefreshApiResponse400Json:
      $ref: en/ClientSecretRefreshApiResponse400Json.yaml
    ClientSecretRefreshApiResponse401Json:
      $ref: en/ClientSecretRefreshApiResponse401Json.yaml
    ClientSecretRefreshApiResponse403Json:
      $ref: en/ClientSecretRefreshApiResponse403Json.yaml
    ClientSecretRefreshApiResponse500Json:
      $ref: en/ClientSecretRefreshApiResponse500Json.yaml
    ClientSecretUpdateApiRequestBodyJson:
      $ref: en/ClientSecretUpdateApiRequestBodyJson.yaml
    ClientSecretUpdateApiRequestBody:
      $ref: en/ClientSecretUpdateApiRequestBody.yaml
    ClientSecretUpdateApiResponse200Json:
      $ref: en/ClientSecretUpdateApiResponse200Json.yaml
    ClientSecretUpdateApiResponse400Json:
      $ref: en/ClientSecretUpdateApiResponse400Json.yaml
    ClientSecretUpdateApiResponse401Json:
      $ref: en/ClientSecretUpdateApiResponse401Json.yaml
    ClientSecretUpdateApiResponse403Json:
      $ref: en/ClientSecretUpdateApiResponse403Json.yaml
    ClientSecretUpdateApiResponse500Json:
      $ref: en/ClientSecretUpdateApiResponse500Json.yaml
    ClientAuthorizationGetListApiResponse200Json:
      $ref: en/ClientAuthorizationGetListApiResponse200Json.yaml
    ClientAuthorizationGetListApiResponse200JsonClientsItems:
      $ref: en/ClientAuthorizationGetListApiResponse200Json/ClientAuthorizationGetListApiResponse200JsonClientsItems.yaml
    ClientAuthorizationGetListApiResponse200JsonClientsItemsClientNamesItems:
      $ref: en/ClientAuthorizationGetListApiResponse200Json/ClientAuthorizationGetListApiResponse200JsonClientsItems/ClientAuthorizationGetListApiResponse200JsonClientsItemsClientNamesItems.yaml
    ClientAuthorizationGetListApiResponse200JsonClientsItemsDescriptionsItems:
      $ref: en/ClientAuthorizationGetListApiResponse200Json/ClientAuthorizationGetListApiResponse200JsonClientsItems/ClientAuthorizationGetListApiResponse200JsonClientsItemsDescriptionsItems.yaml
    ClientAuthorizationGetListApiResponse400Json:
      $ref: en/ClientAuthorizationGetListApiResponse400Json.yaml
    ClientAuthorizationGetListApiResponse401Json:
      $ref: en/ClientAuthorizationGetListApiResponse401Json.yaml
    ClientAuthorizationGetListApiResponse403Json:
      $ref: en/ClientAuthorizationGetListApiResponse403Json.yaml
    ClientAuthorizationGetListApiResponse500Json:
      $ref: en/ClientAuthorizationGetListApiResponse500Json.yaml
    ClientAuthorizationUpdateApiRequestBodyJson:
      $ref: en/ClientAuthorizationUpdateApiRequestBodyJson.yaml
    ClientAuthorizationUpdateApiRequestBody:
      $ref: en/ClientAuthorizationUpdateApiRequestBody.yaml
    ClientAuthorizationUpdateApiResponse200Json:
      $ref: en/ClientAuthorizationUpdateApiResponse200Json.yaml
    ClientAuthorizationUpdateApiResponse400Json:
      $ref: en/ClientAuthorizationUpdateApiResponse400Json.yaml
    ClientAuthorizationUpdateApiResponse401Json:
      $ref: en/ClientAuthorizationUpdateApiResponse401Json.yaml
    ClientAuthorizationUpdateApiResponse403Json:
      $ref: en/ClientAuthorizationUpdateApiResponse403Json.yaml
    ClientAuthorizationUpdateApiResponse500Json:
      $ref: en/ClientAuthorizationUpdateApiResponse500Json.yaml
    ClientAuthorizationDeleteApiResponse200Json:
      $ref: en/ClientAuthorizationDeleteApiResponse200Json.yaml
    ClientAuthorizationDeleteApiResponse400Json:
      $ref: en/ClientAuthorizationDeleteApiResponse400Json.yaml
    ClientAuthorizationDeleteApiResponse401Json:
      $ref: en/ClientAuthorizationDeleteApiResponse401Json.yaml
    ClientAuthorizationDeleteApiResponse403Json:
      $ref: en/ClientAuthorizationDeleteApiResponse403Json.yaml
    ClientAuthorizationDeleteApiResponse500Json:
      $ref: en/ClientAuthorizationDeleteApiResponse500Json.yaml
    ClientGrantedScopesGetApiResponse200Json:
      $ref: en/ClientGrantedScopesGetApiResponse200Json.yaml
    ClientGrantedScopesGetApiResponse400Json:
      $ref: en/ClientGrantedScopesGetApiResponse400Json.yaml
    ClientGrantedScopesGetApiResponse401Json:
      $ref: en/ClientGrantedScopesGetApiResponse401Json.yaml
    ClientGrantedScopesGetApiResponse403Json:
      $ref: en/ClientGrantedScopesGetApiResponse403Json.yaml
    ClientGrantedScopesGetApiResponse500Json:
      $ref: en/ClientGrantedScopesGetApiResponse500Json.yaml
    ClientGrantedScopesDeleteApiResponse200Json:
      $ref: en/ClientGrantedScopesDeleteApiResponse200Json.yaml
    ClientGrantedScopesDeleteApiResponse400Json:
      $ref: en/ClientGrantedScopesDeleteApiResponse400Json.yaml
    ClientGrantedScopesDeleteApiResponse401Json:
      $ref: en/ClientGrantedScopesDeleteApiResponse401Json.yaml
    ClientGrantedScopesDeleteApiResponse403Json:
      $ref: en/ClientGrantedScopesDeleteApiResponse403Json.yaml
    ClientGrantedScopesDeleteApiResponse500Json:
      $ref: en/ClientGrantedScopesDeleteApiResponse500Json.yaml
    AuthAuthorizationApiRequestBodyJson:
      $ref: en/AuthAuthorizationApiRequestBodyJson.yaml
    AuthAuthorizationApiRequestBody:
      $ref: en/AuthAuthorizationApiRequestBody.yaml
    AuthAuthorizationApiResponse200Json:
      $ref: en/AuthAuthorizationApiResponse200Json.yaml
    AuthAuthorizationApiResponse200JsonClient:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonClient.yaml
    AuthAuthorizationApiResponse200JsonClientClientNamesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonClient/AuthAuthorizationApiResponse200JsonClientClientNamesItems.yaml
    AuthAuthorizationApiResponse200JsonClientDescriptionsItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonClient/AuthAuthorizationApiResponse200JsonClientDescriptionsItems.yaml
    AuthAuthorizationApiResponse200JsonClientLogoUrisItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonClient/AuthAuthorizationApiResponse200JsonClientLogoUrisItems.yaml
    AuthAuthorizationApiResponse200JsonClientTosUrisItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonClient/AuthAuthorizationApiResponse200JsonClientTosUrisItems.yaml
    AuthAuthorizationApiResponse200JsonClientPolicyUrisItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonClient/AuthAuthorizationApiResponse200JsonClientPolicyUrisItems.yaml
    AuthAuthorizationApiResponse200JsonService:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService.yaml
    AuthAuthorizationApiResponse200JsonServiceMetadataItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceMetadataItems.yaml
    AuthAuthorizationApiResponse200JsonServiceMtlsEndpointAliasesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceMtlsEndpointAliasesItems.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedScopesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedScopesItems.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedScopesItemsDescriptionsItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedScopesItems/AuthAuthorizationApiResponse200JsonServiceSupportedScopesItemsDescriptionsItems.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedScopesItemsAttributesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedScopesItems/AuthAuthorizationApiResponse200JsonServiceSupportedScopesItemsAttributesItems.yaml
    AuthAuthorizationApiResponse200JsonServiceAttributesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceAttributesItems.yaml
    AuthAuthorizationApiResponse200JsonServiceHsksItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceHsksItems.yaml
    AuthAuthorizationApiResponse200JsonServiceTrustAnchorsItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceTrustAnchorsItems.yaml
    AuthAuthorizationApiResponse200JsonServiceCredentialIssuerMetadata:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceCredentialIssuerMetadata.yaml
    AuthAuthorizationApiResponse200JsonScopesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonScopesItems.yaml
    AuthAuthorizationApiResponse200JsonScopesItemsDescriptionsItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonScopesItems/AuthAuthorizationApiResponse200JsonScopesItemsDescriptionsItems.yaml
    AuthAuthorizationApiResponse200JsonScopesItemsAttributesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonScopesItems/AuthAuthorizationApiResponse200JsonScopesItemsAttributesItems.yaml
    AuthAuthorizationApiResponse200JsonAuthorizationDetails:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonAuthorizationDetails.yaml
    AuthAuthorizationApiResponse200JsonAuthorizationDetailsElementsItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonAuthorizationDetails/AuthAuthorizationApiResponse200JsonAuthorizationDetailsElementsItems.yaml
    AuthAuthorizationApiResponse200JsonDynamicScopesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonDynamicScopesItems.yaml
    AuthAuthorizationApiResponse200JsonGrant:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonGrant.yaml
    AuthAuthorizationApiResponse200JsonGrantScopesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonGrant/AuthAuthorizationApiResponse200JsonGrantScopesItems.yaml
    AuthAuthorizationApiResponse200JsonGrantAuthorizationDetails:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonGrant/AuthAuthorizationApiResponse200JsonGrantAuthorizationDetails.yaml
    AuthAuthorizationApiResponse200JsonGrantAuthorizationDetailsElementsItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonGrant/AuthAuthorizationApiResponse200JsonGrantAuthorizationDetails/AuthAuthorizationApiResponse200JsonGrantAuthorizationDetailsElementsItems.yaml
    AuthAuthorizationApiResponse200JsonCredentialOfferInfo:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonCredentialOfferInfo.yaml
    AuthAuthorizationApiResponse200JsonCredentialOfferInfoPropertiesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonCredentialOfferInfo/AuthAuthorizationApiResponse200JsonCredentialOfferInfoPropertiesItems.yaml
    AuthAuthorizationApiResponse400Json:
      $ref: en/AuthAuthorizationApiResponse400Json.yaml
    AuthAuthorizationApiResponse401Json:
      $ref: en/AuthAuthorizationApiResponse401Json.yaml
    AuthAuthorizationApiResponse403Json:
      $ref: en/AuthAuthorizationApiResponse403Json.yaml
    AuthAuthorizationApiResponse500Json:
      $ref: en/AuthAuthorizationApiResponse500Json.yaml
    AuthAuthorizationFailApiRequestBodyJson:
      $ref: en/AuthAuthorizationFailApiRequestBodyJson.yaml
    AuthAuthorizationFailApiRequestBody:
      $ref: en/AuthAuthorizationFailApiRequestBody.yaml
    AuthAuthorizationFailApiResponse200Json:
      $ref: en/AuthAuthorizationFailApiResponse200Json.yaml
    AuthAuthorizationFailApiResponse400Json:
      $ref: en/AuthAuthorizationFailApiResponse400Json.yaml
    AuthAuthorizationFailApiResponse401Json:
      $ref: en/AuthAuthorizationFailApiResponse401Json.yaml
    AuthAuthorizationFailApiResponse403Json:
      $ref: en/AuthAuthorizationFailApiResponse403Json.yaml
    AuthAuthorizationFailApiResponse500Json:
      $ref: en/AuthAuthorizationFailApiResponse500Json.yaml
    AuthAuthorizationIssueApiRequestBodyJson:
      $ref: en/AuthAuthorizationIssueApiRequestBodyJson.yaml
    AuthAuthorizationIssueApiRequestBodyJsonPropertiesItems:
      $ref: en/AuthAuthorizationIssueApiRequestBodyJson/AuthAuthorizationIssueApiRequestBodyJsonPropertiesItems.yaml
    AuthAuthorizationIssueApiRequestBodyJsonAuthorizationDetails:
      $ref: en/AuthAuthorizationIssueApiRequestBodyJson/AuthAuthorizationIssueApiRequestBodyJsonAuthorizationDetails.yaml
    AuthAuthorizationIssueApiRequestBodyJsonAuthorizationDetailsElementsItems:
      $ref: en/AuthAuthorizationIssueApiRequestBodyJson/AuthAuthorizationIssueApiRequestBodyJsonAuthorizationDetails/AuthAuthorizationIssueApiRequestBodyJsonAuthorizationDetailsElementsItems.yaml
    AuthAuthorizationIssueApiRequestBody:
      $ref: en/AuthAuthorizationIssueApiRequestBody.yaml
    AuthAuthorizationIssueApiRequestBodyPropertiesItems:
      $ref: en/AuthAuthorizationIssueApiRequestBody/AuthAuthorizationIssueApiRequestBodyPropertiesItems.yaml
    AuthAuthorizationIssueApiRequestBodyAuthorizationDetails:
      $ref: en/AuthAuthorizationIssueApiRequestBody/AuthAuthorizationIssueApiRequestBodyAuthorizationDetails.yaml
    AuthAuthorizationIssueApiRequestBodyAuthorizationDetailsElementsItems:
      $ref: en/AuthAuthorizationIssueApiRequestBody/AuthAuthorizationIssueApiRequestBodyAuthorizationDetails/AuthAuthorizationIssueApiRequestBodyAuthorizationDetailsElementsItems.yaml
    AuthAuthorizationIssueApiResponse200Json:
      $ref: en/AuthAuthorizationIssueApiResponse200Json.yaml
    AuthAuthorizationIssueApiResponse400Json:
      $ref: en/AuthAuthorizationIssueApiResponse400Json.yaml
    AuthAuthorizationIssueApiResponse401Json:
      $ref: en/AuthAuthorizationIssueApiResponse401Json.yaml
    AuthAuthorizationIssueApiResponse403Json:
      $ref: en/AuthAuthorizationIssueApiResponse403Json.yaml
    AuthAuthorizationIssueApiResponse500Json:
      $ref: en/AuthAuthorizationIssueApiResponse500Json.yaml
    PushedAuthReqApiRequestBodyJson:
      $ref: en/PushedAuthReqApiRequestBodyJson.yaml
    PushedAuthReqApiRequestBody:
      $ref: en/PushedAuthReqApiRequestBody.yaml
    PushedAuthReqApiResponse200Json:
      $ref: en/PushedAuthReqApiResponse200Json.yaml
    PushedAuthReqApiResponse400Json:
      $ref: en/PushedAuthReqApiResponse400Json.yaml
    PushedAuthReqApiResponse401Json:
      $ref: en/PushedAuthReqApiResponse401Json.yaml
    PushedAuthReqApiResponse403Json:
      $ref: en/PushedAuthReqApiResponse403Json.yaml
    PushedAuthReqApiResponse500Json:
      $ref: en/PushedAuthReqApiResponse500Json.yaml
    AuthTokenApiRequestBodyJson:
      $ref: en/AuthTokenApiRequestBodyJson.yaml
    AuthTokenApiRequestBody:
      $ref: en/AuthTokenApiRequestBody.yaml
    AuthTokenApiResponse200Json:
      $ref: en/AuthTokenApiResponse200Json.yaml
    AuthTokenApiResponse200JsonPropertiesItems:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonPropertiesItems.yaml
    AuthTokenApiResponse200JsonAuthorizationDetails:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonAuthorizationDetails.yaml
    AuthTokenApiResponse200JsonAuthorizationDetailsElementsItems:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonAuthorizationDetails/AuthTokenApiResponse200JsonAuthorizationDetailsElementsItems.yaml
    AuthTokenApiResponse200JsonServiceAttributesItems:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonServiceAttributesItems.yaml
    AuthTokenApiResponse200JsonClientAttributesItems:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonClientAttributesItems.yaml
    AuthTokenApiResponse200JsonSubjectTokenInfo:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonSubjectTokenInfo.yaml
    AuthTokenApiResponse200JsonSubjectTokenInfoPropertiesItems:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonSubjectTokenInfo/AuthTokenApiResponse200JsonSubjectTokenInfoPropertiesItems.yaml
    AuthTokenApiResponse200JsonSubjectTokenInfoAuthorizationDetails:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonSubjectTokenInfo/AuthTokenApiResponse200JsonSubjectTokenInfoAuthorizationDetails.yaml
    AuthTokenApiResponse200JsonActorTokenInfo:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonActorTokenInfo.yaml
    AuthTokenApiResponse200JsonActorTokenInfoPropertiesItems:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonActorTokenInfo/AuthTokenApiResponse200JsonActorTokenInfoPropertiesItems.yaml
    AuthTokenApiResponse200JsonActorTokenInfoAuthorizationDetails:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonActorTokenInfo/AuthTokenApiResponse200JsonActorTokenInfoAuthorizationDetails.yaml
    AuthTokenApiResponse400Json:
      $ref: en/AuthTokenApiResponse400Json.yaml
    AuthTokenApiResponse401Json:
      $ref: en/AuthTokenApiResponse401Json.yaml
    AuthTokenApiResponse403Json:
      $ref: en/AuthTokenApiResponse403Json.yaml
    AuthTokenApiResponse500Json:
      $ref: en/AuthTokenApiResponse500Json.yaml
    AuthTokenFailApiRequestBodyJson:
      $ref: en/AuthTokenFailApiRequestBodyJson.yaml
    AuthTokenFailApiRequestBody:
      $ref: en/AuthTokenFailApiRequestBody.yaml
    AuthTokenFailApiResponse200Json:
      $ref: en/AuthTokenFailApiResponse200Json.yaml
    AuthTokenFailApiResponse400Json:
      $ref: en/AuthTokenFailApiResponse400Json.yaml
    AuthTokenFailApiResponse401Json:
      $ref: en/AuthTokenFailApiResponse401Json.yaml
    AuthTokenFailApiResponse403Json:
      $ref: en/AuthTokenFailApiResponse403Json.yaml
    AuthTokenFailApiResponse500Json:
      $ref: en/AuthTokenFailApiResponse500Json.yaml
    AuthTokenIssueApiRequestBodyJson:
      $ref: en/AuthTokenIssueApiRequestBodyJson.yaml
    AuthTokenIssueApiRequestBodyJsonPropertiesItems:
      $ref: en/AuthTokenIssueApiRequestBodyJson/AuthTokenIssueApiRequestBodyJsonPropertiesItems.yaml
    AuthTokenIssueApiRequestBody:
      $ref: en/AuthTokenIssueApiRequestBody.yaml
    AuthTokenIssueApiRequestBodyPropertiesItems:
      $ref: en/AuthTokenIssueApiRequestBody/AuthTokenIssueApiRequestBodyPropertiesItems.yaml
    AuthTokenIssueApiResponse200Json:
      $ref: en/AuthTokenIssueApiResponse200Json.yaml
    AuthTokenIssueApiResponse200JsonPropertiesItems:
      $ref: en/AuthTokenIssueApiResponse200Json/AuthTokenIssueApiResponse200JsonPropertiesItems.yaml
    AuthTokenIssueApiResponse200JsonAuthorizationDetails:
      $ref: en/AuthTokenIssueApiResponse200Json/AuthTokenIssueApiResponse200JsonAuthorizationDetails.yaml
    AuthTokenIssueApiResponse200JsonAuthorizationDetailsElementsItems:
      $ref: en/AuthTokenIssueApiResponse200Json/AuthTokenIssueApiResponse200JsonAuthorizationDetails/AuthTokenIssueApiResponse200JsonAuthorizationDetailsElementsItems.yaml
    AuthTokenIssueApiResponse200JsonServiceAttributesItems:
      $ref: en/AuthTokenIssueApiResponse200Json/AuthTokenIssueApiResponse200JsonServiceAttributesItems.yaml
    AuthTokenIssueApiResponse200JsonClientAttributesItems:
      $ref: en/AuthTokenIssueApiResponse200Json/AuthTokenIssueApiResponse200JsonClientAttributesItems.yaml
    AuthTokenIssueApiResponse400Json:
      $ref: en/AuthTokenIssueApiResponse400Json.yaml
    AuthTokenIssueApiResponse401Json:
      $ref: en/AuthTokenIssueApiResponse401Json.yaml
    AuthTokenIssueApiResponse403Json:
      $ref: en/AuthTokenIssueApiResponse403Json.yaml
    AuthTokenIssueApiResponse500Json:
      $ref: en/AuthTokenIssueApiResponse500Json.yaml
    AuthIntrospectionApiRequestBodyJson:
      $ref: en/AuthIntrospectionApiRequestBodyJson.yaml
    AuthIntrospectionApiRequestBodyJsonHeadersItems:
      $ref: en/AuthIntrospectionApiRequestBodyJson/AuthIntrospectionApiRequestBodyJsonHeadersItems.yaml
    AuthIntrospectionApiRequestBody:
      $ref: en/AuthIntrospectionApiRequestBody.yaml
    AuthIntrospectionApiRequestBodyHeadersItems:
      $ref: en/AuthIntrospectionApiRequestBody/AuthIntrospectionApiRequestBodyHeadersItems.yaml
    AuthIntrospectionApiResponse200Json:
      $ref: en/AuthIntrospectionApiResponse200Json.yaml
    AuthIntrospectionApiResponse200JsonPropertiesItems:
      $ref: en/AuthIntrospectionApiResponse200Json/AuthIntrospectionApiResponse200JsonPropertiesItems.yaml
    AuthIntrospectionApiResponse200JsonAuthorizationDetails:
      $ref: en/AuthIntrospectionApiResponse200Json/AuthIntrospectionApiResponse200JsonAuthorizationDetails.yaml
    AuthIntrospectionApiResponse200JsonAuthorizationDetailsElementsItems:
      $ref: en/AuthIntrospectionApiResponse200Json/AuthIntrospectionApiResponse200JsonAuthorizationDetails/AuthIntrospectionApiResponse200JsonAuthorizationDetailsElementsItems.yaml
    AuthIntrospectionApiResponse200JsonServiceAttributesItems:
      $ref: en/AuthIntrospectionApiResponse200Json/AuthIntrospectionApiResponse200JsonServiceAttributesItems.yaml
    AuthIntrospectionApiResponse200JsonClientAttributesItems:
      $ref: en/AuthIntrospectionApiResponse200Json/AuthIntrospectionApiResponse200JsonClientAttributesItems.yaml
    AuthIntrospectionApiResponse200JsonScopeDetailsItems:
      $ref: en/AuthIntrospectionApiResponse200Json/AuthIntrospectionApiResponse200JsonScopeDetailsItems.yaml
    AuthIntrospectionApiResponse200JsonScopeDetailsItemsDescriptionsItems:
      $ref: en/AuthIntrospectionApiResponse200Json/AuthIntrospectionApiResponse200JsonScopeDetailsItems/AuthIntrospectionApiResponse200JsonScopeDetailsItemsDescriptionsItems.yaml
    AuthIntrospectionApiResponse200JsonScopeDetailsItemsAttributesItems:
      $ref: en/AuthIntrospectionApiResponse200Json/AuthIntrospectionApiResponse200JsonScopeDetailsItems/AuthIntrospectionApiResponse200JsonScopeDetailsItemsAttributesItems.yaml
    AuthIntrospectionApiResponse200JsonGrant:
      $ref: en/AuthIntrospectionApiResponse200Json/AuthIntrospectionApiResponse200JsonGrant.yaml
    AuthIntrospectionApiResponse200JsonGrantScopesItems:
      $ref: en/AuthIntrospectionApiResponse200Json/AuthIntrospectionApiResponse200JsonGrant/AuthIntrospectionApiResponse200JsonGrantScopesItems.yaml
    AuthIntrospectionApiResponse200JsonGrantAuthorizationDetails:
      $ref: en/AuthIntrospectionApiResponse200Json/AuthIntrospectionApiResponse200JsonGrant/AuthIntrospectionApiResponse200JsonGrantAuthorizationDetails.yaml
    AuthIntrospectionApiResponse200JsonGrantAuthorizationDetailsElementsItems:
      $ref: en/AuthIntrospectionApiResponse200Json/AuthIntrospectionApiResponse200JsonGrant/AuthIntrospectionApiResponse200JsonGrantAuthorizationDetails/AuthIntrospectionApiResponse200JsonGrantAuthorizationDetailsElementsItems.yaml
    AuthIntrospectionApiResponse400Json:
      $ref: en/AuthIntrospectionApiResponse400Json.yaml
    AuthIntrospectionApiResponse401Json:
      $ref: en/AuthIntrospectionApiResponse401Json.yaml
    AuthIntrospectionApiResponse403Json:
      $ref: en/AuthIntrospectionApiResponse403Json.yaml
    AuthIntrospectionApiResponse500Json:
      $ref: en/AuthIntrospectionApiResponse500Json.yaml
    AuthIntrospectionStandardApiRequestBodyJson:
      $ref: en/AuthIntrospectionStandardApiRequestBodyJson.yaml
    AuthIntrospectionStandardApiRequestBody:
      $ref: en/AuthIntrospectionStandardApiRequestBody.yaml
    AuthIntrospectionStandardApiResponse200Json:
      $ref: en/AuthIntrospectionStandardApiResponse200Json.yaml
    AuthIntrospectionStandardApiResponse400Json:
      $ref: en/AuthIntrospectionStandardApiResponse400Json.yaml
    AuthIntrospectionStandardApiResponse401Json:
      $ref: en/AuthIntrospectionStandardApiResponse401Json.yaml
    AuthIntrospectionStandardApiResponse403Json:
      $ref: en/AuthIntrospectionStandardApiResponse403Json.yaml
    AuthIntrospectionStandardApiResponse500Json:
      $ref: en/AuthIntrospectionStandardApiResponse500Json.yaml
    AuthRevocationApiRequestBodyJson:
      $ref: en/AuthRevocationApiRequestBodyJson.yaml
    AuthRevocationApiRequestBody:
      $ref: en/AuthRevocationApiRequestBody.yaml
    AuthRevocationApiResponse200Json:
      $ref: en/AuthRevocationApiResponse200Json.yaml
    AuthRevocationApiResponse400Json:
      $ref: en/AuthRevocationApiResponse400Json.yaml
    AuthRevocationApiResponse401Json:
      $ref: en/AuthRevocationApiResponse401Json.yaml
    AuthRevocationApiResponse403Json:
      $ref: en/AuthRevocationApiResponse403Json.yaml
    AuthRevocationApiResponse500Json:
      $ref: en/AuthRevocationApiResponse500Json.yaml
    AuthUserinfoApiRequestBodyJson:
      $ref: en/AuthUserinfoApiRequestBodyJson.yaml
    AuthUserinfoApiRequestBodyJsonHeadersItems:
      $ref: en/AuthUserinfoApiRequestBodyJson/AuthUserinfoApiRequestBodyJsonHeadersItems.yaml
    AuthUserinfoApiRequestBody:
      $ref: en/AuthUserinfoApiRequestBody.yaml
    AuthUserinfoApiRequestBodyHeadersItems:
      $ref: en/AuthUserinfoApiRequestBody/AuthUserinfoApiRequestBodyHeadersItems.yaml
    AuthUserinfoApiResponse200Json:
      $ref: en/AuthUserinfoApiResponse200Json.yaml
    AuthUserinfoApiResponse200JsonPropertiesItems:
      $ref: en/AuthUserinfoApiResponse200Json/AuthUserinfoApiResponse200JsonPropertiesItems.yaml
    AuthUserinfoApiResponse200JsonServiceAttributesItems:
      $ref: en/AuthUserinfoApiResponse200Json/AuthUserinfoApiResponse200JsonServiceAttributesItems.yaml
    AuthUserinfoApiResponse200JsonClientAttributesItems:
      $ref: en/AuthUserinfoApiResponse200Json/AuthUserinfoApiResponse200JsonClientAttributesItems.yaml
    AuthUserinfoApiResponse400Json:
      $ref: en/AuthUserinfoApiResponse400Json.yaml
    AuthUserinfoApiResponse401Json:
      $ref: en/AuthUserinfoApiResponse401Json.yaml
    AuthUserinfoApiResponse403Json:
      $ref: en/AuthUserinfoApiResponse403Json.yaml
    AuthUserinfoApiResponse500Json:
      $ref: en/AuthUserinfoApiResponse500Json.yaml
    AuthUserinfoIssueApiRequestBodyJson:
      $ref: en/AuthUserinfoIssueApiRequestBodyJson.yaml
    AuthUserinfoIssueApiRequestBodyJsonHeadersItems:
      $ref: en/AuthUserinfoIssueApiRequestBodyJson/AuthUserinfoIssueApiRequestBodyJsonHeadersItems.yaml
    AuthUserinfoIssueApiRequestBody:
      $ref: en/AuthUserinfoIssueApiRequestBody.yaml
    AuthUserinfoIssueApiRequestBodyHeadersItems:
      $ref: en/AuthUserinfoIssueApiRequestBody/AuthUserinfoIssueApiRequestBodyHeadersItems.yaml
    AuthUserinfoIssueApiResponse200Json:
      $ref: en/AuthUserinfoIssueApiResponse200Json.yaml
    AuthUserinfoIssueApiResponse400Json:
      $ref: en/AuthUserinfoIssueApiResponse400Json.yaml
    AuthUserinfoIssueApiResponse401Json:
      $ref: en/AuthUserinfoIssueApiResponse401Json.yaml
    AuthUserinfoIssueApiResponse403Json:
      $ref: en/AuthUserinfoIssueApiResponse403Json.yaml
    AuthUserinfoIssueApiResponse500Json:
      $ref: en/AuthUserinfoIssueApiResponse500Json.yaml
    IdtokenReissueApiRequestBodyJson:
      $ref: en/IdtokenReissueApiRequestBodyJson.yaml
    IdtokenReissueApiResponse200Json:
      $ref: en/IdtokenReissueApiResponse200Json.yaml
    IdtokenReissueApiResponse400Json:
      $ref: en/IdtokenReissueApiResponse400Json.yaml
    IdtokenReissueApiResponse401Json:
      $ref: en/IdtokenReissueApiResponse401Json.yaml
    IdtokenReissueApiResponse403Json:
      $ref: en/IdtokenReissueApiResponse403Json.yaml
    IdtokenReissueApiResponse500Json:
      $ref: en/IdtokenReissueApiResponse500Json.yaml
    GrantMApiRequestBodyJson:
      $ref: en/GrantMApiRequestBodyJson.yaml
    GrantMApiResponse200Json:
      $ref: en/GrantMApiResponse200Json.yaml
    GrantMApiResponse400Json:
      $ref: en/GrantMApiResponse400Json.yaml
    GrantMApiResponse401Json:
      $ref: en/GrantMApiResponse401Json.yaml
    GrantMApiResponse403Json:
      $ref: en/GrantMApiResponse403Json.yaml
    GrantMApiResponse500Json:
      $ref: en/GrantMApiResponse500Json.yaml
    ServiceJwksGetApiResponse200Json:
      $ref: en/ServiceJwksGetApiResponse200Json.yaml
    ServiceJwksGetApiResponse400Json:
      $ref: en/ServiceJwksGetApiResponse400Json.yaml
    ServiceJwksGetApiResponse401Json:
      $ref: en/ServiceJwksGetApiResponse401Json.yaml
    ServiceJwksGetApiResponse403Json:
      $ref: en/ServiceJwksGetApiResponse403Json.yaml
    ServiceJwksGetApiResponse500Json:
      $ref: en/ServiceJwksGetApiResponse500Json.yaml
    ServiceConfigurationApiResponse400Json:
      $ref: en/ServiceConfigurationApiResponse400Json.yaml
    ServiceConfigurationApiResponse401Json:
      $ref: en/ServiceConfigurationApiResponse401Json.yaml
    ServiceConfigurationApiResponse403Json:
      $ref: en/ServiceConfigurationApiResponse403Json.yaml
    ServiceConfigurationApiResponse500Json:
      $ref: en/ServiceConfigurationApiResponse500Json.yaml
    ClientRegistrationApiRequestBodyJson:
      $ref: en/ClientRegistrationApiRequestBodyJson.yaml
    ClientRegistrationApiRequestBodyJsonAllOf0:
      $ref: en/ClientRegistrationApiRequestBodyJson/ClientRegistrationApiRequestBodyJsonAllOf0.yaml
    ClientRegistrationApiResponse200Json:
      $ref: en/ClientRegistrationApiResponse200Json.yaml
    ClientRegistrationApiResponse200JsonClient:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient.yaml
    ClientRegistrationApiResponse200JsonClientClientNamesItems:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientClientNamesItems.yaml
    ClientRegistrationApiResponse200JsonClientDescriptionsItems:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientDescriptionsItems.yaml
    ClientRegistrationApiResponse200JsonClientLogoUrisItems:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientLogoUrisItems.yaml
    ClientRegistrationApiResponse200JsonClientTosUrisItems:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientTosUrisItems.yaml
    ClientRegistrationApiResponse200JsonClientPolicyUrisItems:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientPolicyUrisItems.yaml
    ClientRegistrationApiResponse200JsonClientClientUrisItems:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientClientUrisItems.yaml
    ClientRegistrationApiResponse200JsonClientAttributesItems:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientAttributesItems.yaml
    ClientRegistrationApiResponse200JsonClientExtension:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientExtension.yaml
    ClientRegistrationApiResponse400Json:
      $ref: en/ClientRegistrationApiResponse400Json.yaml
    ClientRegistrationApiResponse401Json:
      $ref: en/ClientRegistrationApiResponse401Json.yaml
    ClientRegistrationApiResponse403Json:
      $ref: en/ClientRegistrationApiResponse403Json.yaml
    ClientRegistrationApiResponse500Json:
      $ref: en/ClientRegistrationApiResponse500Json.yaml
    ClientRegistrationGetApiRequestBodyJson:
      $ref: en/ClientRegistrationGetApiRequestBodyJson.yaml
    ClientRegistrationGetApiRequestBodyJsonAllOf0:
      $ref: en/ClientRegistrationGetApiRequestBodyJson/ClientRegistrationGetApiRequestBodyJsonAllOf0.yaml
    ClientRegistrationGetApiResponse200Json:
      $ref: en/ClientRegistrationGetApiResponse200Json.yaml
    ClientRegistrationGetApiResponse200JsonClient:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient.yaml
    ClientRegistrationGetApiResponse200JsonClientClientNamesItems:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientClientNamesItems.yaml
    ClientRegistrationGetApiResponse200JsonClientDescriptionsItems:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientDescriptionsItems.yaml
    ClientRegistrationGetApiResponse200JsonClientLogoUrisItems:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientLogoUrisItems.yaml
    ClientRegistrationGetApiResponse200JsonClientTosUrisItems:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientTosUrisItems.yaml
    ClientRegistrationGetApiResponse200JsonClientPolicyUrisItems:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientPolicyUrisItems.yaml
    ClientRegistrationGetApiResponse200JsonClientClientUrisItems:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientClientUrisItems.yaml
    ClientRegistrationGetApiResponse200JsonClientAttributesItems:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientAttributesItems.yaml
    ClientRegistrationGetApiResponse200JsonClientExtension:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientExtension.yaml
    ClientRegistrationGetApiResponse400Json:
      $ref: en/ClientRegistrationGetApiResponse400Json.yaml
    ClientRegistrationGetApiResponse401Json:
      $ref: en/ClientRegistrationGetApiResponse401Json.yaml
    ClientRegistrationGetApiResponse403Json:
      $ref: en/ClientRegistrationGetApiResponse403Json.yaml
    ClientRegistrationGetApiResponse500Json:
      $ref: en/ClientRegistrationGetApiResponse500Json.yaml
    ClientRegistrationUpdateApiRequestBodyJson:
      $ref: en/ClientRegistrationUpdateApiRequestBodyJson.yaml
    ClientRegistrationUpdateApiRequestBodyJsonAllOf0:
      $ref: en/ClientRegistrationUpdateApiRequestBodyJson/ClientRegistrationUpdateApiRequestBodyJsonAllOf0.yaml
    ClientRegistrationUpdateApiResponse200Json:
      $ref: en/ClientRegistrationUpdateApiResponse200Json.yaml
    ClientRegistrationUpdateApiResponse200JsonClient:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient.yaml
    ClientRegistrationUpdateApiResponse200JsonClientClientNamesItems:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientClientNamesItems.yaml
    ClientRegistrationUpdateApiResponse200JsonClientDescriptionsItems:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientDescriptionsItems.yaml
    ClientRegistrationUpdateApiResponse200JsonClientLogoUrisItems:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientLogoUrisItems.yaml
    ClientRegistrationUpdateApiResponse200JsonClientTosUrisItems:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientTosUrisItems.yaml
    ClientRegistrationUpdateApiResponse200JsonClientPolicyUrisItems:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientPolicyUrisItems.yaml
    ClientRegistrationUpdateApiResponse200JsonClientClientUrisItems:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientClientUrisItems.yaml
    ClientRegistrationUpdateApiResponse200JsonClientAttributesItems:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientAttributesItems.yaml
    ClientRegistrationUpdateApiResponse200JsonClientExtension:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientExtension.yaml
    ClientRegistrationUpdateApiResponse400Json:
      $ref: en/ClientRegistrationUpdateApiResponse400Json.yaml
    ClientRegistrationUpdateApiResponse401Json:
      $ref: en/ClientRegistrationUpdateApiResponse401Json.yaml
    ClientRegistrationUpdateApiResponse403Json:
      $ref: en/ClientRegistrationUpdateApiResponse403Json.yaml
    ClientRegistrationUpdateApiResponse500Json:
      $ref: en/ClientRegistrationUpdateApiResponse500Json.yaml
    ClientRegistrationDeleteApiRequestBodyJson:
      $ref: en/ClientRegistrationDeleteApiRequestBodyJson.yaml
    ClientRegistrationDeleteApiRequestBodyJsonAllOf0:
      $ref: en/ClientRegistrationDeleteApiRequestBodyJson/ClientRegistrationDeleteApiRequestBodyJsonAllOf0.yaml
    ClientRegistrationDeleteApiResponse200Json:
      $ref: en/ClientRegistrationDeleteApiResponse200Json.yaml
    ClientRegistrationDeleteApiResponse200JsonClient:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient.yaml
    ClientRegistrationDeleteApiResponse200JsonClientClientNamesItems:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientClientNamesItems.yaml
    ClientRegistrationDeleteApiResponse200JsonClientDescriptionsItems:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientDescriptionsItems.yaml
    ClientRegistrationDeleteApiResponse200JsonClientLogoUrisItems:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientLogoUrisItems.yaml
    ClientRegistrationDeleteApiResponse200JsonClientTosUrisItems:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientTosUrisItems.yaml
    ClientRegistrationDeleteApiResponse200JsonClientPolicyUrisItems:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientPolicyUrisItems.yaml
    ClientRegistrationDeleteApiResponse200JsonClientClientUrisItems:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientClientUrisItems.yaml
    ClientRegistrationDeleteApiResponse200JsonClientAttributesItems:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientAttributesItems.yaml
    ClientRegistrationDeleteApiResponse200JsonClientExtension:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientExtension.yaml
    ClientRegistrationDeleteApiResponse400Json:
      $ref: en/ClientRegistrationDeleteApiResponse400Json.yaml
    ClientRegistrationDeleteApiResponse401Json:
      $ref: en/ClientRegistrationDeleteApiResponse401Json.yaml
    ClientRegistrationDeleteApiResponse403Json:
      $ref: en/ClientRegistrationDeleteApiResponse403Json.yaml
    ClientRegistrationDeleteApiResponse500Json:
      $ref: en/ClientRegistrationDeleteApiResponse500Json.yaml
    BackchannelAuthenticationApiRequestBodyJson:
      $ref: en/BackchannelAuthenticationApiRequestBodyJson.yaml
    BackchannelAuthenticationApiRequestBody:
      $ref: en/BackchannelAuthenticationApiRequestBody.yaml
    BackchannelAuthenticationApiResponse200Json:
      $ref: en/BackchannelAuthenticationApiResponse200Json.yaml
    BackchannelAuthenticationApiResponse200JsonScopesItems:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonScopesItems.yaml
    BackchannelAuthenticationApiResponse200JsonScopesItemsDescriptionsItems:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonScopesItems/BackchannelAuthenticationApiResponse200JsonScopesItemsDescriptionsItems.yaml
    BackchannelAuthenticationApiResponse200JsonScopesItemsAttributesItems:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonScopesItems/BackchannelAuthenticationApiResponse200JsonScopesItemsAttributesItems.yaml
    BackchannelAuthenticationApiResponse200JsonAuthorizationDetails:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonAuthorizationDetails.yaml
    BackchannelAuthenticationApiResponse200JsonAuthorizationDetailsElementsItems:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonAuthorizationDetails/BackchannelAuthenticationApiResponse200JsonAuthorizationDetailsElementsItems.yaml
    BackchannelAuthenticationApiResponse200JsonServiceAttributesItems:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonServiceAttributesItems.yaml
    BackchannelAuthenticationApiResponse200JsonClientAttributesItems:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonClientAttributesItems.yaml
    BackchannelAuthenticationApiResponse200JsonDynamicScopesItems:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonDynamicScopesItems.yaml
    BackchannelAuthenticationApiResponse200JsonGrant:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonGrant.yaml
    BackchannelAuthenticationApiResponse200JsonGrantScopesItems:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonGrant/BackchannelAuthenticationApiResponse200JsonGrantScopesItems.yaml
    BackchannelAuthenticationApiResponse200JsonGrantAuthorizationDetails:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonGrant/BackchannelAuthenticationApiResponse200JsonGrantAuthorizationDetails.yaml
    BackchannelAuthenticationApiResponse200JsonGrantAuthorizationDetailsElementsItems:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonGrant/BackchannelAuthenticationApiResponse200JsonGrantAuthorizationDetails/BackchannelAuthenticationApiResponse200JsonGrantAuthorizationDetailsElementsItems.yaml
    BackchannelAuthenticationApiResponse400Json:
      $ref: en/BackchannelAuthenticationApiResponse400Json.yaml
    BackchannelAuthenticationApiResponse401Json:
      $ref: en/BackchannelAuthenticationApiResponse401Json.yaml
    BackchannelAuthenticationApiResponse403Json:
      $ref: en/BackchannelAuthenticationApiResponse403Json.yaml
    BackchannelAuthenticationApiResponse500Json:
      $ref: en/BackchannelAuthenticationApiResponse500Json.yaml
    BackchannelAuthenticationIssueApiRequestBodyJson:
      $ref: en/BackchannelAuthenticationIssueApiRequestBodyJson.yaml
    BackchannelAuthenticationIssueApiRequestBody:
      $ref: en/BackchannelAuthenticationIssueApiRequestBody.yaml
    BackchannelAuthenticationIssueApiResponse200Json:
      $ref: en/BackchannelAuthenticationIssueApiResponse200Json.yaml
    BackchannelAuthenticationIssueApiResponse400Json:
      $ref: en/BackchannelAuthenticationIssueApiResponse400Json.yaml
    BackchannelAuthenticationIssueApiResponse401Json:
      $ref: en/BackchannelAuthenticationIssueApiResponse401Json.yaml
    BackchannelAuthenticationIssueApiResponse403Json:
      $ref: en/BackchannelAuthenticationIssueApiResponse403Json.yaml
    BackchannelAuthenticationIssueApiResponse500Json:
      $ref: en/BackchannelAuthenticationIssueApiResponse500Json.yaml
    BackchannelAuthenticationFailApiRequestBodyJson:
      $ref: en/BackchannelAuthenticationFailApiRequestBodyJson.yaml
    BackchannelAuthenticationFailApiRequestBody:
      $ref: en/BackchannelAuthenticationFailApiRequestBody.yaml
    BackchannelAuthenticationFailApiResponse200Json:
      $ref: en/BackchannelAuthenticationFailApiResponse200Json.yaml
    BackchannelAuthenticationFailApiResponse400Json:
      $ref: en/BackchannelAuthenticationFailApiResponse400Json.yaml
    BackchannelAuthenticationFailApiResponse401Json:
      $ref: en/BackchannelAuthenticationFailApiResponse401Json.yaml
    BackchannelAuthenticationFailApiResponse403Json:
      $ref: en/BackchannelAuthenticationFailApiResponse403Json.yaml
    BackchannelAuthenticationFailApiResponse500Json:
      $ref: en/BackchannelAuthenticationFailApiResponse500Json.yaml
    BackchannelAuthenticationCompleteApiRequestBodyJson:
      $ref: en/BackchannelAuthenticationCompleteApiRequestBodyJson.yaml
    BackchannelAuthenticationCompleteApiRequestBodyJsonPropertiesItems:
      $ref: en/BackchannelAuthenticationCompleteApiRequestBodyJson/BackchannelAuthenticationCompleteApiRequestBodyJsonPropertiesItems.yaml
    BackchannelAuthenticationCompleteApiRequestBody:
      $ref: en/BackchannelAuthenticationCompleteApiRequestBody.yaml
    BackchannelAuthenticationCompleteApiRequestBodyPropertiesItems:
      $ref: en/BackchannelAuthenticationCompleteApiRequestBody/BackchannelAuthenticationCompleteApiRequestBodyPropertiesItems.yaml
    BackchannelAuthenticationCompleteApiResponse200Json:
      $ref: en/BackchannelAuthenticationCompleteApiResponse200Json.yaml
    BackchannelAuthenticationCompleteApiResponse200JsonAuthorizationDetails:
      $ref: en/BackchannelAuthenticationCompleteApiResponse200Json/BackchannelAuthenticationCompleteApiResponse200JsonAuthorizationDetails.yaml
    BackchannelAuthenticationCompleteApiResponse200JsonAuthorizationDetailsElementsItems:
      $ref: en/BackchannelAuthenticationCompleteApiResponse200Json/BackchannelAuthenticationCompleteApiResponse200JsonAuthorizationDetails/BackchannelAuthenticationCompleteApiResponse200JsonAuthorizationDetailsElementsItems.yaml
    BackchannelAuthenticationCompleteApiResponse200JsonServiceAttributesItems:
      $ref: en/BackchannelAuthenticationCompleteApiResponse200Json/BackchannelAuthenticationCompleteApiResponse200JsonServiceAttributesItems.yaml
    BackchannelAuthenticationCompleteApiResponse200JsonClientAttributesItems:
      $ref: en/BackchannelAuthenticationCompleteApiResponse200Json/BackchannelAuthenticationCompleteApiResponse200JsonClientAttributesItems.yaml
    BackchannelAuthenticationCompleteApiResponse400Json:
      $ref: en/BackchannelAuthenticationCompleteApiResponse400Json.yaml
    BackchannelAuthenticationCompleteApiResponse401Json:
      $ref: en/BackchannelAuthenticationCompleteApiResponse401Json.yaml
    BackchannelAuthenticationCompleteApiResponse403Json:
      $ref: en/BackchannelAuthenticationCompleteApiResponse403Json.yaml
    BackchannelAuthenticationCompleteApiResponse500Json:
      $ref: en/BackchannelAuthenticationCompleteApiResponse500Json.yaml
    DeviceAuthorizationApiRequestBodyJson:
      $ref: en/DeviceAuthorizationApiRequestBodyJson.yaml
    DeviceAuthorizationApiRequestBody:
      $ref: en/DeviceAuthorizationApiRequestBody.yaml
    DeviceAuthorizationApiResponse200Json:
      $ref: en/DeviceAuthorizationApiResponse200Json.yaml
    DeviceAuthorizationApiResponse200JsonScopesItems:
      $ref: en/DeviceAuthorizationApiResponse200Json/DeviceAuthorizationApiResponse200JsonScopesItems.yaml
    DeviceAuthorizationApiResponse200JsonScopesItemsDescriptionsItems:
      $ref: en/DeviceAuthorizationApiResponse200Json/DeviceAuthorizationApiResponse200JsonScopesItems/DeviceAuthorizationApiResponse200JsonScopesItemsDescriptionsItems.yaml
    DeviceAuthorizationApiResponse200JsonScopesItemsAttributesItems:
      $ref: en/DeviceAuthorizationApiResponse200Json/DeviceAuthorizationApiResponse200JsonScopesItems/DeviceAuthorizationApiResponse200JsonScopesItemsAttributesItems.yaml
    DeviceAuthorizationApiResponse200JsonAuthorizationDetails:
      $ref: en/DeviceAuthorizationApiResponse200Json/DeviceAuthorizationApiResponse200JsonAuthorizationDetails.yaml
    DeviceAuthorizationApiResponse200JsonAuthorizationDetailsElementsItems:
      $ref: en/DeviceAuthorizationApiResponse200Json/DeviceAuthorizationApiResponse200JsonAuthorizationDetails/DeviceAuthorizationApiResponse200JsonAuthorizationDetailsElementsItems.yaml
    DeviceAuthorizationApiResponse200JsonServiceAttributesItems:
      $ref: en/DeviceAuthorizationApiResponse200Json/DeviceAuthorizationApiResponse200JsonServiceAttributesItems.yaml
    DeviceAuthorizationApiResponse200JsonClientAttributesItems:
      $ref: en/DeviceAuthorizationApiResponse200Json/DeviceAuthorizationApiResponse200JsonClientAttributesItems.yaml
    DeviceAuthorizationApiResponse200JsonDynamicScopesItems:
      $ref: en/DeviceAuthorizationApiResponse200Json/DeviceAuthorizationApiResponse200JsonDynamicScopesItems.yaml
    DeviceAuthorizationApiResponse200JsonGrant:
      $ref: en/DeviceAuthorizationApiResponse200Json/DeviceAuthorizationApiResponse200JsonGrant.yaml
    DeviceAuthorizationApiResponse200JsonGrantScopesItems:
      $ref: en/DeviceAuthorizationApiResponse200Json/DeviceAuthorizationApiResponse200JsonGrant/DeviceAuthorizationApiResponse200JsonGrantScopesItems.yaml
    DeviceAuthorizationApiResponse200JsonGrantAuthorizationDetails:
      $ref: en/DeviceAuthorizationApiResponse200Json/DeviceAuthorizationApiResponse200JsonGrant/DeviceAuthorizationApiResponse200JsonGrantAuthorizationDetails.yaml
    DeviceAuthorizationApiResponse200JsonGrantAuthorizationDetailsElementsItems:
      $ref: en/DeviceAuthorizationApiResponse200Json/DeviceAuthorizationApiResponse200JsonGrant/DeviceAuthorizationApiResponse200JsonGrantAuthorizationDetails/DeviceAuthorizationApiResponse200JsonGrantAuthorizationDetailsElementsItems.yaml
    DeviceAuthorizationApiResponse400Json:
      $ref: en/DeviceAuthorizationApiResponse400Json.yaml
    DeviceAuthorizationApiResponse401Json:
      $ref: en/DeviceAuthorizationApiResponse401Json.yaml
    DeviceAuthorizationApiResponse403Json:
      $ref: en/DeviceAuthorizationApiResponse403Json.yaml
    DeviceAuthorizationApiResponse500Json:
      $ref: en/DeviceAuthorizationApiResponse500Json.yaml
    DeviceVerificationApiRequestBodyJson:
      $ref: en/DeviceVerificationApiRequestBodyJson.yaml
    DeviceVerificationApiRequestBody:
      $ref: en/DeviceVerificationApiRequestBody.yaml
    DeviceVerificationApiResponse200Json:
      $ref: en/DeviceVerificationApiResponse200Json.yaml
    DeviceVerificationApiResponse200JsonScopesItems:
      $ref: en/DeviceVerificationApiResponse200Json/DeviceVerificationApiResponse200JsonScopesItems.yaml
    DeviceVerificationApiResponse200JsonScopesItemsDescriptionsItems:
      $ref: en/DeviceVerificationApiResponse200Json/DeviceVerificationApiResponse200JsonScopesItems/DeviceVerificationApiResponse200JsonScopesItemsDescriptionsItems.yaml
    DeviceVerificationApiResponse200JsonScopesItemsAttributesItems:
      $ref: en/DeviceVerificationApiResponse200Json/DeviceVerificationApiResponse200JsonScopesItems/DeviceVerificationApiResponse200JsonScopesItemsAttributesItems.yaml
    DeviceVerificationApiResponse200JsonAuthorizationDetails:
      $ref: en/DeviceVerificationApiResponse200Json/DeviceVerificationApiResponse200JsonAuthorizationDetails.yaml
    DeviceVerificationApiResponse200JsonAuthorizationDetailsElementsItems:
      $ref: en/DeviceVerificationApiResponse200Json/DeviceVerificationApiResponse200JsonAuthorizationDetails/DeviceVerificationApiResponse200JsonAuthorizationDetailsElementsItems.yaml
    DeviceVerificationApiResponse200JsonServiceAttributesItems:
      $ref: en/DeviceVerificationApiResponse200Json/DeviceVerificationApiResponse200JsonServiceAttributesItems.yaml
    DeviceVerificationApiResponse200JsonClientAttributesItems:
      $ref: en/DeviceVerificationApiResponse200Json/DeviceVerificationApiResponse200JsonClientAttributesItems.yaml
    DeviceVerificationApiResponse200JsonDynamicScopesItems:
      $ref: en/DeviceVerificationApiResponse200Json/DeviceVerificationApiResponse200JsonDynamicScopesItems.yaml
    DeviceVerificationApiResponse200JsonGrant:
      $ref: en/DeviceVerificationApiResponse200Json/DeviceVerificationApiResponse200JsonGrant.yaml
    DeviceVerificationApiResponse200JsonGrantScopesItems:
      $ref: en/DeviceVerificationApiResponse200Json/DeviceVerificationApiResponse200JsonGrant/DeviceVerificationApiResponse200JsonGrantScopesItems.yaml
    DeviceVerificationApiResponse200JsonGrantAuthorizationDetails:
      $ref: en/DeviceVerificationApiResponse200Json/DeviceVerificationApiResponse200JsonGrant/DeviceVerificationApiResponse200JsonGrantAuthorizationDetails.yaml
    DeviceVerificationApiResponse200JsonGrantAuthorizationDetailsElementsItems:
      $ref: en/DeviceVerificationApiResponse200Json/DeviceVerificationApiResponse200JsonGrant/DeviceVerificationApiResponse200JsonGrantAuthorizationDetails/DeviceVerificationApiResponse200JsonGrantAuthorizationDetailsElementsItems.yaml
    DeviceVerificationApiResponse400Json:
      $ref: en/DeviceVerificationApiResponse400Json.yaml
    DeviceVerificationApiResponse401Json:
      $ref: en/DeviceVerificationApiResponse401Json.yaml
    DeviceVerificationApiResponse403Json:
      $ref: en/DeviceVerificationApiResponse403Json.yaml
    DeviceVerificationApiResponse500Json:
      $ref: en/DeviceVerificationApiResponse500Json.yaml
    DeviceCompleteApiRequestBodyJson:
      $ref: en/DeviceCompleteApiRequestBodyJson.yaml
    DeviceCompleteApiRequestBodyJsonPropertiesItems:
      $ref: en/DeviceCompleteApiRequestBodyJson/DeviceCompleteApiRequestBodyJsonPropertiesItems.yaml
    DeviceCompleteApiRequestBody:
      $ref: en/DeviceCompleteApiRequestBody.yaml
    DeviceCompleteApiRequestBodyPropertiesItems:
      $ref: en/DeviceCompleteApiRequestBody/DeviceCompleteApiRequestBodyPropertiesItems.yaml
    DeviceCompleteApiResponse200Json:
      $ref: en/DeviceCompleteApiResponse200Json.yaml
    DeviceCompleteApiResponse400Json:
      $ref: en/DeviceCompleteApiResponse400Json.yaml
    DeviceCompleteApiResponse401Json:
      $ref: en/DeviceCompleteApiResponse401Json.yaml
    DeviceCompleteApiResponse403Json:
      $ref: en/DeviceCompleteApiResponse403Json.yaml
    DeviceCompleteApiResponse500Json:
      $ref: en/DeviceCompleteApiResponse500Json.yaml
    AuthTokenGetListApiResponse200Json:
      $ref: en/AuthTokenGetListApiResponse200Json.yaml
    AuthTokenGetListApiResponse200JsonClient:
      $ref: en/AuthTokenGetListApiResponse200Json/AuthTokenGetListApiResponse200JsonClient.yaml
    AuthTokenGetListApiResponse200JsonClientClientNamesItems:
      $ref: en/AuthTokenGetListApiResponse200Json/AuthTokenGetListApiResponse200JsonClient/AuthTokenGetListApiResponse200JsonClientClientNamesItems.yaml
    AuthTokenGetListApiResponse200JsonClientDescriptionsItems:
      $ref: en/AuthTokenGetListApiResponse200Json/AuthTokenGetListApiResponse200JsonClient/AuthTokenGetListApiResponse200JsonClientDescriptionsItems.yaml
    AuthTokenGetListApiResponse200JsonAccessTokensItems:
      $ref: en/AuthTokenGetListApiResponse200Json/AuthTokenGetListApiResponse200JsonAccessTokensItems.yaml
    AuthTokenGetListApiResponse200JsonAccessTokensItemsPropertiesItems:
      $ref: en/AuthTokenGetListApiResponse200Json/AuthTokenGetListApiResponse200JsonAccessTokensItems/AuthTokenGetListApiResponse200JsonAccessTokensItemsPropertiesItems.yaml
    AuthTokenGetListApiResponse400Json:
      $ref: en/AuthTokenGetListApiResponse400Json.yaml
    AuthTokenGetListApiResponse401Json:
      $ref: en/AuthTokenGetListApiResponse401Json.yaml
    AuthTokenGetListApiResponse403Json:
      $ref: en/AuthTokenGetListApiResponse403Json.yaml
    AuthTokenGetListApiResponse500Json:
      $ref: en/AuthTokenGetListApiResponse500Json.yaml
    AuthTokenCreateApiRequestBodyJson:
      $ref: en/AuthTokenCreateApiRequestBodyJson.yaml
    AuthTokenCreateApiRequestBodyJsonPropertiesItems:
      $ref: en/AuthTokenCreateApiRequestBodyJson/AuthTokenCreateApiRequestBodyJsonPropertiesItems.yaml
    AuthTokenCreateApiRequestBodyJsonAuthorizationDetails:
      $ref: en/AuthTokenCreateApiRequestBodyJson/AuthTokenCreateApiRequestBodyJsonAuthorizationDetails.yaml
    AuthTokenCreateApiRequestBodyJsonAuthorizationDetailsElementsItems:
      $ref: en/AuthTokenCreateApiRequestBodyJson/AuthTokenCreateApiRequestBodyJsonAuthorizationDetails/AuthTokenCreateApiRequestBodyJsonAuthorizationDetailsElementsItems.yaml
    AuthTokenCreateApiRequestBody:
      $ref: en/AuthTokenCreateApiRequestBody.yaml
    AuthTokenCreateApiRequestBodyPropertiesItems:
      $ref: en/AuthTokenCreateApiRequestBody/AuthTokenCreateApiRequestBodyPropertiesItems.yaml
    AuthTokenCreateApiRequestBodyAuthorizationDetails:
      $ref: en/AuthTokenCreateApiRequestBody/AuthTokenCreateApiRequestBodyAuthorizationDetails.yaml
    AuthTokenCreateApiRequestBodyAuthorizationDetailsElementsItems:
      $ref: en/AuthTokenCreateApiRequestBody/AuthTokenCreateApiRequestBodyAuthorizationDetails/AuthTokenCreateApiRequestBodyAuthorizationDetailsElementsItems.yaml
    AuthTokenCreateApiResponse200Json:
      $ref: en/AuthTokenCreateApiResponse200Json.yaml
    AuthTokenCreateApiResponse200JsonPropertiesItems:
      $ref: en/AuthTokenCreateApiResponse200Json/AuthTokenCreateApiResponse200JsonPropertiesItems.yaml
    AuthTokenCreateApiResponse200JsonAuthorizationDetails:
      $ref: en/AuthTokenCreateApiResponse200Json/AuthTokenCreateApiResponse200JsonAuthorizationDetails.yaml
    AuthTokenCreateApiResponse200JsonAuthorizationDetailsElementsItems:
      $ref: en/AuthTokenCreateApiResponse200Json/AuthTokenCreateApiResponse200JsonAuthorizationDetails/AuthTokenCreateApiResponse200JsonAuthorizationDetailsElementsItems.yaml
    AuthTokenCreateApiResponse400Json:
      $ref: en/AuthTokenCreateApiResponse400Json.yaml
    AuthTokenCreateApiResponse401Json:
      $ref: en/AuthTokenCreateApiResponse401Json.yaml
    AuthTokenCreateApiResponse403Json:
      $ref: en/AuthTokenCreateApiResponse403Json.yaml
    AuthTokenCreateApiResponse500Json:
      $ref: en/AuthTokenCreateApiResponse500Json.yaml
    AuthTokenUpdateApiRequestBodyJson:
      $ref: en/AuthTokenUpdateApiRequestBodyJson.yaml
    AuthTokenUpdateApiRequestBodyJsonPropertiesItems:
      $ref: en/AuthTokenUpdateApiRequestBodyJson/AuthTokenUpdateApiRequestBodyJsonPropertiesItems.yaml
    AuthTokenUpdateApiRequestBodyJsonAuthorizationDetails:
      $ref: en/AuthTokenUpdateApiRequestBodyJson/AuthTokenUpdateApiRequestBodyJsonAuthorizationDetails.yaml
    AuthTokenUpdateApiRequestBodyJsonAuthorizationDetailsElementsItems:
      $ref: en/AuthTokenUpdateApiRequestBodyJson/AuthTokenUpdateApiRequestBodyJsonAuthorizationDetails/AuthTokenUpdateApiRequestBodyJsonAuthorizationDetailsElementsItems.yaml
    AuthTokenUpdateApiRequestBody:
      $ref: en/AuthTokenUpdateApiRequestBody.yaml
    AuthTokenUpdateApiRequestBodyPropertiesItems:
      $ref: en/AuthTokenUpdateApiRequestBody/AuthTokenUpdateApiRequestBodyPropertiesItems.yaml
    AuthTokenUpdateApiRequestBodyAuthorizationDetails:
      $ref: en/AuthTokenUpdateApiRequestBody/AuthTokenUpdateApiRequestBodyAuthorizationDetails.yaml
    AuthTokenUpdateApiRequestBodyAuthorizationDetailsElementsItems:
      $ref: en/AuthTokenUpdateApiRequestBody/AuthTokenUpdateApiRequestBodyAuthorizationDetails/AuthTokenUpdateApiRequestBodyAuthorizationDetailsElementsItems.yaml
    AuthTokenUpdateApiResponse200Json:
      $ref: en/AuthTokenUpdateApiResponse200Json.yaml
    AuthTokenUpdateApiResponse200JsonPropertiesItems:
      $ref: en/AuthTokenUpdateApiResponse200Json/AuthTokenUpdateApiResponse200JsonPropertiesItems.yaml
    AuthTokenUpdateApiResponse200JsonAuthorizationDetails:
      $ref: en/AuthTokenUpdateApiResponse200Json/AuthTokenUpdateApiResponse200JsonAuthorizationDetails.yaml
    AuthTokenUpdateApiResponse200JsonAuthorizationDetailsElementsItems:
      $ref: en/AuthTokenUpdateApiResponse200Json/AuthTokenUpdateApiResponse200JsonAuthorizationDetails/AuthTokenUpdateApiResponse200JsonAuthorizationDetailsElementsItems.yaml
    AuthTokenUpdateApiResponse400Json:
      $ref: en/AuthTokenUpdateApiResponse400Json.yaml
    AuthTokenUpdateApiResponse401Json:
      $ref: en/AuthTokenUpdateApiResponse401Json.yaml
    AuthTokenUpdateApiResponse403Json:
      $ref: en/AuthTokenUpdateApiResponse403Json.yaml
    AuthTokenUpdateApiResponse500Json:
      $ref: en/AuthTokenUpdateApiResponse500Json.yaml
    AuthTokenDeleteApiResponse400Json:
      $ref: en/AuthTokenDeleteApiResponse400Json.yaml
    AuthTokenDeleteApiResponse401Json:
      $ref: en/AuthTokenDeleteApiResponse401Json.yaml
    AuthTokenDeleteApiResponse403Json:
      $ref: en/AuthTokenDeleteApiResponse403Json.yaml
    AuthTokenDeleteApiResponse500Json:
      $ref: en/AuthTokenDeleteApiResponse500Json.yaml
    AuthTokenRevokeApiRequestBodyJson:
      $ref: en/AuthTokenRevokeApiRequestBodyJson.yaml
    AuthTokenRevokeApiRequestBody:
      $ref: en/AuthTokenRevokeApiRequestBody.yaml
    AuthTokenRevokeApiResponse200Json:
      $ref: en/AuthTokenRevokeApiResponse200Json.yaml
    AuthTokenRevokeApiResponse400Json:
      $ref: en/AuthTokenRevokeApiResponse400Json.yaml
    AuthTokenRevokeApiResponse401Json:
      $ref: en/AuthTokenRevokeApiResponse401Json.yaml
    AuthTokenRevokeApiResponse403Json:
      $ref: en/AuthTokenRevokeApiResponse403Json.yaml
    AuthTokenRevokeApiResponse500Json:
      $ref: en/AuthTokenRevokeApiResponse500Json.yaml
    JoseVerifyApiRequestBodyJson:
      $ref: en/JoseVerifyApiRequestBodyJson.yaml
    JoseVerifyApiRequestBody:
      $ref: en/JoseVerifyApiRequestBody.yaml
    JoseVerifyApiResponse200Json:
      $ref: en/JoseVerifyApiResponse200Json.yaml
    JoseVerifyApiResponse400Json:
      $ref: en/JoseVerifyApiResponse400Json.yaml
    JoseVerifyApiResponse401Json:
      $ref: en/JoseVerifyApiResponse401Json.yaml
    JoseVerifyApiResponse403Json:
      $ref: en/JoseVerifyApiResponse403Json.yaml
    JoseVerifyApiResponse500Json:
      $ref: en/JoseVerifyApiResponse500Json.yaml
    FederationConfigurationApiResponse200Json:
      $ref: en/FederationConfigurationApiResponse200Json.yaml
    FederationConfigurationApiResponse400Json:
      $ref: en/FederationConfigurationApiResponse400Json.yaml
    FederationConfigurationApiResponse401Json:
      $ref: en/FederationConfigurationApiResponse401Json.yaml
    FederationConfigurationApiResponse403Json:
      $ref: en/FederationConfigurationApiResponse403Json.yaml
    FederationConfigurationApiResponse500Json:
      $ref: en/FederationConfigurationApiResponse500Json.yaml
    FederationRegistrationApiRequestBodyJson:
      $ref: en/FederationRegistrationApiRequestBodyJson.yaml
    FederationRegistrationApiRequestBody:
      $ref: en/FederationRegistrationApiRequestBody.yaml
    FederationRegistrationApiResponse200Json:
      $ref: en/FederationRegistrationApiResponse200Json.yaml
    FederationRegistrationApiResponse200JsonClient:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient.yaml
    FederationRegistrationApiResponse200JsonClientClientNamesItems:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientClientNamesItems.yaml
    FederationRegistrationApiResponse200JsonClientDescriptionsItems:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientDescriptionsItems.yaml
    FederationRegistrationApiResponse200JsonClientLogoUrisItems:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientLogoUrisItems.yaml
    FederationRegistrationApiResponse200JsonClientTosUrisItems:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientTosUrisItems.yaml
    FederationRegistrationApiResponse200JsonClientPolicyUrisItems:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientPolicyUrisItems.yaml
    FederationRegistrationApiResponse200JsonClientClientUrisItems:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientClientUrisItems.yaml
    FederationRegistrationApiResponse200JsonClientAttributesItems:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientAttributesItems.yaml
    FederationRegistrationApiResponse200JsonClientExtension:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientExtension.yaml
    FederationRegistrationApiResponse400Json:
      $ref: en/FederationRegistrationApiResponse400Json.yaml
    FederationRegistrationApiResponse401Json:
      $ref: en/FederationRegistrationApiResponse401Json.yaml
    FederationRegistrationApiResponse403Json:
      $ref: en/FederationRegistrationApiResponse403Json.yaml
    FederationRegistrationApiResponse500Json:
      $ref: en/FederationRegistrationApiResponse500Json.yaml
    InfoApiResponse200Json:
      $ref: en/InfoApiResponse200Json.yaml
    InfoApiResponse400Json:
      $ref: en/InfoApiResponse400Json.yaml
    InfoApiResponse401Json:
      $ref: en/InfoApiResponse401Json.yaml
    InfoApiResponse403Json:
      $ref: en/InfoApiResponse403Json.yaml
    InfoApiResponse500Json:
      $ref: en/InfoApiResponse500Json.yaml
    ClientExtensionRequestablesScopesGetApiResponse200Json:
      $ref: en/ClientExtensionRequestablesScopesGetApiResponse200Json.yaml
    ClientExtensionRequestablesScopesGetApiResponse400Json:
      $ref: en/ClientExtensionRequestablesScopesGetApiResponse400Json.yaml
    ClientExtensionRequestablesScopesGetApiResponse401Json:
      $ref: en/ClientExtensionRequestablesScopesGetApiResponse401Json.yaml
    ClientExtensionRequestablesScopesGetApiResponse403Json:
      $ref: en/ClientExtensionRequestablesScopesGetApiResponse403Json.yaml
    ClientExtensionRequestablesScopesGetApiResponse500Json:
      $ref: en/ClientExtensionRequestablesScopesGetApiResponse500Json.yaml
    ClientExtensionRequestablesScopesUpdateApiRequestBodyJson:
      $ref: en/ClientExtensionRequestablesScopesUpdateApiRequestBodyJson.yaml
    ClientExtensionRequestablesScopesUpdateApiResponse200Json:
      $ref: en/ClientExtensionRequestablesScopesUpdateApiResponse200Json.yaml
    ClientExtensionRequestablesScopesUpdateApiResponse400Json:
      $ref: en/ClientExtensionRequestablesScopesUpdateApiResponse400Json.yaml
    ClientExtensionRequestablesScopesUpdateApiResponse401Json:
      $ref: en/ClientExtensionRequestablesScopesUpdateApiResponse401Json.yaml
    ClientExtensionRequestablesScopesUpdateApiResponse403Json:
      $ref: en/ClientExtensionRequestablesScopesUpdateApiResponse403Json.yaml
    ClientExtensionRequestablesScopesUpdateApiResponse500Json:
      $ref: en/ClientExtensionRequestablesScopesUpdateApiResponse500Json.yaml
    ClientExtensionRequestablesScopesDeleteApiResponse400Json:
      $ref: en/ClientExtensionRequestablesScopesDeleteApiResponse400Json.yaml
    ClientExtensionRequestablesScopesDeleteApiResponse401Json:
      $ref: en/ClientExtensionRequestablesScopesDeleteApiResponse401Json.yaml
    ClientExtensionRequestablesScopesDeleteApiResponse403Json:
      $ref: en/ClientExtensionRequestablesScopesDeleteApiResponse403Json.yaml
    ClientExtensionRequestablesScopesDeleteApiResponse500Json:
      $ref: en/ClientExtensionRequestablesScopesDeleteApiResponse500Json.yaml
    HskCreateApiRequestBodyJson:
      $ref: en/HskCreateApiRequestBodyJson.yaml
    HskCreateApiRequestBody:
      $ref: en/HskCreateApiRequestBody.yaml
    HskCreateApiResponse200Json:
      $ref: en/HskCreateApiResponse200Json.yaml
    HskCreateApiResponse200JsonHsk:
      $ref: en/HskCreateApiResponse200Json/HskCreateApiResponse200JsonHsk.yaml
    HskCreateApiResponse400Json:
      $ref: en/HskCreateApiResponse400Json.yaml
    HskCreateApiResponse401Json:
      $ref: en/HskCreateApiResponse401Json.yaml
    HskCreateApiResponse403Json:
      $ref: en/HskCreateApiResponse403Json.yaml
    HskCreateApiResponse500Json:
      $ref: en/HskCreateApiResponse500Json.yaml
    HskDeleteApiResponse204Json:
      $ref: en/HskDeleteApiResponse204Json.yaml
    HskDeleteApiResponse204JsonHsk:
      $ref: en/HskDeleteApiResponse204Json/HskDeleteApiResponse204JsonHsk.yaml
    HskDeleteApiResponse400Json:
      $ref: en/HskDeleteApiResponse400Json.yaml
    HskDeleteApiResponse401Json:
      $ref: en/HskDeleteApiResponse401Json.yaml
    HskDeleteApiResponse403Json:
      $ref: en/HskDeleteApiResponse403Json.yaml
    HskDeleteApiResponse500Json:
      $ref: en/HskDeleteApiResponse500Json.yaml
    HskGetApiResponse200Json:
      $ref: en/HskGetApiResponse200Json.yaml
    HskGetApiResponse200JsonHsk:
      $ref: en/HskGetApiResponse200Json/HskGetApiResponse200JsonHsk.yaml
    HskGetApiResponse400Json:
      $ref: en/HskGetApiResponse400Json.yaml
    HskGetApiResponse401Json:
      $ref: en/HskGetApiResponse401Json.yaml
    HskGetApiResponse403Json:
      $ref: en/HskGetApiResponse403Json.yaml
    HskGetApiResponse500Json:
      $ref: en/HskGetApiResponse500Json.yaml
    HskGetListApiResponse200Json:
      $ref: en/HskGetListApiResponse200Json.yaml
    HskGetListApiResponse200JsonHsksItems:
      $ref: en/HskGetListApiResponse200Json/HskGetListApiResponse200JsonHsksItems.yaml
    HskGetListApiResponse400Json:
      $ref: en/HskGetListApiResponse400Json.yaml
    HskGetListApiResponse401Json:
      $ref: en/HskGetListApiResponse401Json.yaml
    HskGetListApiResponse403Json:
      $ref: en/HskGetListApiResponse403Json.yaml
    HskGetListApiResponse500Json:
      $ref: en/HskGetListApiResponse500Json.yaml
    VciMetadataApiRequestBodyJson:
      $ref: en/VciMetadataApiRequestBodyJson.yaml
    VciMetadataApiRequestBody:
      $ref: en/VciMetadataApiRequestBody.yaml
    VciMetadataApiResponse200Json:
      $ref: en/VciMetadataApiResponse200Json.yaml
    VciMetadataApiResponse400Json:
      $ref: en/VciMetadataApiResponse400Json.yaml
    VciMetadataApiResponse401Json:
      $ref: en/VciMetadataApiResponse401Json.yaml
    VciMetadataApiResponse403Json:
      $ref: en/VciMetadataApiResponse403Json.yaml
    VciMetadataApiResponse500Json:
      $ref: en/VciMetadataApiResponse500Json.yaml
    VciJwtissuerApiRequestBodyJson:
      $ref: en/VciJwtissuerApiRequestBodyJson.yaml
    VciJwtissuerApiRequestBody:
      $ref: en/VciJwtissuerApiRequestBody.yaml
    VciJwtissuerApiResponse200Json:
      $ref: en/VciJwtissuerApiResponse200Json.yaml
    VciJwtissuerApiResponse400Json:
      $ref: en/VciJwtissuerApiResponse400Json.yaml
    VciJwtissuerApiResponse401Json:
      $ref: en/VciJwtissuerApiResponse401Json.yaml
    VciJwtissuerApiResponse403Json:
      $ref: en/VciJwtissuerApiResponse403Json.yaml
    VciJwtissuerApiResponse500Json:
      $ref: en/VciJwtissuerApiResponse500Json.yaml
    VciJwksApiRequestBodyJson:
      $ref: en/VciJwksApiRequestBodyJson.yaml
    VciJwksApiRequestBody:
      $ref: en/VciJwksApiRequestBody.yaml
    VciJwksApiResponse200Json:
      $ref: en/VciJwksApiResponse200Json.yaml
    VciJwksApiResponse400Json:
      $ref: en/VciJwksApiResponse400Json.yaml
    VciJwksApiResponse401Json:
      $ref: en/VciJwksApiResponse401Json.yaml
    VciJwksApiResponse403Json:
      $ref: en/VciJwksApiResponse403Json.yaml
    VciJwksApiResponse500Json:
      $ref: en/VciJwksApiResponse500Json.yaml
    VciOfferCreateApiRequestBodyJson:
      $ref: en/VciOfferCreateApiRequestBodyJson.yaml
    VciOfferCreateApiRequestBodyJsonPropertiesItems:
      $ref: en/VciOfferCreateApiRequestBodyJson/VciOfferCreateApiRequestBodyJsonPropertiesItems.yaml
    VciOfferCreateApiRequestBody:
      $ref: en/VciOfferCreateApiRequestBody.yaml
    VciOfferCreateApiRequestBodyPropertiesItems:
      $ref: en/VciOfferCreateApiRequestBody/VciOfferCreateApiRequestBodyPropertiesItems.yaml
    VciOfferCreateApiResponse200Json:
      $ref: en/VciOfferCreateApiResponse200Json.yaml
    VciOfferCreateApiResponse200JsonInfo:
      $ref: en/VciOfferCreateApiResponse200Json/VciOfferCreateApiResponse200JsonInfo.yaml
    VciOfferCreateApiResponse200JsonInfoPropertiesItems:
      $ref: en/VciOfferCreateApiResponse200Json/VciOfferCreateApiResponse200JsonInfo/VciOfferCreateApiResponse200JsonInfoPropertiesItems.yaml
    VciOfferCreateApiResponse400Json:
      $ref: en/VciOfferCreateApiResponse400Json.yaml
    VciOfferCreateApiResponse401Json:
      $ref: en/VciOfferCreateApiResponse401Json.yaml
    VciOfferCreateApiResponse403Json:
      $ref: en/VciOfferCreateApiResponse403Json.yaml
    VciOfferCreateApiResponse500Json:
      $ref: en/VciOfferCreateApiResponse500Json.yaml
    VciOfferInfoApiRequestBodyJson:
      $ref: en/VciOfferInfoApiRequestBodyJson.yaml
    VciOfferInfoApiRequestBody:
      $ref: en/VciOfferInfoApiRequestBody.yaml
    VciOfferInfoApiResponse200Json:
      $ref: en/VciOfferInfoApiResponse200Json.yaml
    VciOfferInfoApiResponse200JsonInfo:
      $ref: en/VciOfferInfoApiResponse200Json/VciOfferInfoApiResponse200JsonInfo.yaml
    VciOfferInfoApiResponse200JsonInfoPropertiesItems:
      $ref: en/VciOfferInfoApiResponse200Json/VciOfferInfoApiResponse200JsonInfo/VciOfferInfoApiResponse200JsonInfoPropertiesItems.yaml
    VciOfferInfoApiResponse400Json:
      $ref: en/VciOfferInfoApiResponse400Json.yaml
    VciOfferInfoApiResponse401Json:
      $ref: en/VciOfferInfoApiResponse401Json.yaml
    VciOfferInfoApiResponse403Json:
      $ref: en/VciOfferInfoApiResponse403Json.yaml
    VciOfferInfoApiResponse500Json:
      $ref: en/VciOfferInfoApiResponse500Json.yaml
    VciSingleParseApiRequestBodyJson:
      $ref: en/VciSingleParseApiRequestBodyJson.yaml
    VciSingleParseApiRequestBody:
      $ref: en/VciSingleParseApiRequestBody.yaml
    VciSingleParseApiResponse200Json:
      $ref: en/VciSingleParseApiResponse200Json.yaml
    VciSingleParseApiResponse200JsonInfo:
      $ref: en/VciSingleParseApiResponse200Json/VciSingleParseApiResponse200JsonInfo.yaml
    VciSingleParseApiResponse400Json:
      $ref: en/VciSingleParseApiResponse400Json.yaml
    VciSingleParseApiResponse401Json:
      $ref: en/VciSingleParseApiResponse401Json.yaml
    VciSingleParseApiResponse403Json:
      $ref: en/VciSingleParseApiResponse403Json.yaml
    VciSingleParseApiResponse500Json:
      $ref: en/VciSingleParseApiResponse500Json.yaml
    VciSingleIssueApiRequestBodyJson:
      $ref: en/VciSingleIssueApiRequestBodyJson.yaml
    VciSingleIssueApiRequestBodyJsonOrder:
      $ref: en/VciSingleIssueApiRequestBodyJson/VciSingleIssueApiRequestBodyJsonOrder.yaml
    VciSingleIssueApiResponse200Json:
      $ref: en/VciSingleIssueApiResponse200Json.yaml
    VciSingleIssueApiResponse400Json:
      $ref: en/VciSingleIssueApiResponse400Json.yaml
    VciSingleIssueApiResponse401Json:
      $ref: en/VciSingleIssueApiResponse401Json.yaml
    VciSingleIssueApiResponse403Json:
      $ref: en/VciSingleIssueApiResponse403Json.yaml
    VciSingleIssueApiResponse500Json:
      $ref: en/VciSingleIssueApiResponse500Json.yaml
    VciBatchParseApiRequestBodyJson:
      $ref: en/VciBatchParseApiRequestBodyJson.yaml
    VciBatchParseApiRequestBody:
      $ref: en/VciBatchParseApiRequestBody.yaml
    VciBatchParseApiResponse200Json:
      $ref: en/VciBatchParseApiResponse200Json.yaml
    VciBatchParseApiResponse200JsonInfoItems:
      $ref: en/VciBatchParseApiResponse200Json/VciBatchParseApiResponse200JsonInfoItems.yaml
    VciBatchParseApiResponse400Json:
      $ref: en/VciBatchParseApiResponse400Json.yaml
    VciBatchParseApiResponse401Json:
      $ref: en/VciBatchParseApiResponse401Json.yaml
    VciBatchParseApiResponse403Json:
      $ref: en/VciBatchParseApiResponse403Json.yaml
    VciBatchParseApiResponse500Json:
      $ref: en/VciBatchParseApiResponse500Json.yaml
    VciBatchIssueApiRequestBodyJson:
      $ref: en/VciBatchIssueApiRequestBodyJson.yaml
    VciBatchIssueApiRequestBodyJsonOrdersItems:
      $ref: en/VciBatchIssueApiRequestBodyJson/VciBatchIssueApiRequestBodyJsonOrdersItems.yaml
    VciBatchIssueApiResponse200Json:
      $ref: en/VciBatchIssueApiResponse200Json.yaml
    VciBatchIssueApiResponse400Json:
      $ref: en/VciBatchIssueApiResponse400Json.yaml
    VciBatchIssueApiResponse401Json:
      $ref: en/VciBatchIssueApiResponse401Json.yaml
    VciBatchIssueApiResponse403Json:
      $ref: en/VciBatchIssueApiResponse403Json.yaml
    VciBatchIssueApiResponse500Json:
      $ref: en/VciBatchIssueApiResponse500Json.yaml
    VciDeferredParseApiRequestBodyJson:
      $ref: en/VciDeferredParseApiRequestBodyJson.yaml
    VciDeferredParseApiRequestBody:
      $ref: en/VciDeferredParseApiRequestBody.yaml
    VciDeferredParseApiResponse200Json:
      $ref: en/VciDeferredParseApiResponse200Json.yaml
    VciDeferredParseApiResponse200JsonInfo:
      $ref: en/VciDeferredParseApiResponse200Json/VciDeferredParseApiResponse200JsonInfo.yaml
    VciDeferredParseApiResponse400Json:
      $ref: en/VciDeferredParseApiResponse400Json.yaml
    VciDeferredParseApiResponse401Json:
      $ref: en/VciDeferredParseApiResponse401Json.yaml
    VciDeferredParseApiResponse403Json:
      $ref: en/VciDeferredParseApiResponse403Json.yaml
    VciDeferredParseApiResponse500Json:
      $ref: en/VciDeferredParseApiResponse500Json.yaml
    VciDeferredIssueApiRequestBodyJson:
      $ref: en/VciDeferredIssueApiRequestBodyJson.yaml
    VciDeferredIssueApiRequestBodyJsonOrder:
      $ref: en/VciDeferredIssueApiRequestBodyJson/VciDeferredIssueApiRequestBodyJsonOrder.yaml
    VciDeferredIssueApiResponse200Json:
      $ref: en/VciDeferredIssueApiResponse200Json.yaml
    VciDeferredIssueApiResponse400Json:
      $ref: en/VciDeferredIssueApiResponse400Json.yaml
    VciDeferredIssueApiResponse401Json:
      $ref: en/VciDeferredIssueApiResponse401Json.yaml
    VciDeferredIssueApiResponse403Json:
      $ref: en/VciDeferredIssueApiResponse403Json.yaml
    VciDeferredIssueApiResponse500Json:
      $ref: en/VciDeferredIssueApiResponse500Json.yaml
    AuthAuthorizationTicketInfoApiRequestBodyJson:
      $ref: en/AuthAuthorizationTicketInfoApiRequestBodyJson.yaml
    AuthAuthorizationTicketInfoApiRequestBody:
      $ref: en/AuthAuthorizationTicketInfoApiRequestBody.yaml
    AuthAuthorizationTicketInfoApiResponse200Json:
      $ref: en/AuthAuthorizationTicketInfoApiResponse200Json.yaml
    AuthAuthorizationTicketInfoApiResponse400Json:
      $ref: en/AuthAuthorizationTicketInfoApiResponse400Json.yaml
    AuthAuthorizationTicketInfoApiResponse401Json:
      $ref: en/AuthAuthorizationTicketInfoApiResponse401Json.yaml
    AuthAuthorizationTicketInfoApiResponse403Json:
      $ref: en/AuthAuthorizationTicketInfoApiResponse403Json.yaml
    AuthAuthorizationTicketInfoApiResponse500Json:
      $ref: en/AuthAuthorizationTicketInfoApiResponse500Json.yaml
    AuthAuthorizationTicketUpdateApiRequestBodyJson:
      $ref: en/AuthAuthorizationTicketUpdateApiRequestBodyJson.yaml
    AuthAuthorizationTicketUpdateApiRequestBody:
      $ref: en/AuthAuthorizationTicketUpdateApiRequestBody.yaml
    AuthAuthorizationTicketUpdateApiResponse200Json:
      $ref: en/AuthAuthorizationTicketUpdateApiResponse200Json.yaml
    AuthAuthorizationTicketUpdateApiResponse400Json:
      $ref: en/AuthAuthorizationTicketUpdateApiResponse400Json.yaml
    AuthAuthorizationTicketUpdateApiResponse401Json:
      $ref: en/AuthAuthorizationTicketUpdateApiResponse401Json.yaml
    AuthAuthorizationTicketUpdateApiResponse403Json:
      $ref: en/AuthAuthorizationTicketUpdateApiResponse403Json.yaml
    AuthAuthorizationTicketUpdateApiResponse500Json:
      $ref: en/AuthAuthorizationTicketUpdateApiResponse500Json.yaml
    NativeSsoApiRequestBodyJson:
      $ref: en/NativeSsoApiRequestBodyJson.yaml
    NativeSsoApiResponse200Json:
      $ref: en/NativeSsoApiResponse200Json.yaml
    NativeSsoApiResponse400Json:
      $ref: en/NativeSsoApiResponse400Json.yaml
    NativeSsoApiResponse401Json:
      $ref: en/NativeSsoApiResponse401Json.yaml
    NativeSsoApiResponse403Json:
      $ref: en/NativeSsoApiResponse403Json.yaml
    NativeSsoApiResponse500Json:
      $ref: en/NativeSsoApiResponse500Json.yaml
    NativeSsoLogoutApiRequestBodyJson:
      $ref: en/NativeSsoLogoutApiRequestBodyJson.yaml
    NativeSsoLogoutApiResponse200Json:
      $ref: en/NativeSsoLogoutApiResponse200Json.yaml
    NativeSsoLogoutApiResponse400Json:
      $ref: en/NativeSsoLogoutApiResponse400Json.yaml
    NativeSsoLogoutApiResponse401Json:
      $ref: en/NativeSsoLogoutApiResponse401Json.yaml
    NativeSsoLogoutApiResponse403Json:
      $ref: en/NativeSsoLogoutApiResponse403Json.yaml
    NativeSsoLogoutApiResponse500Json:
      $ref: en/NativeSsoLogoutApiResponse500Json.yaml
    AccessTokenPropertiesItems:
      $ref: en/AccessTokenPropertiesItems.yaml
    AuthorizationDetailsElementsItems:
      $ref: en/AuthorizationDetailsElementsItems.yaml
    ClientClientNamesItems:
      $ref: en/ClientClientNamesItems.yaml
    ClientDescriptionsItems:
      $ref: en/ClientDescriptionsItems.yaml
    ClientLogoUrisItems:
      $ref: en/ClientLogoUrisItems.yaml
    ClientTosUrisItems:
      $ref: en/ClientTosUrisItems.yaml
    ClientPolicyUrisItems:
      $ref: en/ClientPolicyUrisItems.yaml
    ClientClientUrisItems:
      $ref: en/ClientClientUrisItems.yaml
    ClientAttributesItems:
      $ref: en/ClientAttributesItems.yaml
    ClientExtension:
      $ref: en/ClientExtension.yaml
    ScopeDescriptionsItems:
      $ref: en/ScopeDescriptionsItems.yaml
    ScopeAttributesItems:
      $ref: en/ScopeAttributesItems.yaml
    ServiceMetadataItems:
      $ref: en/ServiceMetadataItems.yaml
    ServiceMtlsEndpointAliasesItems:
      $ref: en/ServiceMtlsEndpointAliasesItems.yaml
    ServiceSupportedScopesItems:
      $ref: en/ServiceSupportedScopesItems.yaml
    ServiceSupportedScopesItemsDescriptionsItems:
      $ref: en/ServiceSupportedScopesItems/ServiceSupportedScopesItemsDescriptionsItems.yaml
    ServiceSupportedScopesItemsAttributesItems:
      $ref: en/ServiceSupportedScopesItems/ServiceSupportedScopesItemsAttributesItems.yaml
    ServiceAttributesItems:
      $ref: en/ServiceAttributesItems.yaml
    ServiceHsksItems:
      $ref: en/ServiceHsksItems.yaml
    ServiceTrustAnchorsItems:
      $ref: en/ServiceTrustAnchorsItems.yaml
    ServiceCredentialIssuerMetadata:
      $ref: en/ServiceCredentialIssuerMetadata.yaml
    CredentialOfferInfoPropertiesItems:
      $ref: en/CredentialOfferInfoPropertiesItems.yaml
    ServiceGetApiResponse200Json1:
      type: object
      properties:
        number:
          type: integer
          format: int32
          readOnly: true
          description: The sequential number of the service. The value of this property is
            assigned by Authlete.
        serviceName:
          type: string
          description: The name of this service.
        issuer:
          type: string
          description: >
            The issuer identifier of the service.


            A URL that starts with  https:// and has no query or fragment
            component.


            The value of this property is used as `iss` claim in an [ID
            token](https://openid.net/specs/openid-connect-core-1_0.html#IDToken)

            and `issuer` property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        description:
          type: string
          description: The description about the service.
        apiKey:
          type: integer
          format: int64
          readOnly: true
          description: The service ID used in Authlete API calls. The value of this
            property is assigned by Authlete.
        clientIdAliasEnabled:
          type: boolean
          description: Deprecated. Always `true`.
        metadata:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1MetadataItems"
          description: >
            The `metadata` of the service. The content of the returned array
            depends on contexts.

            The predefined service metadata is listed in the following table.

              | Key | Description |
              | --- | --- |
              | `clientCount` | The number of client applications which belong to this service.  |
        createdAt:
          type: integer
          format: int64
          readOnly: true
          description: >
            The time at which this service was created. The value is represented
            as milliseconds since the

            UNIX epoch (`1970-01-01`).
        modifiedAt:
          type: integer
          format: int64
          readOnly: true
          description: >
            The time at which this service was last modified. The value is
            represented as milliseconds since

            the UNIX epoch (1970-01-01).
        authenticationCallbackEndpoint:
          type: string
          format: uri
          description: >
            A Web API endpoint for user authentication which is to be prepared
            on the service side.


            The endpoint must be implemented if you do not implement the UI at
            the authorization endpoint

            but use the one provided by Authlete.


            The user authentication at the authorization endpoint provided by
            Authlete is performed by making

            a `POST` request to this endpoint.
        authenticationCallbackApiKey:
          type: string
          description: >
            API key for basic authentication at the authentication callback
            endpoint.


            If the value is not empty, Authlete generates Authorization header
            for Basic authentication when

            making a request to the authentication callback endpoint.
        authenticationCallbackApiSecret:
          type: string
          description: API secret for `basic` authentication at the authentication
            callback endpoint.
        supportedAcrs:
          readOnly: true
          type: array
          items:
            type: string
          description: >
            Values of acrs (authentication context class references) that the
            service supports.


            The value of this property is used as `acr_values_supported`

            property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedGrantTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedGrantTypesIte\
              ms"
          description: >
            Values of `grant_type` request parameter that the service supports.


            The value of this property is used as `grant_types_supported
            property` in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedResponseTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedResponseTypes\
              Items"
          description: >
            Values of `response_type` request parameter that

            the service supports. Valid values are listed in Response Type.


            The value of this property is used as `response_types_supported`
            property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedAuthorizationDetailsTypes:
          type: array
          items:
            type: string
          description: >
            The supported data types that can be used as values of the type
            field in `authorization_details`.


            This property corresponds to the
            `authorization_details_types_supported` metadata. See "OAuth 2.0

            Rich Authorization Requests" (RAR) for details.
        supportedServiceProfiles:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedServiceProfil\
              esItems"
          description: |
            The profiles that this service supports.
        errorDescriptionOmitted:
          type: boolean
          description: >
            The flag to indicate whether the `error_description` response
            parameter is omitted.


            According to [RFC 6749](https://tools.ietf.org/html/rfc6749), an
            authorization server may include

            the `error_description` response parameter in error responses.


            If `true`, Authlete does not embed the `error_description` response
            parameter in error responses.
        errorUriOmitted:
          type: boolean
          description: >
            The flag to indicate whether the `error_uri` response parameter is
            omitted.


            According to [RFC 6749](https://tools.ietf.org/html/rfc6749), an
            authorization server may include the `error_uri` response parameter
            in error responses.


            If `true`, Authlete does not embed the

            `error_uri` response parameter in error responses.
        authorizationEndpoint:
          type: string
          format: uri
          description: >
            The authorization endpoint of the service.


            A URL that starts with `https://` and has no fragment component. For
            example, `https://example.com/auth/authorization`.


            The value of this property is used as `authorization_endpoint`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directAuthorizationEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct authorization endpoint is
            enabled or not.


            The path of the endpoint is
            `/api/auth/authorization/direct/service-api-key`.
        supportedUiLocales:
          type: array
          items:
            type: string
          description: >
            UI locales that the service supports.


            Each element is a language tag defined in [RFC
            5646](https://tools.ietf.org/html/rfc5646). For example, `en-US` and
            `ja-JP`.


            The value of this property is used as `ui_locales_supported`
            property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedDisplays:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedDisplaysItems"
          description: >
            Values of `display` request parameter that service supports.


            The value of this property is used as `display_values_supported`
            property in the Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        pkceRequired:
          type: boolean
          description: >
            The flag to indicate whether the use of Proof Key for Code Exchange
            (PKCE) is always required for authorization requests by
            Authorization Code Flow.


            If `true`, `code_challenge` request parameter is always required for
            authorization requests using Authorization Code Flow.


            See [RFC 7636](https://tools.ietf.org/html/rfc7636) (Proof Key for
            Code Exchange by OAuth Public Clients) for details about
            `code_challenge` request parameter.
        pkceS256Required:
          type: boolean
          description: >
            The flag to indicate whether `S256` is always required as the code
            challenge method whenever [PKCE (RFC
            7636)](https://tools.ietf.org/html/rfc7636) is used.


            If this flag is set to `true`, `code_challenge_method=S256` must be
            included in the authorization request

            whenever it includes the `code_challenge` request parameter.

            Neither omission of the `code_challenge_method` request parameter
            nor use of plain (`code_challenge_method=plain`) is allowed.
        authorizationResponseDuration:
          type: integer
          format: int64
          description: >
            The duration of authorization response JWTs in seconds.


            [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            defines new values for the `response_mode` request parameter. They
            are `query.jwt`, `fragment.jwt`,

            `form_post.jwt` and `jwt`. If one of them is specified as the
            response mode, response parameters

            from the authorization endpoint will be packed into a JWT. This
            property is used to compute the

            value of the `exp` claim of the JWT.
        tokenEndpoint:
          type: string
          format: uri
          description: >
            The [token
            endpoint](https://tools.ietf.org/html/rfc6749#section-3.2) of the
            service.


            A URL that starts with `https://` and has not fragment component.
            For example, `https://example.com/auth/token`.


            The value of this property is used as `token_endpoint` property in
            the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directTokenEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct token endpoint is enabled or
            not. The path of the endpoint

            is `/api/auth/token/direct/service-api-key`.
        supportedTokenAuthMethods:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedTokenAuthMeth\
              odsItems"
          description: >
            Client authentication methods supported by the token endpoint of the
            service.


            The value of this property is used as
            `token_endpoint_auth_methods_supports` property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        missingClientIdAllowed:
          type: boolean
          description: >
            The flag to indicate token requests from public clients without the
            `client_id` request parameter are allowed when the client can be
            guessed from `authorization_code` or `refresh_token`.


            This flag should not be set unless you have special reasons.
        revocationEndpoint:
          type: string
          format: uri
          description: >
            The [revocation endpoint](https://tools.ietf.org/html/rfc7009) of
            the service.


            A URL that starts with `https://`. For example,
            `https://example.com/auth/revocation`.
        directRevocationEndpointEnabled:
          type: boolean
          description: "The flag to indicate whether the direct revocation endpoint is
            enabled or not. The URL of the endpoint is
            `/api/auth/revocation/direct/service-api-key`. "
        supportedRevocationAuthMethods:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedRevocationAut\
              hMethodsItems"
          description: |
            Client authentication methods supported at the revocation endpoint.
        introspectionEndpoint:
          type: string
          description: The URI of the introspection endpoint.
          format: uri
        directIntrospectionEndpointEnabled:
          type: boolean
          description: "The flag to indicate whether the direct userinfo endpoint is
            enabled or not. The path of the endpoint is
            `/api/auth/userinfo/direct/{serviceApiKey}`. "
        supportedIntrospectionAuthMethods:
          type: array
          description: >
            Client authentication methods supported at the introspection
            endpoint.
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedIntrospection\
              AuthMethodsItems"
        pushedAuthReqEndpoint:
          type: string
          description: >
            The URI of the pushed authorization request endpoint.


            This property corresponds to the
            `pushed_authorization_request_endpoint` metadata defined in "[5.
            Authorization Server
            Metadata](https://tools.ietf.org/html/draft-lodderstedt-oauth-par#section-5)"
            of OAuth 2.0 Pushed Authorization Requests.
          format: uri
        pushedAuthReqDuration:
          type: integer
          format: int64
          description: >
            The duration of pushed authorization requests in seconds.


            [OAuth 2.0 Pushed Authorization
            Requests](https://tools.ietf.org/html/draft-lodderstedt-oauth-par)

            defines an endpoint (called "pushed authorization request endpoint")
            which client applications

            can register authorization requests into and get corresponding URIs
            (called "request URIs") from.

            The issued URIs represent the registered authorization requests. The
            client applications can use

            the URIs as the value of the `request_uri` request parameter in an
            authorization request.


            The property represents the duration of registered authorization
            requests and is used as the value

            of the `expires_in` parameter in responses from the pushed
            authorization request endpoint.
        parRequired:
          type: boolean
          description: >
            The flag to indicate whether this service requires that clients use
            the pushed authorization

            request endpoint.


            This property corresponds to the
            `require_pushed_authorization_requests` server metadata defined

            in [OAuth 2.0 Pushed Authorization
            Requests](https://tools.ietf.org/html/draft-lodderstedt-oauth-par).
        requestObjectRequired:
          type: boolean
          description: >
            The flag to indicate whether this service requires that
            authorization requests always utilize

            a request object by using either request or `request_uri` request
            parameter.


            If this flag is set to `true` and the value of
            `traditionalRequestObjectProcessingApplied` is

            `false`, the value of `require_signed_request_object` server
            metadata of this service is reported

            as `true` in the discovery document. The metadata is defined in JAR
            (JWT Secured Authorization Request).

            That `require_signed_request_object` is `true` means that
            authorization requests which don't

            conform to the JAR specification are rejected.
        traditionalRequestObjectProcessingApplied:
          type: boolean
          description: >
            The flag to indicate whether a request object is processed based on
            rules defined in

            [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) or JAR
            (JWT

            Secured Authorization Request).


            Differences between rules in OpenID Connect Core 1.0 and ones in JAR
            are as follows.
              - JAR requires that a request object be always -signed.
              - JAR does not allow request parameters outside a request object to be referred to.
              - OIDC Core 1.0 requires that response_type request parameter exist outside a request object even if the request object includes the request parameter.
              - OIDC Core 1.0 requires that scope request parameter exist outside a request object if the authorization request is an
              - OIDC request even if the request object includes the request parameter.

            If this flag is set to `false` and the value of
            `requestObjectRequired` is `true`, the value of

            `require_signed_request_object` server metadata of this service

            is reported as `true` in the discovery document. The metadata is
            defined in JAR (JWT Secured

            Authorization Request). That `require_signed_request_object` is
            `true` means that authorization

            requests which don't conform to the JAR specification are rejected.
        mutualTlsValidatePkiCertChain:
          type: boolean
          description: >
            The flag to indicate whether this service validates certificate
            chains during PKI-based client mutual TLS authentication.
        trustedRootCertificates:
          type: array
          items:
            type: string
          description: >
            The list of root certificates trusted by this service for PKI-based
            client mutual TLS authentication.
        mtlsEndpointAliases:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1MtlsEndpointAliasesIte\
              ms"
          description: >
            The MTLS endpoint aliases.


            This property corresponds to the mtls_endpoint_aliases metadata
            defined in "5. Metadata for Mutual TLS Endpoint Aliases" of [OAuth
            2.0 Mutual TLS Client Authentication and Certificate-Bound Access
            Tokens](https://datatracker.ietf.org/doc/rfc8705/).


            The aliases will be embedded in the response from the discovery
            endpoint like the following.


            ```json

            {
              ......,
              "mtls_endpoint_aliases": {
                "token_endpoint":         "https://mtls.example.com/token",
                "revocation_endpoint":    "https://mtls.example.com/revo",
                "introspection_endpoint": "https://mtls.example.com/introspect"
              }
            }

            ```
        accessTokenType:
          type: string
          description: >
            The access token type.


            This value is used as the value of `token_type` property in access
            token responses. If this service

            complies with [RFC 6750](https://tools.ietf.org/html/rfc6750), the
            value of this property should

            be `Bearer`.


            See [RFC 6749 (OAuth 2.0), 7.1. Access Token
            Types](https://tools.ietf.org/html/rfc6749#section-7.1) for details.
        tlsClientCertificateBoundAccessTokens:
          type: boolean
          description: >
            The flag to indicate whether this service supports issuing TLS
            client certificate bound access tokens.
        accessTokenDuration:
          type: integer
          format: int64
          description: >
            The duration of access tokens in seconds. This value is used as the
            value of `expires_in` property

            in access token responses. `expires_in` is defined [RFC 6749, 5.1.
            Successful
            Response](https://tools.ietf.org/html/rfc6749#section-5.1).
        singleAccessTokenPerSubject:
          type: boolean
          description: >
            The flag to indicate whether the number of access tokens per subject
            (and per client) is at most one or can be more.


            If `true`, an attempt to issue a new access token invalidates
            existing access tokens that are associated with the same subject and
            the same client.


            Note that, however, attempts by [Client Credentials
            Flow](https://tools.ietf.org/html/rfc6749#section-4.4) do not
            invalidate existing access tokens because access tokens issued by
            Client Credentials Flow are not associated with any end-user's
            subject. Also note that an attempt by [Refresh Token
            Flow](https://tools.ietf.org/html/rfc6749#section-6) invalidates the
            coupled access token only and this invalidation is always performed
            regardless of whether the value of this setting item is `true` or
            `false`.
        accessTokenSignAlg:
          $ref: "#/components/schemas/ServiceGetApiResponse200Json1AccessTokenSignAlg"
        accessTokenSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for signing access tokens.


            A JWK Set can be registered as a property of a service. A JWK Set
            can contain 0 or more JWKs.

            Authlete Server has to pick up one JWK for signing from the JWK Set
            when it generates a JWT-based

            access token. Authlete Server searches the registered JWK Set for a
            JWK which satisfies conditions

            for access token signature. If the number of JWK candidates which
            satisfy the conditions is 1,

            there is no problem. On the other hand, if there exist multiple
            candidates, a Key ID is needed

            to be specified so that Authlete Server can pick up one JWK from
            among the JWK candidates.
        refreshTokenDuration:
          type: integer
          format: int64
          description: The duration of refresh tokens in seconds. The related
            specifications have no requirements on refresh token duration, but
            Authlete sets expiration for refresh tokens.
        refreshTokenDurationKept:
          type: boolean
          description: >
            The flag to indicate whether the remaining duration of the used
            refresh token is taken over to

            the newly issued refresh token.
        refreshTokenDurationReset:
          type: boolean
          description: >
            The flag which indicates whether duration of refresh tokens are
            reset when they are used even

            if the `refreshTokenKept` property of this service set to is `true`
            (= even if "Refresh Token

            Continuous Use" is "Kept").


            This flag has no effect when the `refreshTokenKept` property is set
            to `false`. In other words,

            if this service issues a new refresh token on every refresh token
            request, the refresh token

            will have fresh duration (unless `refreshTokenDurationKept` is set
            to `true`) and this

            `refreshTokenDurationReset` property is not referenced.
        refreshTokenKept:
          type: boolean
          description: >
            The flag to indicate whether a refresh token remains unchanged or
            gets renewed after its use.


            If `true`, a refresh token used to get a new access token remains
            valid after its use. Otherwise, if `false`, a refresh token is
            invalidated after its use and a new refresh token is issued.


            See [RFC 6749 6. Refreshing an Access
            Token](https://tools.ietf.org/html/rfc6749#section-6), as to how to
            get a new access token using a refresh token.
        supportedScopes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedScopesItems"
          description: >
            Scopes supported by the service.


            Authlete strongly recommends that the service register at least the
            following scopes.


            | Name | Description |

            | --- | --- |

            | openid | A permission to get an ID token of an end-user. The
            `openid` scope appears in [OpenID Connect Core 1.0, 3.1.2.1.
            Authentication Request,
            scope](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
            Without this scope, Authlete does not allow `response_type` request
            parameter to have values other than code and token. |

            | profile | A permission to get information about `name`,
            `family_name`, `given_name`, `middle_name`, `nickname`,
            `preferred_username`, `profile`, `picture`, `website`, `gender`,
            `birthdate`, `zoneinfo`, `locale` and `updated_at` from the user
            info endpoint. See [OpenID Connect Core 1.0, 5.4. Requesting Claims
            using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | email | A permission to get information about `email` and
            `email_verified` from the user info endpoint. See [OpenID Connect
            Core 1.0, 5.4. Requesting Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | address | A permission to get information about address from the
            user info endpoint. See [OpenID Connect Core 1.0, 5.4. Requesting
            Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            and [5.1.1. Address
            Claim](https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim)
            for details. |

            | phone | A permission to get information about `phone_number` and
            `phone_number_verified` from the user info endpoint. See [OpenID
            Connect Core 1.0, 5.4. Requesting Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | offline_access | A permission to get information from the user
            info endpoint even when the end-user is not present. See [OpenID
            Connect Core 1.0, 11. Offline
            Access](https://openid.net/specs/openid-connect-core-1_0.html#OfflineAccess)
            for details. |


            The value of this property is used as `scopes_supported` property in
            the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        scopeRequired:
          type: boolean
          description: >
            The flag to indicate whether requests that request no scope are
            rejected or not.


            When a request has no explicit `scope` parameter and the service's
            pre-defined default scope set is empty,

            the authorization server regards the request requests no scope. When
            this flag is set to `true`,

            requests that request no scope are rejected.


            The requirement below excerpted from [RFC 6749 Section
            3.3](https://tools.ietf.org/html/rfc6749#section-3.3)

            does not explicitly mention the case where the default scope set is
            empty.


            > If the client omits the scope parameter when requesting
            authorization, the authorization server

            MUST either process the request using a pre-defined default value or
            fail the request indicating an invalid scope.


            However, if you interpret *"the default scope set exists but is
            empty"* as *"the default scope set does not exist"*

            and want to strictly conform to the requirement above, this flag has
            to be `true`.
        idTokenDuration:
          type: integer
          format: int64
          description: >
            'The duration of [ID
            token](https://openid.net/specs/openid-connect-core-1_0.html#IDToken)s

            in seconds. This value is used to calculate the value of `exp` claim
            in an ID token.'
        allowableClockSkew:
          type: integer
          format: int32
          description: >
            The allowable clock skew between the server and clients in seconds.


            The clock skew is taken into consideration when time-related claims
            in a JWT (e.g. `exp`, `iat`, `nbf`) are verified.
        supportedClaimTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedClaimTypesIte\
              ms"
          description: >
            Claim types supported by the service. Valid values are listed in
            Claim Type. Note that Authlete

            currently doesn't provide any API to help implementations for
            `AGGREGATED` and `DISTRIBUTED`.


            The value of this property is used as `claim_types_supported`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedClaimLocales:
          type: array
          items:
            type: string
          description: >
            Claim locales that the service supports. Each element is a language
            tag defined in [RFC 5646](https://tools.ietf.org/html/rfc5646).

            For example, `en-US` and `ja-JP`. See [OpenID Connect Core 1.0, 5.2.
            Languages and
            Scripts](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts)

            for details.


            The value of this property is used as `claims_locales_supported`
            property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedClaims:
          type: array
          items:
            type: string
          description: >
            Claim names that the service supports. The standard claim names
            listed in [OpenID Connect Core 1.0,

            5.1. Standard
            Claim](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims)
            should

            be supported. The following is the list of standard claims.


            - `sub`

            - `name`

            - `given_name`

            - `family_name`

            - `middle_name`

            - `nickname`

            - `preferred_username`

            - `profile`

            - `picture`

            - `website`

            - `email`

            - `email_verified`

            - `gender`

            - `birthdate`

            - `zoneinfo`

            - `locale`

            - `phone_number`

            - `phone_number_verified`

            - `address`

            - `updated_at`


            The value of this property is used as `claims_supported` property in
            the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).


            The service may support its original claim names. See [OpenID
            Connect Core 1.0, 5.1.2. Additional

            Claims](https://openid.net/specs/openid-connect-core-1_0.html#AdditionalClaims).
        claimShortcutRestrictive:
          type: boolean
          description: >
            The flag indicating whether claims specified by shortcut scopes
            (e.g. `profile`) are included

            in the issued ID token only when no access token is issued.


            To strictly conform to the description below excerpted from [OpenID
            Connect Core 1.0 Section

            5.4](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims),
            this flag has to be `true`.


            > The Claims requested by the profile, email, address, and phone
            scope values are returned from

            the UserInfo Endpoint, as described in Section 5.3.2, when a
            response_type value is used that

            results in an Access Token being issued. However, when no Access
            Token is issued (which is the

            case for the response_type value id_token), the resulting Claims are
            returned in the ID Token.
        jwksUri:
          type: string
          format: uri
          description: >
            The URL of the service's [JSON Web Key
            Set](https://tools.ietf.org/html/rfc7517) document. For

            example, `http://example.com/auth/jwks`.


            Client applications accesses this URL (1) to get the public key of
            the service to validate the

            signature of an ID token issued by the service and (2) to get the
            public key of the service to

            encrypt an request object of the client application. See [OpenID
            Connect Core 1.0, 10. Signatures

            and
            Encryption](https://openid.net/specs/openid-connect-core-1_0.html#SigEnc)
            for details.


            The value of this property is used as `jwks_uri` property in the
            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directJwksEndpointEnabled:
          type: boolean
          description: >
            'The flag to indicate whether the direct jwks endpoint is enabled or
            not. The path of the endpoint

            is `/api/service/jwks/get/direct/service-api-key`. '
        jwks:
          type: string
          description: >
            The content of the service's [JSON Web Key
            Set](https://tools.ietf.org/html/rfc7517) document.


            If this property is not `null` in a `/service/create` request or a
            `/service/update` request,

            Authlete hosts the content in the database. This property must not
            be `null` and must contain

            pairs of public/private keys if the service wants to support
            asymmetric signatures for ID tokens

            and asymmetric encryption for request objects. See [OpenID Connect
            Core 1.0, 10. Signatures and

            Encryption](https://openid.net/specs/openid-connect-core-1_0.html#SigEnc)
            for details.
        idTokenSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for ID token signature using an
            asymmetric key.


            A JWK Set can be registered as a property of a Service. A JWK Set
            can contain 0 or more JWKs

            (See [RFC 7517](https://tools.ietf.org/html/rfc7517) for details
            about JWK). Authlete Server has

            to pick up one JWK for signature from the JWK Set when it generates
            an ID token and signature

            using an asymmetric key is required. Authlete Server searches the
            registered JWK Set for a JWK

            which satisfies conditions for ID token signature. If the number of
            JWK candidates which satisfy

            the conditions is 1, there is no problem. On the other hand, if
            there exist multiple candidates,

            a [Key ID](https://tools.ietf.org/html/rfc7517#section-4.5) is
            needed to be specified so that

            Authlete Server can pick up one JWK from among the JWK candidates.


            This `idTokenSignatureKeyId` property exists for the purpose
            described above. For key rotation

            (OpenID Connect Core 1.0, [10.1.1. Rotation of Asymmetric Signing
            Keys](http://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys)),

            this mechanism is needed.
        userInfoSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for user info signature using an
            asymmetric key.


            A JWK Set can be registered as a property of a Service. A JWK Set
            can contain 0 or more JWKs

            (See [RFC 7517](https://tools.ietf.org/html/rfc7517) for details
            about JWK). Authlete Server has

            to pick up one JWK for signature from the JWK Set when it is
            required to sign user info (which

            is returned from [userinfo
            endpoint](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo))

            using an asymmetric key. Authlete Server searches the registered JWK
            Set for a JWK which satisfies

            conditions for user info signature. If the number of JWK candidates
            which satisfy the conditions

            is 1, there is no problem. On the other hand, if there exist
            multiple candidates, a [Key
            ID](https://tools.ietf.org/html/rfc7517#section-4.5)

            is needed to be specified so that Authlete Server can pick up one
            JWK from among the JWK candidates.


            This `userInfoSignatureKeyId` property exists for the purpose
            described above. For key rotation

            (OpenID Connect Core 1.0, [10.1.1. Rotation of Asymmetric Signing
            Keys](http://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys)),

            this mechanism is needed.
        authorizationSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for signing authorization
            responses using an asymmetric key.


            [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            defines new values for the `response_mode` request parameter. They
            are `query.jwt`, `fragment.jwt`,

            `form_post.jwt` and `jwt`. If one of them is specified as the
            response mode, response parameters

            from the authorization endpoint will be packed into a JWT. This
            property is used to compute the

            value of the `exp` claim of the JWT.


            Authlete Server searches the JWK Set for a JWK which satisfies
            conditions for authorization response

            signature. If the number of JWK candidates which satisfy the
            conditions is 1, there is no problem.

            On the other hand, if there exist multiple candidates, a Key ID is
            needed to be specified so that

            Authlete Server can pick up one JWK from among the JWK candidates.
            This property exists to specify

            the key ID.
        userInfoEndpoint:
          type: string
          description: >
            The [user info
            endpoint](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo)
            of the

            service. A URL that starts with `https://`. For example,
            `https://example.com/auth/userinfo`.


            The value of this property is used as `userinfo_endpoint` property
            in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        directUserInfoEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct userinfo endpoint is enabled
            or not. The path

            of the endpoint is `/api/auth/userinfo/direct/service-api-key`.
        dynamicRegistrationSupported:
          type: boolean
          description: >
            The boolean flag which indicates whether the [OAuth 2.0 Dynamic
            Client Registration Protocol](https://tools.ietf.org/html/rfc7591)

            is supported.
        registrationEndpoint:
          type: string
          description: >
            The [registration
            endpoint](http://openid.net/specs/openid-connect-registration-1_0.html#ClientRegistration)

            of the service. A URL that starts with `https://`. For example,
            `https://example.com/auth/registration`.


            The value of this property is used as `registration_endpoint`
            property in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        registrationManagementEndpoint:
          type: string
          description: >
            The URI of the registration management endpoint. If dynamic client
            registration is supported,

            and this is set, this URI will be used as the basis of the client's
            management endpoint by appending

            `/clientid}/` to it as a path element. If this is unset, the value
            of `registrationEndpoint` will

            be used as the URI base instead.
          format: uri
        policyUri:
          type: string
          description: >
            The URL of the "Policy" of the service.


            The value of this property is used as `op_policy_uri` property in
            the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        tosUri:
          type: string
          description: >
            The URL of the "Terms Of Service" of the service.


            The value of this property is used as `op_tos_uri` property in the
            [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        serviceDocumentation:
          type: string
          description: >
            The URL of a page where documents for developers can be found.


            The value of this property is used as `service_documentation`
            property in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        backchannelAuthenticationEndpoint:
          type: string
          description: >
            The URI of backchannel authentication endpoint, which is defined in
            the specification of [CIBA

            (Client Initiated Backchannel
            Authentication)](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html).
          format: uri
        supportedBackchannelTokenDeliveryModes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedBackchannelTo\
              kenDeliveryModesItems"
          description: >
            The supported backchannel token delivery modes. This property
            corresponds to the `backchannel_token_delivery_modes_supported`

            metadata.


            Backchannel token delivery modes are defined in the specification of
            [CIBA (Client Initiated

            Backchannel
            Authentication)](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html).
        backchannelAuthReqIdDuration:
          type: integer
          format: int32
          description: >
            The duration of backchannel authentication request IDs issued from
            the backchannel authentication

            endpoint in seconds. This is used as the value of the `expires_in`
            property in responses from

            the backchannel authentication endpoint.
        backchannelPollingInterval:
          type: integer
          format: int32
          description: >
            The minimum interval between polling requests to the token endpoint
            from client applications in

            seconds. This is used as the value of the `interval` property in
            responses from the backchannel

            authentication endpoint.
        backchannelUserCodeParameterSupported:
          type: boolean
          description: >
            The boolean flag which indicates whether the `user_code` request
            parameter is supported at the

            backchannel authentication endpoint. This property corresponds to
            the `backchannel_user_code_parameter_supported`

            metadata.
        backchannelBindingMessageRequiredInFapi:
          type: boolean
          description: >
            The flag to indicate whether the `binding_message` request parameter
            is always required whenever

            a backchannel authentication request is judged as a request for
            Financial-grade API.


            The FAPI-CIBA profile requires that the authorization server _"shall
            ensure unique authorization

            context exists in the authorization request or require a
            `binding_message` in the authorization

            request"_ (FAPI-CIBA, 5.2.2, 2). The simplest way to fulfill this
            requirement is to set this property

            to `true`.


            If this property is set to `false`, the `binding_message` request
            parameter remains optional

            even in FAPI context, but in exchange, your authorization server
            must implement a custom mechanism

            that ensures each backchannel authentication request has unique
            context.
        deviceAuthorizationEndpoint:
          type: string
          format: uri
          description: >
            The URI of the device authorization endpoint.


            Device authorization endpoint is defined in the specification of
            OAuth 2.0 Device Authorization Grant.
        deviceVerificationUri:
          type: string
          format: uri
          description: >
            The verification URI for the device flow. This URI is used as the
            value of the `verification_uri`

            parameter in responses from the device authorization endpoint.
        deviceVerificationUriComplete:
          type: string
          format: uri
          description: >
            The verification URI for the device flow with a placeholder for a
            user code. This URI is used

            to build the value of the `verification_uri_complete` parameter in
            responses from the device

            authorization endpoint.


            It is expected that the URI contains a fixed string `USER_CODE`
            somewhere as a placeholder for

            a user code. For example, like the following.


            `https://example.com/device?user\_code=USER\_CODE`


            The fixed string is replaced with an actual user code when Authlete
            builds a verification URI

            with a user code for the `verification_uri_complete` parameter.


            If this URI is not set, the `verification_uri_complete` parameter
            won't appear in device authorization

            responses.
        deviceFlowCodeDuration:
          type: integer
          format: int32
          description: >
            The duration of device verification codes and end-user verification
            codes issued from the device

            authorization endpoint in seconds. This is used as the value of the
            `expires_in` property in responses

            from the device authorization endpoint.
        deviceFlowPollingInterval:
          type: integer
          format: int32
          description: >
            The minimum interval between polling requests to the token endpoint
            from client applications in

            seconds in device flow. This is used as the value of the `interval`
            property in responses from

            the device authorization endpoint.
        userCodeCharset:
          $ref: "#/components/schemas/ServiceGetApiResponse200Json1UserCodeCharset"
        userCodeLength:
          type: integer
          format: int32
          description: >
            The length of end-user verification codes (`user_code`) for Device
            Flow.
        supportedTrustFrameworks:
          type: array
          items:
            type: string
          description: >
            Trust frameworks supported by this service. This corresponds to the
            `trust_frameworks_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedEvidence:
          type: array
          items:
            type: string
          description: >
            Evidence supported by this service. This corresponds to the
            `evidence_supported`
            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedIdentityDocuments:
          type: array
          items:
            type: string
          description: >
            Identity documents supported by this service. This corresponds to
            the `id_documents_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedVerificationMethods:
          type: array
          items:
            type: string
          description: >
            Verification methods supported by this service. This corresponds to
            the `id_documents_verification_methods_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedVerifiedClaims:
          type: array
          items:
            type: string
          description: >
            Verified claims supported by this service. This corresponds to the
            `claims_in_verified_claims_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        verifiedClaimsValidationSchemaSet:
          $ref: "#/components/schemas/ServiceGetApiResponse200Json1VerifiedClaimsValidati\
            onSchemaSet"
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1AttributesItems"
          description: |
            The attributes of this service.
        nbfOptional:
          type: boolean
          description: >
            The flag indicating whether the nbf claim in the request object is
            optional even when the authorization

            request is regarded as a FAPI-Part2 request.


            The final version of Financial-grade API was approved in January,
            2021. The Part 2 of the final

            version has new requirements on lifetime of request objects. They
            require that request objects

            contain an `nbf` claim and the lifetime computed by `exp` - `nbf` be
            no longer than 60 minutes.


            Therefore, when an authorization request is regarded as a FAPI-Part2
            request, the request object

            used in the authorization request must contain an nbf claim.
            Otherwise, the authorization server

            rejects the authorization request.


            When this flag is `true`, the `nbf` claim is treated as an optional
            claim even when the authorization

            request is regarded as a FAPI-Part2 request. That is, the
            authorization server does not perform

            the validation on lifetime of the request object.


            Skipping the validation is a violation of the FAPI specification.
            The reason why this flag has

            been prepared nevertheless is that the new requirements (which do
            not exist in the Implementer's

            Draft 2 released in October, 2018) have big impacts on deployed
            implementations of client

            applications and Authlete thinks there should be a mechanism whereby
            to make the migration

            from ID2 to Final smooth without breaking live systems.
        issSuppressed:
          type: boolean
          description: >
            The flag indicating whether generation of the iss response parameter
            is suppressed.


            "OAuth 2.0 Authorization Server Issuer Identifier in Authorization
            Response" has defined a new

            authorization response parameter, `iss`, as a countermeasure for a
            certain type of mix-up attacks.


            The specification requires that the `iss` response parameter always
            be included in authorization

            responses unless JARM (JWT Secured Authorization Response Mode) is
            used.


            When this flag is `true`, the authorization server does not include
            the `iss` response parameter

            in authorization responses. By turning this flag on and off,
            developers of client applications

            can experiment the mix-up attack and the effect of the `iss`
            response parameter.


            Note that this flag should not be `true` in production environment
            unless there are special

            reasons for it.
        supportedCustomClientMetadata:
          type: array
          items:
            type: string
          description: >
            custom client metadata supported by this service.


            Standard specifications define client metadata as necessary. The
            following are such examples.


            * [OpenID Connect Dynamic Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)

            * [RFC 7591 OAuth 2.0 Dynamic Client Registration
            Protocol](https://www.rfc-editor.org/rfc/rfc7591.html)

            * [RFC 8705 OAuth 2.0 Mutual-TLS Client Authentication and
            Certificate-Bound Access
            Tokens](https://www.rfc-editor.org/rfc/rfc8705.html)

            * [OpenID Connect Client-Initiated Backchannel Authentication Flow -
            Core
            1.0](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html)

            * [The OAuth 2.0 Authorization Framework: JWT Secured Authorization
            Request
            (JAR)](https://datatracker.ietf.org/doc/draft-ietf-oauth-jwsreq/)

            * [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            * [OAuth 2.0 Pushed Authorization Requests
            (PAR)](https://datatracker.ietf.org/doc/rfc9126/)

            * [OAuth 2.0 Rich Authorization Requests
            (RAR)](https://datatracker.ietf.org/doc/draft-ietf-oauth-rar/)


            Standard client metadata included in Client Registration Request and
            Client Update Request (cf.

            [OIDC
            DynReg](https://openid.net/specs/openid-connect-registration-1_0.html),
            [RFC 7591](https://www.rfc-editor.org/rfc/rfc7591.html)

            and [RFC 7592](https://www.rfc-editor.org/rfc/rfc7592.html)) are, if
            supported by Authlete, stored

            into Authlete database. On the other hand, unrecognized client
            metadata are discarded.


            By listing up custom client metadata in advance by using this
            property (`supportedCustomClientMetadata`),

            Authlete can recognize them and stores their values into the
            database. The stored custom client

            metadata values can be referenced by `customMetadata`.
        tokenExpirationLinked:
          type: boolean
          description: >
            The flag indicating whether the expiration date of an access token
            never exceeds that of the

            corresponding refresh token.


            When a new access token is issued by a refresh token request (= a
            token request with `grant_type=refresh_token`),

            the expiration date of the access token may exceed the expiration
            date of the corresponding

            refresh token. This behavior itself is not wrong and may happen when
            `refreshTokenKept` is

            `true` and/or when `refreshTokenDurationKept` is `true`.


            When this flag is `true`, the expiration date of an access token
            never exceeds that of the corresponding

            refresh token regardless of the calculated duration based on other
            settings such as `accessTokenDuration`,

            `accessTokenDuration` in `extension` and `access_token.duration`
            scope attribute.


            It is technically possible to set a value which is bigger than the
            duration of refresh tokens

            as the duration of access tokens although it is strange. In the
            case, the duration of an access

            token becomes longer than the duration of the refresh token which is
            issued together with the

            access token. Even if the duration values are configured so, if this
            flag is `true`, the expiration

            date of the access token does not exceed that of the refresh token.
            That is, the duration of

            the access token will be shortened, and as a result, the access
            token and the refresh token

            will have the same expiration date.
        frontChannelRequestObjectEncryptionRequired:
          type: boolean
          description: >
            The flag indicating whether encryption of request object is required
            when the request object

            is passed through the front channel.


            This flag does not affect the processing of request objects at the
            Pushed Authorization Request

            Endpoint, which is defined in [OAuth 2.0 Pushed Authorization
            Requests](https://datatracker.ietf.org/doc/rfc9126/).

            Unecrypted request objects are accepted at the endpoint even if this
            flag is `true`.


            This flag does not indicate whether a request object is always
            required. There is a different

            flag, `requestObjectRequired`, for the purpose. See the description
            of `requestObjectRequired`

            for details.


            Even if this flag is `false`, encryption of request object is
            required if the `frontChannelRequestObjectEncryptionRequired`

            flag of the client is `true`.
        requestObjectEncryptionAlgMatchRequired:
          type: boolean
          description: >
            The flag indicating whether the JWE alg of encrypted request object
            must match the `request_object_encryption_alg`

            client metadata of the client that has sent the request object.


            The request_object_encryption_alg client metadata itself is defined
            in [OpenID Connect Dynamic

            Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)
            as follows.


            > request_object_encryption_alg

            >

            > OPTIONAL. JWE [JWE] alg algorithm [JWA] the RP is declaring that
            it may use for encrypting

            Request Objects sent to the OP. This parameter SHOULD be included
            when symmetric encryption

            will be used, since this signals to the OP that a client_secret
            value needs to be returned

            from which the symmetric key will be derived, that might not
            otherwise be returned. The RP

            MAY still use other supported encryption algorithms or send
            unencrypted Request Objects, even

            when this parameter is present. If both signing and encryption are
            requested, the Request Object

            will be signed then encrypted, with the result being a Nested JWT,
            as defined in [JWT]. The

            default, if omitted, is that the RP is not declaring whether it
            might encrypt any Request Objects.


            The point here is "The RP MAY still use other supported encryption
            algorithms or send unencrypted

            Request Objects, even when this parameter is present."


            The Client's property that represents the client metadata is
            `requestEncryptionAlg`. See the

            description of `requestEncryptionAlg` for details.


            Even if this flag is `false`, the match is required if the
            `requestObjectEncryptionAlgMatchRequired`

            flag of the client is `true`.
        requestObjectEncryptionEncMatchRequired:
          type: boolean
          description: >
            The flag indicating whether the JWE `enc` of encrypted request
            object must match the `request_object_encryption_enc`

            client metadata of the client that has sent the request object.


            The `request_object_encryption_enc` client metadata itself is
            defined in [OpenID Connect Dynamic

            Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)
            as follows.


            > request_object_encryption_enc

            >

            > OPTIONAL. JWE enc algorithm [JWA] the RP is declaring that it may
            use for encrypting Request

            Objects sent to the OP. If request_object_encryption_alg is
            specified, the default for this

            value is A128CBC-HS256. When request_object_encryption_enc is
            included, request_object_encryption_alg

            MUST also be provided.


            The Client's property that represents the client metadata is
            `requestEncryptionEnc`. See the

            description of `requestEncryptionEnc` for details.


            Even if this flag is false, the match is required if the
            `requestObjectEncryptionEncMatchRequired`

            flag is `true`.
        hsmEnabled:
          type: boolean
          description: >
            The flag indicating whether HSM (Hardware Security Module) support
            is enabled for this service.


            When this flag is `false`, keys managed in HSMs are not used even if
            they exist. In addition,

            `/api/hsk/*` APIs reject all requests.


            Even if this flag is `true`, HSM-related features do not work if the
            configuration of the Authlete

            server you are using does not support HSM.
        hsks:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1HsksItems"
          description: >
            The information about keys managed on HSMs (Hardware Security
            Modules).


            This `hsks` property is output only, meaning that `hsks` in requests
            to `/api/service/create`

            API and `/api/service/update` API do not have any effect. The
            contents of this property is controlled

            only by `/api/hsk/*` APIs.
        grantManagementEndpoint:
          type: string
          description: |
            The URL of the grant management endpoint.
        grantManagementActionRequired:
          type: boolean
          description: >
            The flag indicating whether every authorization request (and any
            request serving as an authorization

            request such as CIBA backchannel authentication request and device
            authorization request) must

            include the `grant_management_action` request parameter.


            This property corresponds to the `grant_management_action_required`
            server metadata defined

            in [Grant Management for OAuth
            2.0](https://openid.net/specs/fapi-grant-management.html).


            Note that setting true to this property will result in blocking all
            public clients because

            the specification requires that grant management be usable only by
            confidential clients for

            security reasons.
        unauthorizedOnClientConfigSupported:
          type: boolean
          description: >
            The flag indicating whether Authlete's `/api/client/registration`
            API uses `UNAUTHORIZED` as

            a value of the `action` response parameter when appropriate.


            The `UNAUTHORIZED` enum value was initially not defined as a
            possible value of the `action`

            parameter in an `/api/client/registration` API response. This means
            that implementations of

            client `configuration` endpoint were not able to conform to [RFC
            7592](https://www.rfc-editor.org/rfc/rfc7592.html)

            strictly.


            For backward compatibility (to avoid breaking running systems),
            Authlete's `/api/client/registration`

            API does not return the `UNAUTHORIZED` enum value if this flag is
            not turned on.


            The steps an existing implementation of client configuration
            endpoint has to do in order to

            conform to the requirement related to "401 Unauthorized" are as
            follows.


            1. Update the Authlete library (e.g. authlete-java-common) your
            system is using.

            2. Update your implementation of client configuration endpoint so
            that it can handle the

            `UNAUTHORIZED` action.

            3. Turn on this `unauthorizedOnClientConfigSupported` flag.
        dcrScopeUsedAsRequestable:
          type: boolean
          description: >
            The flag indicating whether the `scope` request parameter in dynamic
            client registration and

            update requests (RFC 7591 and RFC 7592) is used as scopes that the
            client can request.


            Limiting the range of scopes that a client can request is achieved
            by listing scopes in the

            `client.extension.requestableScopes` property and setting the
            `client.extension.requestableScopesEnabled`

            property to `true`. This feature is called "requestable scopes".


            This property affects behaviors of `/api/client/registration` and
            other family APIs.
        endSessionEndpoint:
          type: string
          format: uri
          description: >
            The endpoint for clients ending the sessions.


            A URL that starts with `https://` and has no fragment component. For
            example, `https://example.com/auth/endSession`.


            The value of this property is used as `end_session_endpoint`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        loopbackRedirectionUriVariable:
          type: boolean
          description: >
            The flag indicating whether the port number component of redirection
            URIs can be variable when

            the host component indicates loopback.


            When this flag is `true`, if the host component of a redirection URI
            specified in an authorization

            request indicates loopback (to be precise, when the host component
            is localhost, `127.0.0.1`

            or `::1`), the port number component is ignored when the specified
            redirection URI is compared

            to pre-registered ones. This behavior is described in [7.3. Loopback
            Interface Redirection](

            https://www.rfc-editor.org/rfc/rfc8252.html#section-7.3) of [RFC
            8252 OAuth 2.0](https://www.rfc-editor.org/rfc/rfc8252.html)

            for Native Apps.


            [3.1.2.3. Dynamic
            Configuration](https://www.rfc-editor.org/rfc/rfc6749.html#section-3.1.2.3)

            of [RFC 6749](https://www.rfc-editor.org/rfc/rfc6749.html) states
            _"If the client registration

            included the full redirection URI, the authorization server MUST
            compare the two URIs using

            simple string comparison as defined in [RFC3986] Section 6.2.1."_
            Also, the description of

            `redirect_uri` in [3.1.2.1. Authentication
            Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest)

            of [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) states

            _"This URI MUST exactly match one of the Redirection URI values for
            the Client pre-registered

            at the OpenID Provider, with the matching performed as described in
            Section 6.2.1 of [RFC3986]

            (**Simple String Comparison**)."_ These "Simple String Comparison"
            requirements are preceded

            by this flag. That is, even when the conditions described in RFC
            6749 and OpenID Connect Core 1.0

            are satisfied, the port number component of loopback redirection
            URIs can be variable when this

            flag is `true`.


            [8.3. Loopback Redirect
            Considerations](https://www.rfc-editor.org/rfc/rfc8252.html#section-8.3)

            of [RFC 8252](https://www.rfc-editor.org/rfc/rfc8252.html) states as
            follows.


            > While redirect URIs using localhost (i.e.,
            `"http://localhost:{port}/{path}"`) function

            similarly to loopback IP redirects described in Section 7.3, the use
            of localhost is NOT RECOMMENDED.

            Specifying a redirect URI with the loopback IP literal rather than
            localhost avoids inadvertently

            listening on network interfaces other than the loopback interface.
            It is also less susceptible

            to client-side firewalls and misconfigured host name resolution on
            the user's device.


            However, Authlete allows the port number component to be variable in
            the case of `localhost`,

            too. It is left to client applications whether they use `localhost`
            or a literal loopback IP

            address (`127.0.0.1` for IPv4 or `::1` for IPv6).


            Section 7.3 and Section 8.3 of [RFC
            8252](https://www.rfc-editor.org/rfc/rfc8252.html) state

            that loopback redirection URIs use the `"http"` scheme, but Authlete
            allows the port number

            component to be variable in other cases (e.g. in the case of the
            `"https"` scheme), too.
        requestObjectAudienceChecked:
          type: boolean
          description: >
            The flag indicating whether Authlete checks whether the `aud` claim
            of request objects matches

            the issuer identifier of this service.


            [Section 6.1. Passing a Request Object by
            Value](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests)

            of [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) has the
            following

            statement.


            > The `aud` value SHOULD be or include the OP's Issuer Identifier
            URL.


            Likewise, [Section 4. Request
            Object](https://www.rfc-editor.org/rfc/rfc9101.html#section-4) of

            [RFC 9101](https://www.rfc-editor.org/rfc/rfc9101.html) (The OAuth
            2.0 Authorization Framework:

            JWT-Secured Authorization Request (JAR)) has the following
            statement.


            > The value of aud should be the value of the authorization server
            (AS) issuer, as defined in

            [RFC 8414](https://www.rfc-editor.org/rfc/rfc8414.html).


            As excerpted above, validation on the `aud` claim of request objects
            is optional. However, if

            this flag is turned on, Authlete checks whether the `aud` claim of
            request objects matches the issuer

            identifier of this service and raises an error if they are
            different.
        accessTokenForExternalAttachmentEmbedded:
          type: boolean
          description: |
            The flag indicating whether Authlete generates access tokens for
            external attachments and embeds them in ID tokens and userinfo
            responses.
        authorityHints:
          type: array
          items:
            type: string
          description: |
            Identifiers of entities that can issue entity statements for this
            service. This property corresponds to the `authority_hints`
            property that appears in a self-signed entity statement that is
            defined in OpenID Connect Federation 1.0.
        federationEnabled:
          type: boolean
          description: >
            flag indicating whether this service supports OpenID Connect
            Federation 1
        federationJwks:
          type: string
          description: >
            JWK Set document containing keys that are used to sign (1)
            self-signed

            entity statement of this service and (2) the response from

            `signed_jwks_uri`.
        federationSignatureKeyId:
          type: string
          description: |
            A key ID to identify a JWK used to sign the entity configuration and
            the signed JWK Set.
        federationConfigurationDuration:
          type: integer
          description: |
            The duration of the entity configuration in seconds.
        federationRegistrationEndpoint:
          type: string
          description: >
            The URI of the federation registration endpoint. This property
            corresponds

            to the `federation_registration_endpoint` server metadata that is

            defined in OpenID Connect Federation 1.0.
        organizationName:
          type: string
          description: |
            The human-readable name representing the organization that operates
            this service. This property corresponds to the `organization_name`
            server metadata that is defined in OpenID Connect Federation 1.0.
        predefinedTransformedClaims:
          type: string
          description: |
            The transformed claims predefined by this service in JSON format.
            This property corresponds to the `transformed_claims_predefined`
            server metadata.
        refreshTokenIdempotent:
          type: boolean
          description: |
            flag indicating whether refresh token requests with the same
            refresh token can be made multiple times in quick succession and
            they can obtain the same renewed refresh token within the short
            period.
        signedJwksUri:
          type: string
          description: >
            The URI of the endpoint that returns this service's JWK Set document
            in

            the JWT format. This property corresponds to the `signed_jwks_uri`

            server metadata defined in OpenID Connect Federation 1.0.
        supportedAttachments:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedAttachmentsIt\
              ems"
          description: |
            Supported attachment types. This property corresponds to the {@code
            attachments_supported} server metadata which was added by the third
            implementer's draft of OpenID Connect for Identity Assurance 1.0.
        supportedDigestAlgorithms:
          type: array
          items:
            type: string
          description: |
            Supported algorithms used to compute digest values of external
            attachments. This property corresponds to the
            `digest_algorithms_supported` server metadata which was added
            by the third implementer's draft of OpenID Connect for Identity
            Assurance 1.0.
        supportedDocuments:
          type: array
          items:
            type: string
          description: |
            Document types supported by this service. This property corresponds
            to the `documents_supported` server metadata.
        supportedDocumentsMethods:
          type: array
          items:
            type: string
          description: >
            validation and verification processes supported by this service.

            This property corresponds to the `documents_methods_supported`

            server metadata.


            The third implementer's draft of [OpenID Connect for Identity
            Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)

            renamed the

            `id_documents_verification_methods_supported` server metadata to

            `documents_methods_supported`.
        supportedDocumentsValidationMethods:
          type: array
          items:
            type: string
          description: >
            Document validation methods supported by this service. This property

            corresponds to the `documents_validation_methods_supported` server

            metadata which was added by the third implementer's draft of <a
            href=

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedDocumentsVerificationMethods:
          type: array
          items:
            type: string
          description: >
            Document verification methods supported by this service. This
            property

            corresponds to the `documents_verification_methods_supported` server

            metadata which was added by the third implementer's draft of

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedElectronicRecords:
          type: array
          items:
            type: string
          description: >
            Electronic record types supported by this service. This property

            corresponds to the `electronic_records_supported` server metadata

            which was added by the third implementer's draft of

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedClientRegistrationTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedClientRegistr\
              ationTypesItems"
        tokenExchangeByIdentifiableClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit unidentifiable clients from
            making token exchange requests.
        tokenExchangeByConfidentialClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit public clients from making
            token exchange requests.
        tokenExchangeByPermittedClientsOnly:
          type: boolean
          description: >
            The flag indicating whether to prohibit clients that have no
            explicit

            permission from making token exchange requests.
        tokenExchangeEncryptedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token exchange requests which
            use encrypted JWTs as input tokens.
        tokenExchangeUnsignedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token exchange requests which
            use unsigned JWTs as input tokens.
        jwtGrantByIdentifiableClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit unidentifiable clients from
            using the grant type "urn:ietf:params:oauth:grant-type:jwt-bearer".
        jwtGrantEncryptedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token requests that use an
            encrypted JWT as an authorization grant with the grant type
            "urn:ietf:params:oauth:grant-type:jwt-bearer".
        jwtGrantUnsignedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token requests that use an
            unsigned JWT as an authorization grant with the grant type
            "urn:ietf:params:oauth:grant-type:jwt-bearer".
        dcrDuplicateSoftwareIdBlocked:
          type: boolean
          description: >
            The flag indicating whether to block DCR (Dynamic Client
            Registration)

            requests whose "software_id" has already been used previously.
        trustAnchors:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1TrustAnchorsItems"
          description: |
            The trust anchors that are referenced when this service resolves
            trust chains of relying parties.

            If this property is empty, client registration fails regardless of
            whether its type is `automatic` or `explicit`. It means
            that OpenID Connect Federation 1.0 does not work.
        openidDroppedOnRefreshWithoutOfflineAccess:
          type: boolean
          description: >
            The flag indicating whether the openid scope should be dropped from

            scopes list assigned to access token issued when a refresh token
            grant

            is used.
        supportedDocumentsCheckMethods:
          type: array
          items:
            type: string
          description: >
            Supported document check methods. This property corresponds to the
            `documents_check_methods_supported`

            server metadata which was added by the fourth implementer's draft of
            OpenID Connect for Identity

            Assurance 1.0.
        rsResponseSigned:
          type: boolean
          description: >
            The flag indicating whether this service signs responses from the
            resource server.
        cnonceDuration:
          type: integer
          format: int64
          description: |
            The duration of `c_nonce`.
        dpopNonceRequired:
          type: boolean
          description: |
            Whether to require DPoP proof JWTs to include the `nonce` claim
            whenever they are presented.
        verifiableCredentialsEnabled:
          type: boolean
          description: >
            Get the flag indicating whether the feature of Verifiable
            Credentials

            for this service is enabled or not.
        credentialJwksUri:
          type: string
          description: |
            The URL at which the JWK Set document of the credential issuer is
            exposed.
        credentialOfferDuration:
          type: integer
          format: int64
          description: |
            The default duration of credential offers in seconds.
        dpopNonceDuration:
          type: integer
          format: int64
          description: |
            The duration of nonce values for DPoP proof JWTs in seconds.
        preAuthorizedGrantAnonymousAccessSupported:
          type: boolean
          description: |
            The flag indicating whether token requests using the pre-authorized
            code grant flow by unidentifiable clients are allowed.
        credentialTransactionDuration:
          type: integer
          format: int64
          description: |
            The duration of transaction ID in seconds that may be issued as a
            result of a credential request or a batch credential request.
        introspectionSignatureKeyId:
          type: string
          description: |
            The key ID of the key for signing introspection responses.
        resourceSignatureKeyId:
          type: string
          description: |
            The key ID of the key for signing introspection responses.
        userPinLength:
          type: integer
          format: int32
          description: |
            The default length of user PINs.
        supportedPromptValues:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedPromptValuesI\
              tems"
          description: |
            The supported `prompt` values.
        idTokenReissuable:
          type: boolean
          description: |
            The flag indicating whether to enable the feature of ID token
            reissuance in the refresh token flow.
        credentialJwks:
          type: string
          description: |
            The JWK Set document containing private keys that are used to sign
            verifiable credentials.
        fapiModes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1FapiModesItems"
          description: >
            FAPI modes for this service.


            When the value of this property is not `null`, Authlete always
            processes requests to this service based

            on the specified FAPI modes if the FAPI feature is enabled in
            Authlete and the FAPI profile is supported

            by this service.


            For instance, when this property is set to an array containing
            `FAPI1_ADVANCED` only, Authlete always

            processes requests to this service based on "Financial-grade API
            Security Profile 1.0 - Part 2:

            Advanced" if the FAPI feature is enabled in Authlete and the FAPI
            profile is supported by this service.
        credentialDuration:
          type: integer
          format: int64
          description: |
            The default duration of verifiable credentials in seconds.
        credentialIssuerMetadata:
          $ref: "#/components/schemas/ServiceGetApiResponse200Json1CredentialIssuerMetada\
            ta"
        idTokenAudType:
          type: string
          description: |
            The type of the `aud` claim in ID tokens.
        nativeSsoSupported:
          type: boolean
          description: >
            The flag to determine to support the [OpenID Connect Native SSO for
            Mobile Apps
            1.0](https://openid.net/specs/openid-connect-native-sso-1_0.html)

            specification (a.k.a. "Native SSO").


            If this property is not set to `true`, Native SSO-specific

            parameters will be ignored or treated as errors. For example, the
            `device_sso scope` will have

            no special meaning (Authlete will not embed the sid claim in the ID
            token), and the `urn:openid:params:token-type:device-secret`

            token type will be treated as unknown, resulting in an error.


            This property corresponds to the `native_sso_supported` server
            metadata. If this property is set

            to `true`, `"native_sso_supported":true` will appear in the server
            metadata document (see [OpenID

            Connect Discovery 1.0, Section 3. OpenID Provider Metadata; RFC
            8414](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata):

            [OAuth 2.0 Authorization Server Metadata, Section 2. Authorization
            Server
            Metadata](https://www.rfc-editor.org/rfc/rfc8414.html#section-2)).
    ServiceGetApiResponse200Json1MetadataItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceGetApiResponse200Json1MtlsEndpointAliasesItems:
      type: object
      properties:
        name:
          type: string
        uri:
          type: string
          format: uri
    ServiceGetApiResponse200Json1SupportedScopesItems:
      type: object
      properties:
        name:
          type: string
          description: The name of the scope.
        defaultEntry:
          type: boolean
          description: "`true` to mark the scope as default. Scopes marked as default are
            regarded as requested when an authorization request from a client
            application does not contain scope request parameter. "
        description:
          type: string
          description: The description about the scope.
        descriptions:
          type: array
          description: The descriptions about this scope in multiple languages.
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedScopesItemsDe\
              scriptionsItems"
        attributes:
          type: array
          description: The attributes of the scope.
          items:
            $ref: "#/components/schemas/ServiceGetApiResponse200Json1SupportedScopesItemsAt\
              tributesItems"
    ServiceGetApiResponse200Json1SupportedScopesItemsDescriptionsItems:
      type: object
      properties:
        tag:
          type: string
          description: The language tag part.
        value:
          type: string
          description: The value part.
    ServiceGetApiResponse200Json1SupportedScopesItemsAttributesItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceGetApiResponse200Json1AttributesItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceGetApiResponse200Json1HsksItems:
      type: object
      description: >
        Holds information about a key managed in an HSM (Hardware Security
        Module)
      properties:
        kty:
          type: string
          description: |
            The key type (EC or RSA)
        use:
          type: string
          description: >
            Get the use of the key on the HSM.

            When the key use is "sig" (signature), the private key on the HSM is
            used to sign data and the corresponding public key is used to verify
            the signature.

            When the key use is "enc" (encryption), the private key on the HSM
            is used to decrypt encrypted data which have been encrypted with the
            corresponding public key
        kid:
          type: string
          description: |
            Key ID for the key on the HSM.
        hsmName:
          type: string
          description: >
            The name of the HSM.

            The identifier for the HSM that sits behind the Authlete server. For
            example, "google".
        handle:
          type: string
          description: >
            The handle for the key on the HSM.

            A handle is a base64url-encoded 256-bit random value (43 letters)
            which is assigned by Authlete on the call of the /api/hsk/create API
        publicKey:
          type: string
          description: |
            The public key that corresponds to the key on the HSM.
        alg:
          type: string
          description: >
            The algorithm of the key on the HSM. When the key use is `"sig"`,
            the algorithm represents a

            signing algorithm such as `"ES256"`. When the key use is `"enc"`,
            the algorithm represents an

            encryption algorithm such as `"RSA-OAEP-256"`.
    ServiceGetApiResponse200Json1TrustAnchorsItems:
      type: object
      properties:
        entityId:
          type: string
          description: |
            the entity ID of the trust anchor
        jwks:
          type: string
          description: |
            the JWK Set document containing public keys of the trust anchor
    ServiceGetApiResponse200Json1CredentialIssuerMetadata:
      type: object
      properties:
        authorizationServers:
          type: array
          items:
            type: string
          description: >
            The identifiers of the authorization servers that the credential
            issuer relies on for authorization.

            This property corresponds to the authorization_servers metadata.
            When the credential issuer works

            as an authorization server for itself, this property should be
            omitted.
        credentialIssuer:
          type: string
          description: The identifier of a credential request.
        credentialEndpoint:
          type: boolean
          description: The URL of the credential endpoint of the credential issuer.
        batchCredentialEndpoint:
          type: integer
          format: int64
          description: The URL of the batch credential endpoint of the credential issuer.
        deferredCredentialEndpoint:
          type: string
          description: The URL of the deferred credential endpoint of the credential issuer.
        credentialsSupported:
          type: boolean
          description: A JSON array describing supported credentials.
        credentialResponseEncryptionAlgValuesSupported:
          type: array
          items:
            type: string
          description: >
            The supported JWE `alg` algorithms for credential response
            encryption. This property corresponds

            to the `credential_response_encryption.alg_values_supported`
            metadata.
        credentialResponseEncryptionEncValuesSupported:
          type: array
          items:
            type: string
          description: >
            The supported JWE `enc` algorithms for credential response
            encryption. This property corresponds

            to the `credential_response_encryption.enc_values_supported`
            metadata.
        requireCredentialResponseEncryption:
          type: boolean
          description: >
            The boolean flag indicating whether credential response encryption
            is required. This property

            corresponds to the
            `credential_response_encryption.encryption_required metadata`. If
            this flag

            is `true`, every credential request to the credential issuer must
            include the `credential_response_encryption`

            property.
    ServiceGetApiResponse400Json1:
      type: object
      properties:
        resultCode:
          type: string
          description: The code which represents the result of the API call.
        resultMessage:
          type: string
          description: A short message which explains the result of the API call.
    ServiceGetApiResponse401Json1:
      type: object
      properties:
        resultCode:
          type: string
          description: The code which represents the result of the API call.
        resultMessage:
          type: string
          description: A short message which explains the result of the API call.
    ServiceGetApiResponse403Json1:
      type: object
      properties:
        resultCode:
          type: string
          description: The code which represents the result of the API call.
        resultMessage:
          type: string
          description: A short message which explains the result of the API call.
    ServiceGetApiResponse500Json1:
      type: object
      properties:
        resultCode:
          type: string
          description: The code which represents the result of the API call.
        resultMessage:
          type: string
          description: A short message which explains the result of the API call.
    ServiceGetListApiResponse200Json1:
      type: object
      properties:
        start:
          type: integer
          format: int32
          description: >
            Start index (inclusive) of the result set. The default value is 0.
            Must not be a negative

            number.
        end:
          type: integer
          format: int32
          description: >
            Start index (inclusive) of the result set. The default value is 0.
            Must not be a negative

            number.
        totalCount:
          type: integer
          format: int32
          description: >
            Total number of services owned by the service owner. This doesn't
            mean the number of services

            contained in the response.
        services:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItems"
          description: |
            An array of services.
    ServiceGetListApiResponse200Json1ServicesItems:
      type: object
      properties:
        number:
          type: integer
          format: int32
          readOnly: true
          description: The sequential number of the service. The value of this property is
            assigned by Authlete.
        serviceName:
          type: string
          description: The name of this service.
        issuer:
          type: string
          description: >
            The issuer identifier of the service.


            A URL that starts with  https:// and has no query or fragment
            component.


            The value of this property is used as `iss` claim in an [ID
            token](https://openid.net/specs/openid-connect-core-1_0.html#IDToken)

            and `issuer` property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        description:
          type: string
          description: The description about the service.
        apiKey:
          type: integer
          format: int64
          readOnly: true
          description: The service ID used in Authlete API calls. The value of this
            property is assigned by Authlete.
        clientIdAliasEnabled:
          type: boolean
          description: Deprecated. Always `true`.
        metadata:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsMetad\
              ataItems"
          description: >
            The `metadata` of the service. The content of the returned array
            depends on contexts.

            The predefined service metadata is listed in the following table.

              | Key | Description |
              | --- | --- |
              | `clientCount` | The number of client applications which belong to this service.  |
        createdAt:
          type: integer
          format: int64
          readOnly: true
          description: >
            The time at which this service was created. The value is represented
            as milliseconds since the

            UNIX epoch (`1970-01-01`).
        modifiedAt:
          type: integer
          format: int64
          readOnly: true
          description: >
            The time at which this service was last modified. The value is
            represented as milliseconds since

            the UNIX epoch (1970-01-01).
        authenticationCallbackEndpoint:
          type: string
          format: uri
          description: >
            A Web API endpoint for user authentication which is to be prepared
            on the service side.


            The endpoint must be implemented if you do not implement the UI at
            the authorization endpoint

            but use the one provided by Authlete.


            The user authentication at the authorization endpoint provided by
            Authlete is performed by making

            a `POST` request to this endpoint.
        authenticationCallbackApiKey:
          type: string
          description: >
            API key for basic authentication at the authentication callback
            endpoint.


            If the value is not empty, Authlete generates Authorization header
            for Basic authentication when

            making a request to the authentication callback endpoint.
        authenticationCallbackApiSecret:
          type: string
          description: API secret for `basic` authentication at the authentication
            callback endpoint.
        supportedAcrs:
          readOnly: true
          type: array
          items:
            type: string
          description: >
            Values of acrs (authentication context class references) that the
            service supports.


            The value of this property is used as `acr_values_supported`

            property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedGrantTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedGrantTypesItems"
          description: >
            Values of `grant_type` request parameter that the service supports.


            The value of this property is used as `grant_types_supported
            property` in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedResponseTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedResponseTypesItems"
          description: >
            Values of `response_type` request parameter that

            the service supports. Valid values are listed in Response Type.


            The value of this property is used as `response_types_supported`
            property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedAuthorizationDetailsTypes:
          type: array
          items:
            type: string
          description: >
            The supported data types that can be used as values of the type
            field in `authorization_details`.


            This property corresponds to the
            `authorization_details_types_supported` metadata. See "OAuth 2.0

            Rich Authorization Requests" (RAR) for details.
        supportedServiceProfiles:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedServiceProfilesItems"
          description: |
            The profiles that this service supports.
        errorDescriptionOmitted:
          type: boolean
          description: >
            The flag to indicate whether the `error_description` response
            parameter is omitted.


            According to [RFC 6749](https://tools.ietf.org/html/rfc6749), an
            authorization server may include

            the `error_description` response parameter in error responses.


            If `true`, Authlete does not embed the `error_description` response
            parameter in error responses.
        errorUriOmitted:
          type: boolean
          description: >
            The flag to indicate whether the `error_uri` response parameter is
            omitted.


            According to [RFC 6749](https://tools.ietf.org/html/rfc6749), an
            authorization server may include the `error_uri` response parameter
            in error responses.


            If `true`, Authlete does not embed the

            `error_uri` response parameter in error responses.
        authorizationEndpoint:
          type: string
          format: uri
          description: >
            The authorization endpoint of the service.


            A URL that starts with `https://` and has no fragment component. For
            example, `https://example.com/auth/authorization`.


            The value of this property is used as `authorization_endpoint`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directAuthorizationEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct authorization endpoint is
            enabled or not.


            The path of the endpoint is
            `/api/auth/authorization/direct/service-api-key`.
        supportedUiLocales:
          type: array
          items:
            type: string
          description: >
            UI locales that the service supports.


            Each element is a language tag defined in [RFC
            5646](https://tools.ietf.org/html/rfc5646). For example, `en-US` and
            `ja-JP`.


            The value of this property is used as `ui_locales_supported`
            property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedDisplays:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedDisplaysItems"
          description: >
            Values of `display` request parameter that service supports.


            The value of this property is used as `display_values_supported`
            property in the Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        pkceRequired:
          type: boolean
          description: >
            The flag to indicate whether the use of Proof Key for Code Exchange
            (PKCE) is always required for authorization requests by
            Authorization Code Flow.


            If `true`, `code_challenge` request parameter is always required for
            authorization requests using Authorization Code Flow.


            See [RFC 7636](https://tools.ietf.org/html/rfc7636) (Proof Key for
            Code Exchange by OAuth Public Clients) for details about
            `code_challenge` request parameter.
        pkceS256Required:
          type: boolean
          description: >
            The flag to indicate whether `S256` is always required as the code
            challenge method whenever [PKCE (RFC
            7636)](https://tools.ietf.org/html/rfc7636) is used.


            If this flag is set to `true`, `code_challenge_method=S256` must be
            included in the authorization request

            whenever it includes the `code_challenge` request parameter.

            Neither omission of the `code_challenge_method` request parameter
            nor use of plain (`code_challenge_method=plain`) is allowed.
        authorizationResponseDuration:
          type: integer
          format: int64
          description: >
            The duration of authorization response JWTs in seconds.


            [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            defines new values for the `response_mode` request parameter. They
            are `query.jwt`, `fragment.jwt`,

            `form_post.jwt` and `jwt`. If one of them is specified as the
            response mode, response parameters

            from the authorization endpoint will be packed into a JWT. This
            property is used to compute the

            value of the `exp` claim of the JWT.
        tokenEndpoint:
          type: string
          format: uri
          description: >
            The [token
            endpoint](https://tools.ietf.org/html/rfc6749#section-3.2) of the
            service.


            A URL that starts with `https://` and has not fragment component.
            For example, `https://example.com/auth/token`.


            The value of this property is used as `token_endpoint` property in
            the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directTokenEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct token endpoint is enabled or
            not. The path of the endpoint

            is `/api/auth/token/direct/service-api-key`.
        supportedTokenAuthMethods:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedTokenAuthMethodsItems"
          description: >
            Client authentication methods supported by the token endpoint of the
            service.


            The value of this property is used as
            `token_endpoint_auth_methods_supports` property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        missingClientIdAllowed:
          type: boolean
          description: >
            The flag to indicate token requests from public clients without the
            `client_id` request parameter are allowed when the client can be
            guessed from `authorization_code` or `refresh_token`.


            This flag should not be set unless you have special reasons.
        revocationEndpoint:
          type: string
          format: uri
          description: >
            The [revocation endpoint](https://tools.ietf.org/html/rfc7009) of
            the service.


            A URL that starts with `https://`. For example,
            `https://example.com/auth/revocation`.
        directRevocationEndpointEnabled:
          type: boolean
          description: "The flag to indicate whether the direct revocation endpoint is
            enabled or not. The URL of the endpoint is
            `/api/auth/revocation/direct/service-api-key`. "
        supportedRevocationAuthMethods:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedRevocationAuthMethodsItems"
          description: |
            Client authentication methods supported at the revocation endpoint.
        introspectionEndpoint:
          type: string
          description: The URI of the introspection endpoint.
          format: uri
        directIntrospectionEndpointEnabled:
          type: boolean
          description: "The flag to indicate whether the direct userinfo endpoint is
            enabled or not. The path of the endpoint is
            `/api/auth/userinfo/direct/{serviceApiKey}`. "
        supportedIntrospectionAuthMethods:
          type: array
          description: >
            Client authentication methods supported at the introspection
            endpoint.
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedIntrospectionAuthMethodsItems"
        pushedAuthReqEndpoint:
          type: string
          description: >
            The URI of the pushed authorization request endpoint.


            This property corresponds to the
            `pushed_authorization_request_endpoint` metadata defined in "[5.
            Authorization Server
            Metadata](https://tools.ietf.org/html/draft-lodderstedt-oauth-par#section-5)"
            of OAuth 2.0 Pushed Authorization Requests.
          format: uri
        pushedAuthReqDuration:
          type: integer
          format: int64
          description: >
            The duration of pushed authorization requests in seconds.


            [OAuth 2.0 Pushed Authorization
            Requests](https://tools.ietf.org/html/draft-lodderstedt-oauth-par)

            defines an endpoint (called "pushed authorization request endpoint")
            which client applications

            can register authorization requests into and get corresponding URIs
            (called "request URIs") from.

            The issued URIs represent the registered authorization requests. The
            client applications can use

            the URIs as the value of the `request_uri` request parameter in an
            authorization request.


            The property represents the duration of registered authorization
            requests and is used as the value

            of the `expires_in` parameter in responses from the pushed
            authorization request endpoint.
        parRequired:
          type: boolean
          description: >
            The flag to indicate whether this service requires that clients use
            the pushed authorization

            request endpoint.


            This property corresponds to the
            `require_pushed_authorization_requests` server metadata defined

            in [OAuth 2.0 Pushed Authorization
            Requests](https://tools.ietf.org/html/draft-lodderstedt-oauth-par).
        requestObjectRequired:
          type: boolean
          description: >
            The flag to indicate whether this service requires that
            authorization requests always utilize

            a request object by using either request or `request_uri` request
            parameter.


            If this flag is set to `true` and the value of
            `traditionalRequestObjectProcessingApplied` is

            `false`, the value of `require_signed_request_object` server
            metadata of this service is reported

            as `true` in the discovery document. The metadata is defined in JAR
            (JWT Secured Authorization Request).

            That `require_signed_request_object` is `true` means that
            authorization requests which don't

            conform to the JAR specification are rejected.
        traditionalRequestObjectProcessingApplied:
          type: boolean
          description: >
            The flag to indicate whether a request object is processed based on
            rules defined in

            [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) or JAR
            (JWT

            Secured Authorization Request).


            Differences between rules in OpenID Connect Core 1.0 and ones in JAR
            are as follows.
              - JAR requires that a request object be always -signed.
              - JAR does not allow request parameters outside a request object to be referred to.
              - OIDC Core 1.0 requires that response_type request parameter exist outside a request object even if the request object includes the request parameter.
              - OIDC Core 1.0 requires that scope request parameter exist outside a request object if the authorization request is an
              - OIDC request even if the request object includes the request parameter.

            If this flag is set to `false` and the value of
            `requestObjectRequired` is `true`, the value of

            `require_signed_request_object` server metadata of this service

            is reported as `true` in the discovery document. The metadata is
            defined in JAR (JWT Secured

            Authorization Request). That `require_signed_request_object` is
            `true` means that authorization

            requests which don't conform to the JAR specification are rejected.
        mutualTlsValidatePkiCertChain:
          type: boolean
          description: >
            The flag to indicate whether this service validates certificate
            chains during PKI-based client mutual TLS authentication.
        trustedRootCertificates:
          type: array
          items:
            type: string
          description: >
            The list of root certificates trusted by this service for PKI-based
            client mutual TLS authentication.
        mtlsEndpointAliases:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsMtlsE\
              ndpointAliasesItems"
          description: >
            The MTLS endpoint aliases.


            This property corresponds to the mtls_endpoint_aliases metadata
            defined in "5. Metadata for Mutual TLS Endpoint Aliases" of [OAuth
            2.0 Mutual TLS Client Authentication and Certificate-Bound Access
            Tokens](https://datatracker.ietf.org/doc/rfc8705/).


            The aliases will be embedded in the response from the discovery
            endpoint like the following.


            ```json

            {
              ......,
              "mtls_endpoint_aliases": {
                "token_endpoint":         "https://mtls.example.com/token",
                "revocation_endpoint":    "https://mtls.example.com/revo",
                "introspection_endpoint": "https://mtls.example.com/introspect"
              }
            }

            ```
        accessTokenType:
          type: string
          description: >
            The access token type.


            This value is used as the value of `token_type` property in access
            token responses. If this service

            complies with [RFC 6750](https://tools.ietf.org/html/rfc6750), the
            value of this property should

            be `Bearer`.


            See [RFC 6749 (OAuth 2.0), 7.1. Access Token
            Types](https://tools.ietf.org/html/rfc6749#section-7.1) for details.
        tlsClientCertificateBoundAccessTokens:
          type: boolean
          description: >
            The flag to indicate whether this service supports issuing TLS
            client certificate bound access tokens.
        accessTokenDuration:
          type: integer
          format: int64
          description: >
            The duration of access tokens in seconds. This value is used as the
            value of `expires_in` property

            in access token responses. `expires_in` is defined [RFC 6749, 5.1.
            Successful
            Response](https://tools.ietf.org/html/rfc6749#section-5.1).
        singleAccessTokenPerSubject:
          type: boolean
          description: >
            The flag to indicate whether the number of access tokens per subject
            (and per client) is at most one or can be more.


            If `true`, an attempt to issue a new access token invalidates
            existing access tokens that are associated with the same subject and
            the same client.


            Note that, however, attempts by [Client Credentials
            Flow](https://tools.ietf.org/html/rfc6749#section-4.4) do not
            invalidate existing access tokens because access tokens issued by
            Client Credentials Flow are not associated with any end-user's
            subject. Also note that an attempt by [Refresh Token
            Flow](https://tools.ietf.org/html/rfc6749#section-6) invalidates the
            coupled access token only and this invalidation is always performed
            regardless of whether the value of this setting item is `true` or
            `false`.
        accessTokenSignAlg:
          $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsAcces\
            sTokenSignAlg"
        accessTokenSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for signing access tokens.


            A JWK Set can be registered as a property of a service. A JWK Set
            can contain 0 or more JWKs.

            Authlete Server has to pick up one JWK for signing from the JWK Set
            when it generates a JWT-based

            access token. Authlete Server searches the registered JWK Set for a
            JWK which satisfies conditions

            for access token signature. If the number of JWK candidates which
            satisfy the conditions is 1,

            there is no problem. On the other hand, if there exist multiple
            candidates, a Key ID is needed

            to be specified so that Authlete Server can pick up one JWK from
            among the JWK candidates.
        refreshTokenDuration:
          type: integer
          format: int64
          description: The duration of refresh tokens in seconds. The related
            specifications have no requirements on refresh token duration, but
            Authlete sets expiration for refresh tokens.
        refreshTokenDurationKept:
          type: boolean
          description: >
            The flag to indicate whether the remaining duration of the used
            refresh token is taken over to

            the newly issued refresh token.
        refreshTokenDurationReset:
          type: boolean
          description: >
            The flag which indicates whether duration of refresh tokens are
            reset when they are used even

            if the `refreshTokenKept` property of this service set to is `true`
            (= even if "Refresh Token

            Continuous Use" is "Kept").


            This flag has no effect when the `refreshTokenKept` property is set
            to `false`. In other words,

            if this service issues a new refresh token on every refresh token
            request, the refresh token

            will have fresh duration (unless `refreshTokenDurationKept` is set
            to `true`) and this

            `refreshTokenDurationReset` property is not referenced.
        refreshTokenKept:
          type: boolean
          description: >
            The flag to indicate whether a refresh token remains unchanged or
            gets renewed after its use.


            If `true`, a refresh token used to get a new access token remains
            valid after its use. Otherwise, if `false`, a refresh token is
            invalidated after its use and a new refresh token is issued.


            See [RFC 6749 6. Refreshing an Access
            Token](https://tools.ietf.org/html/rfc6749#section-6), as to how to
            get a new access token using a refresh token.
        supportedScopes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedScopesItems"
          description: >
            Scopes supported by the service.


            Authlete strongly recommends that the service register at least the
            following scopes.


            | Name | Description |

            | --- | --- |

            | openid | A permission to get an ID token of an end-user. The
            `openid` scope appears in [OpenID Connect Core 1.0, 3.1.2.1.
            Authentication Request,
            scope](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
            Without this scope, Authlete does not allow `response_type` request
            parameter to have values other than code and token. |

            | profile | A permission to get information about `name`,
            `family_name`, `given_name`, `middle_name`, `nickname`,
            `preferred_username`, `profile`, `picture`, `website`, `gender`,
            `birthdate`, `zoneinfo`, `locale` and `updated_at` from the user
            info endpoint. See [OpenID Connect Core 1.0, 5.4. Requesting Claims
            using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | email | A permission to get information about `email` and
            `email_verified` from the user info endpoint. See [OpenID Connect
            Core 1.0, 5.4. Requesting Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | address | A permission to get information about address from the
            user info endpoint. See [OpenID Connect Core 1.0, 5.4. Requesting
            Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            and [5.1.1. Address
            Claim](https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim)
            for details. |

            | phone | A permission to get information about `phone_number` and
            `phone_number_verified` from the user info endpoint. See [OpenID
            Connect Core 1.0, 5.4. Requesting Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | offline_access | A permission to get information from the user
            info endpoint even when the end-user is not present. See [OpenID
            Connect Core 1.0, 11. Offline
            Access](https://openid.net/specs/openid-connect-core-1_0.html#OfflineAccess)
            for details. |


            The value of this property is used as `scopes_supported` property in
            the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        scopeRequired:
          type: boolean
          description: >
            The flag to indicate whether requests that request no scope are
            rejected or not.


            When a request has no explicit `scope` parameter and the service's
            pre-defined default scope set is empty,

            the authorization server regards the request requests no scope. When
            this flag is set to `true`,

            requests that request no scope are rejected.


            The requirement below excerpted from [RFC 6749 Section
            3.3](https://tools.ietf.org/html/rfc6749#section-3.3)

            does not explicitly mention the case where the default scope set is
            empty.


            > If the client omits the scope parameter when requesting
            authorization, the authorization server

            MUST either process the request using a pre-defined default value or
            fail the request indicating an invalid scope.


            However, if you interpret *"the default scope set exists but is
            empty"* as *"the default scope set does not exist"*

            and want to strictly conform to the requirement above, this flag has
            to be `true`.
        idTokenDuration:
          type: integer
          format: int64
          description: >
            'The duration of [ID
            token](https://openid.net/specs/openid-connect-core-1_0.html#IDToken)s

            in seconds. This value is used to calculate the value of `exp` claim
            in an ID token.'
        allowableClockSkew:
          type: integer
          format: int32
          description: >
            The allowable clock skew between the server and clients in seconds.


            The clock skew is taken into consideration when time-related claims
            in a JWT (e.g. `exp`, `iat`, `nbf`) are verified.
        supportedClaimTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedClaimTypesItems"
          description: >
            Claim types supported by the service. Valid values are listed in
            Claim Type. Note that Authlete

            currently doesn't provide any API to help implementations for
            `AGGREGATED` and `DISTRIBUTED`.


            The value of this property is used as `claim_types_supported`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedClaimLocales:
          type: array
          items:
            type: string
          description: >
            Claim locales that the service supports. Each element is a language
            tag defined in [RFC 5646](https://tools.ietf.org/html/rfc5646).

            For example, `en-US` and `ja-JP`. See [OpenID Connect Core 1.0, 5.2.
            Languages and
            Scripts](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts)

            for details.


            The value of this property is used as `claims_locales_supported`
            property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedClaims:
          type: array
          items:
            type: string
          description: >
            Claim names that the service supports. The standard claim names
            listed in [OpenID Connect Core 1.0,

            5.1. Standard
            Claim](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims)
            should

            be supported. The following is the list of standard claims.


            - `sub`

            - `name`

            - `given_name`

            - `family_name`

            - `middle_name`

            - `nickname`

            - `preferred_username`

            - `profile`

            - `picture`

            - `website`

            - `email`

            - `email_verified`

            - `gender`

            - `birthdate`

            - `zoneinfo`

            - `locale`

            - `phone_number`

            - `phone_number_verified`

            - `address`

            - `updated_at`


            The value of this property is used as `claims_supported` property in
            the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).


            The service may support its original claim names. See [OpenID
            Connect Core 1.0, 5.1.2. Additional

            Claims](https://openid.net/specs/openid-connect-core-1_0.html#AdditionalClaims).
        claimShortcutRestrictive:
          type: boolean
          description: >
            The flag indicating whether claims specified by shortcut scopes
            (e.g. `profile`) are included

            in the issued ID token only when no access token is issued.


            To strictly conform to the description below excerpted from [OpenID
            Connect Core 1.0 Section

            5.4](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims),
            this flag has to be `true`.


            > The Claims requested by the profile, email, address, and phone
            scope values are returned from

            the UserInfo Endpoint, as described in Section 5.3.2, when a
            response_type value is used that

            results in an Access Token being issued. However, when no Access
            Token is issued (which is the

            case for the response_type value id_token), the resulting Claims are
            returned in the ID Token.
        jwksUri:
          type: string
          format: uri
          description: >
            The URL of the service's [JSON Web Key
            Set](https://tools.ietf.org/html/rfc7517) document. For

            example, `http://example.com/auth/jwks`.


            Client applications accesses this URL (1) to get the public key of
            the service to validate the

            signature of an ID token issued by the service and (2) to get the
            public key of the service to

            encrypt an request object of the client application. See [OpenID
            Connect Core 1.0, 10. Signatures

            and
            Encryption](https://openid.net/specs/openid-connect-core-1_0.html#SigEnc)
            for details.


            The value of this property is used as `jwks_uri` property in the
            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directJwksEndpointEnabled:
          type: boolean
          description: >
            'The flag to indicate whether the direct jwks endpoint is enabled or
            not. The path of the endpoint

            is `/api/service/jwks/get/direct/service-api-key`. '
        jwks:
          type: string
          description: >
            The content of the service's [JSON Web Key
            Set](https://tools.ietf.org/html/rfc7517) document.


            If this property is not `null` in a `/service/create` request or a
            `/service/update` request,

            Authlete hosts the content in the database. This property must not
            be `null` and must contain

            pairs of public/private keys if the service wants to support
            asymmetric signatures for ID tokens

            and asymmetric encryption for request objects. See [OpenID Connect
            Core 1.0, 10. Signatures and

            Encryption](https://openid.net/specs/openid-connect-core-1_0.html#SigEnc)
            for details.
        idTokenSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for ID token signature using an
            asymmetric key.


            A JWK Set can be registered as a property of a Service. A JWK Set
            can contain 0 or more JWKs

            (See [RFC 7517](https://tools.ietf.org/html/rfc7517) for details
            about JWK). Authlete Server has

            to pick up one JWK for signature from the JWK Set when it generates
            an ID token and signature

            using an asymmetric key is required. Authlete Server searches the
            registered JWK Set for a JWK

            which satisfies conditions for ID token signature. If the number of
            JWK candidates which satisfy

            the conditions is 1, there is no problem. On the other hand, if
            there exist multiple candidates,

            a [Key ID](https://tools.ietf.org/html/rfc7517#section-4.5) is
            needed to be specified so that

            Authlete Server can pick up one JWK from among the JWK candidates.


            This `idTokenSignatureKeyId` property exists for the purpose
            described above. For key rotation

            (OpenID Connect Core 1.0, [10.1.1. Rotation of Asymmetric Signing
            Keys](http://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys)),

            this mechanism is needed.
        userInfoSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for user info signature using an
            asymmetric key.


            A JWK Set can be registered as a property of a Service. A JWK Set
            can contain 0 or more JWKs

            (See [RFC 7517](https://tools.ietf.org/html/rfc7517) for details
            about JWK). Authlete Server has

            to pick up one JWK for signature from the JWK Set when it is
            required to sign user info (which

            is returned from [userinfo
            endpoint](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo))

            using an asymmetric key. Authlete Server searches the registered JWK
            Set for a JWK which satisfies

            conditions for user info signature. If the number of JWK candidates
            which satisfy the conditions

            is 1, there is no problem. On the other hand, if there exist
            multiple candidates, a [Key
            ID](https://tools.ietf.org/html/rfc7517#section-4.5)

            is needed to be specified so that Authlete Server can pick up one
            JWK from among the JWK candidates.


            This `userInfoSignatureKeyId` property exists for the purpose
            described above. For key rotation

            (OpenID Connect Core 1.0, [10.1.1. Rotation of Asymmetric Signing
            Keys](http://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys)),

            this mechanism is needed.
        authorizationSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for signing authorization
            responses using an asymmetric key.


            [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            defines new values for the `response_mode` request parameter. They
            are `query.jwt`, `fragment.jwt`,

            `form_post.jwt` and `jwt`. If one of them is specified as the
            response mode, response parameters

            from the authorization endpoint will be packed into a JWT. This
            property is used to compute the

            value of the `exp` claim of the JWT.


            Authlete Server searches the JWK Set for a JWK which satisfies
            conditions for authorization response

            signature. If the number of JWK candidates which satisfy the
            conditions is 1, there is no problem.

            On the other hand, if there exist multiple candidates, a Key ID is
            needed to be specified so that

            Authlete Server can pick up one JWK from among the JWK candidates.
            This property exists to specify

            the key ID.
        userInfoEndpoint:
          type: string
          description: >
            The [user info
            endpoint](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo)
            of the

            service. A URL that starts with `https://`. For example,
            `https://example.com/auth/userinfo`.


            The value of this property is used as `userinfo_endpoint` property
            in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        directUserInfoEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct userinfo endpoint is enabled
            or not. The path

            of the endpoint is `/api/auth/userinfo/direct/service-api-key`.
        dynamicRegistrationSupported:
          type: boolean
          description: >
            The boolean flag which indicates whether the [OAuth 2.0 Dynamic
            Client Registration Protocol](https://tools.ietf.org/html/rfc7591)

            is supported.
        registrationEndpoint:
          type: string
          description: >
            The [registration
            endpoint](http://openid.net/specs/openid-connect-registration-1_0.html#ClientRegistration)

            of the service. A URL that starts with `https://`. For example,
            `https://example.com/auth/registration`.


            The value of this property is used as `registration_endpoint`
            property in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        registrationManagementEndpoint:
          type: string
          description: >
            The URI of the registration management endpoint. If dynamic client
            registration is supported,

            and this is set, this URI will be used as the basis of the client's
            management endpoint by appending

            `/clientid}/` to it as a path element. If this is unset, the value
            of `registrationEndpoint` will

            be used as the URI base instead.
          format: uri
        policyUri:
          type: string
          description: >
            The URL of the "Policy" of the service.


            The value of this property is used as `op_policy_uri` property in
            the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        tosUri:
          type: string
          description: >
            The URL of the "Terms Of Service" of the service.


            The value of this property is used as `op_tos_uri` property in the
            [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        serviceDocumentation:
          type: string
          description: >
            The URL of a page where documents for developers can be found.


            The value of this property is used as `service_documentation`
            property in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        backchannelAuthenticationEndpoint:
          type: string
          description: >
            The URI of backchannel authentication endpoint, which is defined in
            the specification of [CIBA

            (Client Initiated Backchannel
            Authentication)](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html).
          format: uri
        supportedBackchannelTokenDeliveryModes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedBackchannelTokenDeliveryModesItems"
          description: >
            The supported backchannel token delivery modes. This property
            corresponds to the `backchannel_token_delivery_modes_supported`

            metadata.


            Backchannel token delivery modes are defined in the specification of
            [CIBA (Client Initiated

            Backchannel
            Authentication)](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html).
        backchannelAuthReqIdDuration:
          type: integer
          format: int32
          description: >
            The duration of backchannel authentication request IDs issued from
            the backchannel authentication

            endpoint in seconds. This is used as the value of the `expires_in`
            property in responses from

            the backchannel authentication endpoint.
        backchannelPollingInterval:
          type: integer
          format: int32
          description: >
            The minimum interval between polling requests to the token endpoint
            from client applications in

            seconds. This is used as the value of the `interval` property in
            responses from the backchannel

            authentication endpoint.
        backchannelUserCodeParameterSupported:
          type: boolean
          description: >
            The boolean flag which indicates whether the `user_code` request
            parameter is supported at the

            backchannel authentication endpoint. This property corresponds to
            the `backchannel_user_code_parameter_supported`

            metadata.
        backchannelBindingMessageRequiredInFapi:
          type: boolean
          description: >
            The flag to indicate whether the `binding_message` request parameter
            is always required whenever

            a backchannel authentication request is judged as a request for
            Financial-grade API.


            The FAPI-CIBA profile requires that the authorization server _"shall
            ensure unique authorization

            context exists in the authorization request or require a
            `binding_message` in the authorization

            request"_ (FAPI-CIBA, 5.2.2, 2). The simplest way to fulfill this
            requirement is to set this property

            to `true`.


            If this property is set to `false`, the `binding_message` request
            parameter remains optional

            even in FAPI context, but in exchange, your authorization server
            must implement a custom mechanism

            that ensures each backchannel authentication request has unique
            context.
        deviceAuthorizationEndpoint:
          type: string
          format: uri
          description: >
            The URI of the device authorization endpoint.


            Device authorization endpoint is defined in the specification of
            OAuth 2.0 Device Authorization Grant.
        deviceVerificationUri:
          type: string
          format: uri
          description: >
            The verification URI for the device flow. This URI is used as the
            value of the `verification_uri`

            parameter in responses from the device authorization endpoint.
        deviceVerificationUriComplete:
          type: string
          format: uri
          description: >
            The verification URI for the device flow with a placeholder for a
            user code. This URI is used

            to build the value of the `verification_uri_complete` parameter in
            responses from the device

            authorization endpoint.


            It is expected that the URI contains a fixed string `USER_CODE`
            somewhere as a placeholder for

            a user code. For example, like the following.


            `https://example.com/device?user\_code=USER\_CODE`


            The fixed string is replaced with an actual user code when Authlete
            builds a verification URI

            with a user code for the `verification_uri_complete` parameter.


            If this URI is not set, the `verification_uri_complete` parameter
            won't appear in device authorization

            responses.
        deviceFlowCodeDuration:
          type: integer
          format: int32
          description: >
            The duration of device verification codes and end-user verification
            codes issued from the device

            authorization endpoint in seconds. This is used as the value of the
            `expires_in` property in responses

            from the device authorization endpoint.
        deviceFlowPollingInterval:
          type: integer
          format: int32
          description: >
            The minimum interval between polling requests to the token endpoint
            from client applications in

            seconds in device flow. This is used as the value of the `interval`
            property in responses from

            the device authorization endpoint.
        userCodeCharset:
          $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsUserC\
            odeCharset"
        userCodeLength:
          type: integer
          format: int32
          description: >
            The length of end-user verification codes (`user_code`) for Device
            Flow.
        supportedTrustFrameworks:
          type: array
          items:
            type: string
          description: >
            Trust frameworks supported by this service. This corresponds to the
            `trust_frameworks_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedEvidence:
          type: array
          items:
            type: string
          description: >
            Evidence supported by this service. This corresponds to the
            `evidence_supported`
            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedIdentityDocuments:
          type: array
          items:
            type: string
          description: >
            Identity documents supported by this service. This corresponds to
            the `id_documents_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedVerificationMethods:
          type: array
          items:
            type: string
          description: >
            Verification methods supported by this service. This corresponds to
            the `id_documents_verification_methods_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedVerifiedClaims:
          type: array
          items:
            type: string
          description: >
            Verified claims supported by this service. This corresponds to the
            `claims_in_verified_claims_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        verifiedClaimsValidationSchemaSet:
          $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsVerif\
            iedClaimsValidationSchemaSet"
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsAttri\
              butesItems"
          description: |
            The attributes of this service.
        nbfOptional:
          type: boolean
          description: >
            The flag indicating whether the nbf claim in the request object is
            optional even when the authorization

            request is regarded as a FAPI-Part2 request.


            The final version of Financial-grade API was approved in January,
            2021. The Part 2 of the final

            version has new requirements on lifetime of request objects. They
            require that request objects

            contain an `nbf` claim and the lifetime computed by `exp` - `nbf` be
            no longer than 60 minutes.


            Therefore, when an authorization request is regarded as a FAPI-Part2
            request, the request object

            used in the authorization request must contain an nbf claim.
            Otherwise, the authorization server

            rejects the authorization request.


            When this flag is `true`, the `nbf` claim is treated as an optional
            claim even when the authorization

            request is regarded as a FAPI-Part2 request. That is, the
            authorization server does not perform

            the validation on lifetime of the request object.


            Skipping the validation is a violation of the FAPI specification.
            The reason why this flag has

            been prepared nevertheless is that the new requirements (which do
            not exist in the Implementer's

            Draft 2 released in October, 2018) have big impacts on deployed
            implementations of client

            applications and Authlete thinks there should be a mechanism whereby
            to make the migration

            from ID2 to Final smooth without breaking live systems.
        issSuppressed:
          type: boolean
          description: >
            The flag indicating whether generation of the iss response parameter
            is suppressed.


            "OAuth 2.0 Authorization Server Issuer Identifier in Authorization
            Response" has defined a new

            authorization response parameter, `iss`, as a countermeasure for a
            certain type of mix-up attacks.


            The specification requires that the `iss` response parameter always
            be included in authorization

            responses unless JARM (JWT Secured Authorization Response Mode) is
            used.


            When this flag is `true`, the authorization server does not include
            the `iss` response parameter

            in authorization responses. By turning this flag on and off,
            developers of client applications

            can experiment the mix-up attack and the effect of the `iss`
            response parameter.


            Note that this flag should not be `true` in production environment
            unless there are special

            reasons for it.
        supportedCustomClientMetadata:
          type: array
          items:
            type: string
          description: >
            custom client metadata supported by this service.


            Standard specifications define client metadata as necessary. The
            following are such examples.


            * [OpenID Connect Dynamic Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)

            * [RFC 7591 OAuth 2.0 Dynamic Client Registration
            Protocol](https://www.rfc-editor.org/rfc/rfc7591.html)

            * [RFC 8705 OAuth 2.0 Mutual-TLS Client Authentication and
            Certificate-Bound Access
            Tokens](https://www.rfc-editor.org/rfc/rfc8705.html)

            * [OpenID Connect Client-Initiated Backchannel Authentication Flow -
            Core
            1.0](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html)

            * [The OAuth 2.0 Authorization Framework: JWT Secured Authorization
            Request
            (JAR)](https://datatracker.ietf.org/doc/draft-ietf-oauth-jwsreq/)

            * [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            * [OAuth 2.0 Pushed Authorization Requests
            (PAR)](https://datatracker.ietf.org/doc/rfc9126/)

            * [OAuth 2.0 Rich Authorization Requests
            (RAR)](https://datatracker.ietf.org/doc/draft-ietf-oauth-rar/)


            Standard client metadata included in Client Registration Request and
            Client Update Request (cf.

            [OIDC
            DynReg](https://openid.net/specs/openid-connect-registration-1_0.html),
            [RFC 7591](https://www.rfc-editor.org/rfc/rfc7591.html)

            and [RFC 7592](https://www.rfc-editor.org/rfc/rfc7592.html)) are, if
            supported by Authlete, stored

            into Authlete database. On the other hand, unrecognized client
            metadata are discarded.


            By listing up custom client metadata in advance by using this
            property (`supportedCustomClientMetadata`),

            Authlete can recognize them and stores their values into the
            database. The stored custom client

            metadata values can be referenced by `customMetadata`.
        tokenExpirationLinked:
          type: boolean
          description: >
            The flag indicating whether the expiration date of an access token
            never exceeds that of the

            corresponding refresh token.


            When a new access token is issued by a refresh token request (= a
            token request with `grant_type=refresh_token`),

            the expiration date of the access token may exceed the expiration
            date of the corresponding

            refresh token. This behavior itself is not wrong and may happen when
            `refreshTokenKept` is

            `true` and/or when `refreshTokenDurationKept` is `true`.


            When this flag is `true`, the expiration date of an access token
            never exceeds that of the corresponding

            refresh token regardless of the calculated duration based on other
            settings such as `accessTokenDuration`,

            `accessTokenDuration` in `extension` and `access_token.duration`
            scope attribute.


            It is technically possible to set a value which is bigger than the
            duration of refresh tokens

            as the duration of access tokens although it is strange. In the
            case, the duration of an access

            token becomes longer than the duration of the refresh token which is
            issued together with the

            access token. Even if the duration values are configured so, if this
            flag is `true`, the expiration

            date of the access token does not exceed that of the refresh token.
            That is, the duration of

            the access token will be shortened, and as a result, the access
            token and the refresh token

            will have the same expiration date.
        frontChannelRequestObjectEncryptionRequired:
          type: boolean
          description: >
            The flag indicating whether encryption of request object is required
            when the request object

            is passed through the front channel.


            This flag does not affect the processing of request objects at the
            Pushed Authorization Request

            Endpoint, which is defined in [OAuth 2.0 Pushed Authorization
            Requests](https://datatracker.ietf.org/doc/rfc9126/).

            Unecrypted request objects are accepted at the endpoint even if this
            flag is `true`.


            This flag does not indicate whether a request object is always
            required. There is a different

            flag, `requestObjectRequired`, for the purpose. See the description
            of `requestObjectRequired`

            for details.


            Even if this flag is `false`, encryption of request object is
            required if the `frontChannelRequestObjectEncryptionRequired`

            flag of the client is `true`.
        requestObjectEncryptionAlgMatchRequired:
          type: boolean
          description: >
            The flag indicating whether the JWE alg of encrypted request object
            must match the `request_object_encryption_alg`

            client metadata of the client that has sent the request object.


            The request_object_encryption_alg client metadata itself is defined
            in [OpenID Connect Dynamic

            Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)
            as follows.


            > request_object_encryption_alg

            >

            > OPTIONAL. JWE [JWE] alg algorithm [JWA] the RP is declaring that
            it may use for encrypting

            Request Objects sent to the OP. This parameter SHOULD be included
            when symmetric encryption

            will be used, since this signals to the OP that a client_secret
            value needs to be returned

            from which the symmetric key will be derived, that might not
            otherwise be returned. The RP

            MAY still use other supported encryption algorithms or send
            unencrypted Request Objects, even

            when this parameter is present. If both signing and encryption are
            requested, the Request Object

            will be signed then encrypted, with the result being a Nested JWT,
            as defined in [JWT]. The

            default, if omitted, is that the RP is not declaring whether it
            might encrypt any Request Objects.


            The point here is "The RP MAY still use other supported encryption
            algorithms or send unencrypted

            Request Objects, even when this parameter is present."


            The Client's property that represents the client metadata is
            `requestEncryptionAlg`. See the

            description of `requestEncryptionAlg` for details.


            Even if this flag is `false`, the match is required if the
            `requestObjectEncryptionAlgMatchRequired`

            flag of the client is `true`.
        requestObjectEncryptionEncMatchRequired:
          type: boolean
          description: >
            The flag indicating whether the JWE `enc` of encrypted request
            object must match the `request_object_encryption_enc`

            client metadata of the client that has sent the request object.


            The `request_object_encryption_enc` client metadata itself is
            defined in [OpenID Connect Dynamic

            Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)
            as follows.


            > request_object_encryption_enc

            >

            > OPTIONAL. JWE enc algorithm [JWA] the RP is declaring that it may
            use for encrypting Request

            Objects sent to the OP. If request_object_encryption_alg is
            specified, the default for this

            value is A128CBC-HS256. When request_object_encryption_enc is
            included, request_object_encryption_alg

            MUST also be provided.


            The Client's property that represents the client metadata is
            `requestEncryptionEnc`. See the

            description of `requestEncryptionEnc` for details.


            Even if this flag is false, the match is required if the
            `requestObjectEncryptionEncMatchRequired`

            flag is `true`.
        hsmEnabled:
          type: boolean
          description: >
            The flag indicating whether HSM (Hardware Security Module) support
            is enabled for this service.


            When this flag is `false`, keys managed in HSMs are not used even if
            they exist. In addition,

            `/api/hsk/*` APIs reject all requests.


            Even if this flag is `true`, HSM-related features do not work if the
            configuration of the Authlete

            server you are using does not support HSM.
        hsks:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsHsksI\
              tems"
          description: >
            The information about keys managed on HSMs (Hardware Security
            Modules).


            This `hsks` property is output only, meaning that `hsks` in requests
            to `/api/service/create`

            API and `/api/service/update` API do not have any effect. The
            contents of this property is controlled

            only by `/api/hsk/*` APIs.
        grantManagementEndpoint:
          type: string
          description: |
            The URL of the grant management endpoint.
        grantManagementActionRequired:
          type: boolean
          description: >
            The flag indicating whether every authorization request (and any
            request serving as an authorization

            request such as CIBA backchannel authentication request and device
            authorization request) must

            include the `grant_management_action` request parameter.


            This property corresponds to the `grant_management_action_required`
            server metadata defined

            in [Grant Management for OAuth
            2.0](https://openid.net/specs/fapi-grant-management.html).


            Note that setting true to this property will result in blocking all
            public clients because

            the specification requires that grant management be usable only by
            confidential clients for

            security reasons.
        unauthorizedOnClientConfigSupported:
          type: boolean
          description: >
            The flag indicating whether Authlete's `/api/client/registration`
            API uses `UNAUTHORIZED` as

            a value of the `action` response parameter when appropriate.


            The `UNAUTHORIZED` enum value was initially not defined as a
            possible value of the `action`

            parameter in an `/api/client/registration` API response. This means
            that implementations of

            client `configuration` endpoint were not able to conform to [RFC
            7592](https://www.rfc-editor.org/rfc/rfc7592.html)

            strictly.


            For backward compatibility (to avoid breaking running systems),
            Authlete's `/api/client/registration`

            API does not return the `UNAUTHORIZED` enum value if this flag is
            not turned on.


            The steps an existing implementation of client configuration
            endpoint has to do in order to

            conform to the requirement related to "401 Unauthorized" are as
            follows.


            1. Update the Authlete library (e.g. authlete-java-common) your
            system is using.

            2. Update your implementation of client configuration endpoint so
            that it can handle the

            `UNAUTHORIZED` action.

            3. Turn on this `unauthorizedOnClientConfigSupported` flag.
        dcrScopeUsedAsRequestable:
          type: boolean
          description: >
            The flag indicating whether the `scope` request parameter in dynamic
            client registration and

            update requests (RFC 7591 and RFC 7592) is used as scopes that the
            client can request.


            Limiting the range of scopes that a client can request is achieved
            by listing scopes in the

            `client.extension.requestableScopes` property and setting the
            `client.extension.requestableScopesEnabled`

            property to `true`. This feature is called "requestable scopes".


            This property affects behaviors of `/api/client/registration` and
            other family APIs.
        endSessionEndpoint:
          type: string
          format: uri
          description: >
            The endpoint for clients ending the sessions.


            A URL that starts with `https://` and has no fragment component. For
            example, `https://example.com/auth/endSession`.


            The value of this property is used as `end_session_endpoint`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        loopbackRedirectionUriVariable:
          type: boolean
          description: >
            The flag indicating whether the port number component of redirection
            URIs can be variable when

            the host component indicates loopback.


            When this flag is `true`, if the host component of a redirection URI
            specified in an authorization

            request indicates loopback (to be precise, when the host component
            is localhost, `127.0.0.1`

            or `::1`), the port number component is ignored when the specified
            redirection URI is compared

            to pre-registered ones. This behavior is described in [7.3. Loopback
            Interface Redirection](

            https://www.rfc-editor.org/rfc/rfc8252.html#section-7.3) of [RFC
            8252 OAuth 2.0](https://www.rfc-editor.org/rfc/rfc8252.html)

            for Native Apps.


            [3.1.2.3. Dynamic
            Configuration](https://www.rfc-editor.org/rfc/rfc6749.html#section-3.1.2.3)

            of [RFC 6749](https://www.rfc-editor.org/rfc/rfc6749.html) states
            _"If the client registration

            included the full redirection URI, the authorization server MUST
            compare the two URIs using

            simple string comparison as defined in [RFC3986] Section 6.2.1."_
            Also, the description of

            `redirect_uri` in [3.1.2.1. Authentication
            Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest)

            of [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) states

            _"This URI MUST exactly match one of the Redirection URI values for
            the Client pre-registered

            at the OpenID Provider, with the matching performed as described in
            Section 6.2.1 of [RFC3986]

            (**Simple String Comparison**)."_ These "Simple String Comparison"
            requirements are preceded

            by this flag. That is, even when the conditions described in RFC
            6749 and OpenID Connect Core 1.0

            are satisfied, the port number component of loopback redirection
            URIs can be variable when this

            flag is `true`.


            [8.3. Loopback Redirect
            Considerations](https://www.rfc-editor.org/rfc/rfc8252.html#section-8.3)

            of [RFC 8252](https://www.rfc-editor.org/rfc/rfc8252.html) states as
            follows.


            > While redirect URIs using localhost (i.e.,
            `"http://localhost:{port}/{path}"`) function

            similarly to loopback IP redirects described in Section 7.3, the use
            of localhost is NOT RECOMMENDED.

            Specifying a redirect URI with the loopback IP literal rather than
            localhost avoids inadvertently

            listening on network interfaces other than the loopback interface.
            It is also less susceptible

            to client-side firewalls and misconfigured host name resolution on
            the user's device.


            However, Authlete allows the port number component to be variable in
            the case of `localhost`,

            too. It is left to client applications whether they use `localhost`
            or a literal loopback IP

            address (`127.0.0.1` for IPv4 or `::1` for IPv6).


            Section 7.3 and Section 8.3 of [RFC
            8252](https://www.rfc-editor.org/rfc/rfc8252.html) state

            that loopback redirection URIs use the `"http"` scheme, but Authlete
            allows the port number

            component to be variable in other cases (e.g. in the case of the
            `"https"` scheme), too.
        requestObjectAudienceChecked:
          type: boolean
          description: >
            The flag indicating whether Authlete checks whether the `aud` claim
            of request objects matches

            the issuer identifier of this service.


            [Section 6.1. Passing a Request Object by
            Value](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests)

            of [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) has the
            following

            statement.


            > The `aud` value SHOULD be or include the OP's Issuer Identifier
            URL.


            Likewise, [Section 4. Request
            Object](https://www.rfc-editor.org/rfc/rfc9101.html#section-4) of

            [RFC 9101](https://www.rfc-editor.org/rfc/rfc9101.html) (The OAuth
            2.0 Authorization Framework:

            JWT-Secured Authorization Request (JAR)) has the following
            statement.


            > The value of aud should be the value of the authorization server
            (AS) issuer, as defined in

            [RFC 8414](https://www.rfc-editor.org/rfc/rfc8414.html).


            As excerpted above, validation on the `aud` claim of request objects
            is optional. However, if

            this flag is turned on, Authlete checks whether the `aud` claim of
            request objects matches the issuer

            identifier of this service and raises an error if they are
            different.
        accessTokenForExternalAttachmentEmbedded:
          type: boolean
          description: |
            The flag indicating whether Authlete generates access tokens for
            external attachments and embeds them in ID tokens and userinfo
            responses.
        authorityHints:
          type: array
          items:
            type: string
          description: |
            Identifiers of entities that can issue entity statements for this
            service. This property corresponds to the `authority_hints`
            property that appears in a self-signed entity statement that is
            defined in OpenID Connect Federation 1.0.
        federationEnabled:
          type: boolean
          description: >
            flag indicating whether this service supports OpenID Connect
            Federation 1
        federationJwks:
          type: string
          description: >
            JWK Set document containing keys that are used to sign (1)
            self-signed

            entity statement of this service and (2) the response from

            `signed_jwks_uri`.
        federationSignatureKeyId:
          type: string
          description: |
            A key ID to identify a JWK used to sign the entity configuration and
            the signed JWK Set.
        federationConfigurationDuration:
          type: integer
          description: |
            The duration of the entity configuration in seconds.
        federationRegistrationEndpoint:
          type: string
          description: >
            The URI of the federation registration endpoint. This property
            corresponds

            to the `federation_registration_endpoint` server metadata that is

            defined in OpenID Connect Federation 1.0.
        organizationName:
          type: string
          description: |
            The human-readable name representing the organization that operates
            this service. This property corresponds to the `organization_name`
            server metadata that is defined in OpenID Connect Federation 1.0.
        predefinedTransformedClaims:
          type: string
          description: |
            The transformed claims predefined by this service in JSON format.
            This property corresponds to the `transformed_claims_predefined`
            server metadata.
        refreshTokenIdempotent:
          type: boolean
          description: |
            flag indicating whether refresh token requests with the same
            refresh token can be made multiple times in quick succession and
            they can obtain the same renewed refresh token within the short
            period.
        signedJwksUri:
          type: string
          description: >
            The URI of the endpoint that returns this service's JWK Set document
            in

            the JWT format. This property corresponds to the `signed_jwks_uri`

            server metadata defined in OpenID Connect Federation 1.0.
        supportedAttachments:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedAttachmentsItems"
          description: |
            Supported attachment types. This property corresponds to the {@code
            attachments_supported} server metadata which was added by the third
            implementer's draft of OpenID Connect for Identity Assurance 1.0.
        supportedDigestAlgorithms:
          type: array
          items:
            type: string
          description: |
            Supported algorithms used to compute digest values of external
            attachments. This property corresponds to the
            `digest_algorithms_supported` server metadata which was added
            by the third implementer's draft of OpenID Connect for Identity
            Assurance 1.0.
        supportedDocuments:
          type: array
          items:
            type: string
          description: |
            Document types supported by this service. This property corresponds
            to the `documents_supported` server metadata.
        supportedDocumentsMethods:
          type: array
          items:
            type: string
          description: >
            validation and verification processes supported by this service.

            This property corresponds to the `documents_methods_supported`

            server metadata.


            The third implementer's draft of [OpenID Connect for Identity
            Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)

            renamed the

            `id_documents_verification_methods_supported` server metadata to

            `documents_methods_supported`.
        supportedDocumentsValidationMethods:
          type: array
          items:
            type: string
          description: >
            Document validation methods supported by this service. This property

            corresponds to the `documents_validation_methods_supported` server

            metadata which was added by the third implementer's draft of <a
            href=

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedDocumentsVerificationMethods:
          type: array
          items:
            type: string
          description: >
            Document verification methods supported by this service. This
            property

            corresponds to the `documents_verification_methods_supported` server

            metadata which was added by the third implementer's draft of

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedElectronicRecords:
          type: array
          items:
            type: string
          description: >
            Electronic record types supported by this service. This property

            corresponds to the `electronic_records_supported` server metadata

            which was added by the third implementer's draft of

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedClientRegistrationTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedClientRegistrationTypesItems"
        tokenExchangeByIdentifiableClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit unidentifiable clients from
            making token exchange requests.
        tokenExchangeByConfidentialClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit public clients from making
            token exchange requests.
        tokenExchangeByPermittedClientsOnly:
          type: boolean
          description: >
            The flag indicating whether to prohibit clients that have no
            explicit

            permission from making token exchange requests.
        tokenExchangeEncryptedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token exchange requests which
            use encrypted JWTs as input tokens.
        tokenExchangeUnsignedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token exchange requests which
            use unsigned JWTs as input tokens.
        jwtGrantByIdentifiableClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit unidentifiable clients from
            using the grant type "urn:ietf:params:oauth:grant-type:jwt-bearer".
        jwtGrantEncryptedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token requests that use an
            encrypted JWT as an authorization grant with the grant type
            "urn:ietf:params:oauth:grant-type:jwt-bearer".
        jwtGrantUnsignedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token requests that use an
            unsigned JWT as an authorization grant with the grant type
            "urn:ietf:params:oauth:grant-type:jwt-bearer".
        dcrDuplicateSoftwareIdBlocked:
          type: boolean
          description: >
            The flag indicating whether to block DCR (Dynamic Client
            Registration)

            requests whose "software_id" has already been used previously.
        trustAnchors:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsTrust\
              AnchorsItems"
          description: |
            The trust anchors that are referenced when this service resolves
            trust chains of relying parties.

            If this property is empty, client registration fails regardless of
            whether its type is `automatic` or `explicit`. It means
            that OpenID Connect Federation 1.0 does not work.
        openidDroppedOnRefreshWithoutOfflineAccess:
          type: boolean
          description: >
            The flag indicating whether the openid scope should be dropped from

            scopes list assigned to access token issued when a refresh token
            grant

            is used.
        supportedDocumentsCheckMethods:
          type: array
          items:
            type: string
          description: >
            Supported document check methods. This property corresponds to the
            `documents_check_methods_supported`

            server metadata which was added by the fourth implementer's draft of
            OpenID Connect for Identity

            Assurance 1.0.
        rsResponseSigned:
          type: boolean
          description: >
            The flag indicating whether this service signs responses from the
            resource server.
        cnonceDuration:
          type: integer
          format: int64
          description: |
            The duration of `c_nonce`.
        dpopNonceRequired:
          type: boolean
          description: |
            Whether to require DPoP proof JWTs to include the `nonce` claim
            whenever they are presented.
        verifiableCredentialsEnabled:
          type: boolean
          description: >
            Get the flag indicating whether the feature of Verifiable
            Credentials

            for this service is enabled or not.
        credentialJwksUri:
          type: string
          description: |
            The URL at which the JWK Set document of the credential issuer is
            exposed.
        credentialOfferDuration:
          type: integer
          format: int64
          description: |
            The default duration of credential offers in seconds.
        dpopNonceDuration:
          type: integer
          format: int64
          description: |
            The duration of nonce values for DPoP proof JWTs in seconds.
        preAuthorizedGrantAnonymousAccessSupported:
          type: boolean
          description: |
            The flag indicating whether token requests using the pre-authorized
            code grant flow by unidentifiable clients are allowed.
        credentialTransactionDuration:
          type: integer
          format: int64
          description: |
            The duration of transaction ID in seconds that may be issued as a
            result of a credential request or a batch credential request.
        introspectionSignatureKeyId:
          type: string
          description: |
            The key ID of the key for signing introspection responses.
        resourceSignatureKeyId:
          type: string
          description: |
            The key ID of the key for signing introspection responses.
        userPinLength:
          type: integer
          format: int32
          description: |
            The default length of user PINs.
        supportedPromptValues:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedPromptValuesItems"
          description: |
            The supported `prompt` values.
        idTokenReissuable:
          type: boolean
          description: |
            The flag indicating whether to enable the feature of ID token
            reissuance in the refresh token flow.
        credentialJwks:
          type: string
          description: |
            The JWK Set document containing private keys that are used to sign
            verifiable credentials.
        fapiModes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsFapiM\
              odesItems"
          description: >
            FAPI modes for this service.


            When the value of this property is not `null`, Authlete always
            processes requests to this service based

            on the specified FAPI modes if the FAPI feature is enabled in
            Authlete and the FAPI profile is supported

            by this service.


            For instance, when this property is set to an array containing
            `FAPI1_ADVANCED` only, Authlete always

            processes requests to this service based on "Financial-grade API
            Security Profile 1.0 - Part 2:

            Advanced" if the FAPI feature is enabled in Authlete and the FAPI
            profile is supported by this service.
        credentialDuration:
          type: integer
          format: int64
          description: |
            The default duration of verifiable credentials in seconds.
        credentialIssuerMetadata:
          $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsCrede\
            ntialIssuerMetadata"
        idTokenAudType:
          type: string
          description: |
            The type of the `aud` claim in ID tokens.
        nativeSsoSupported:
          type: boolean
          description: >
            The flag to determine to support the [OpenID Connect Native SSO for
            Mobile Apps
            1.0](https://openid.net/specs/openid-connect-native-sso-1_0.html)

            specification (a.k.a. "Native SSO").


            If this property is not set to `true`, Native SSO-specific

            parameters will be ignored or treated as errors. For example, the
            `device_sso scope` will have

            no special meaning (Authlete will not embed the sid claim in the ID
            token), and the `urn:openid:params:token-type:device-secret`

            token type will be treated as unknown, resulting in an error.


            This property corresponds to the `native_sso_supported` server
            metadata. If this property is set

            to `true`, `"native_sso_supported":true` will appear in the server
            metadata document (see [OpenID

            Connect Discovery 1.0, Section 3. OpenID Provider Metadata; RFC
            8414](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata):

            [OAuth 2.0 Authorization Server Metadata, Section 2. Authorization
            Server
            Metadata](https://www.rfc-editor.org/rfc/rfc8414.html#section-2)).
    ServiceGetListApiResponse200Json1ServicesItemsMetadataItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceGetListApiResponse200Json1ServicesItemsMtlsEndpointAliasesItems:
      type: object
      properties:
        name:
          type: string
        uri:
          type: string
          format: uri
    ServiceGetListApiResponse200Json1ServicesItemsSupportedScopesItems:
      type: object
      properties:
        name:
          type: string
          description: The name of the scope.
        defaultEntry:
          type: boolean
          description: "`true` to mark the scope as default. Scopes marked as default are
            regarded as requested when an authorization request from a client
            application does not contain scope request parameter. "
        description:
          type: string
          description: The description about the scope.
        descriptions:
          type: array
          description: The descriptions about this scope in multiple languages.
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedScopesItemsDescriptionsItems"
        attributes:
          type: array
          description: The attributes of the scope.
          items:
            $ref: "#/components/schemas/ServiceGetListApiResponse200Json1ServicesItemsSuppo\
              rtedScopesItemsAttributesItems"
    ServiceGetListApiResponse200Json1ServicesItemsSupportedScopesItemsDescriptionsItems:
      type: object
      properties:
        tag:
          type: string
          description: The language tag part.
        value:
          type: string
          description: The value part.
    ServiceGetListApiResponse200Json1ServicesItemsSupportedScopesItemsAttributesItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceGetListApiResponse200Json1ServicesItemsAttributesItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceGetListApiResponse200Json1ServicesItemsHsksItems:
      type: object
      description: >
        Holds information about a key managed in an HSM (Hardware Security
        Module)
      properties:
        kty:
          type: string
          description: |
            The key type (EC or RSA)
        use:
          type: string
          description: >
            Get the use of the key on the HSM.

            When the key use is "sig" (signature), the private key on the HSM is
            used to sign data and the corresponding public key is used to verify
            the signature.

            When the key use is "enc" (encryption), the private key on the HSM
            is used to decrypt encrypted data which have been encrypted with the
            corresponding public key
        kid:
          type: string
          description: |
            Key ID for the key on the HSM.
        hsmName:
          type: string
          description: >
            The name of the HSM.

            The identifier for the HSM that sits behind the Authlete server. For
            example, "google".
        handle:
          type: string
          description: >
            The handle for the key on the HSM.

            A handle is a base64url-encoded 256-bit random value (43 letters)
            which is assigned by Authlete on the call of the /api/hsk/create API
        publicKey:
          type: string
          description: |
            The public key that corresponds to the key on the HSM.
        alg:
          type: string
          description: >
            The algorithm of the key on the HSM. When the key use is `"sig"`,
            the algorithm represents a

            signing algorithm such as `"ES256"`. When the key use is `"enc"`,
            the algorithm represents an

            encryption algorithm such as `"RSA-OAEP-256"`.
    ServiceGetListApiResponse200Json1ServicesItemsTrustAnchorsItems:
      type: object
      properties:
        entityId:
          type: string
          description: |
            the entity ID of the trust anchor
        jwks:
          type: string
          description: |
            the JWK Set document containing public keys of the trust anchor
    ServiceGetListApiResponse200Json1ServicesItemsCredentialIssuerMetadata:
      type: object
      properties:
        authorizationServers:
          type: array
          items:
            type: string
          description: >
            The identifiers of the authorization servers that the credential
            issuer relies on for authorization.

            This property corresponds to the authorization_servers metadata.
            When the credential issuer works

            as an authorization server for itself, this property should be
            omitted.
        credentialIssuer:
          type: string
          description: The identifier of a credential request.
        credentialEndpoint:
          type: boolean
          description: The URL of the credential endpoint of the credential issuer.
        batchCredentialEndpoint:
          type: integer
          format: int64
          description: The URL of the batch credential endpoint of the credential issuer.
        deferredCredentialEndpoint:
          type: string
          description: The URL of the deferred credential endpoint of the credential issuer.
        credentialsSupported:
          type: boolean
          description: A JSON array describing supported credentials.
        credentialResponseEncryptionAlgValuesSupported:
          type: array
          items:
            type: string
          description: >
            The supported JWE `alg` algorithms for credential response
            encryption. This property corresponds

            to the `credential_response_encryption.alg_values_supported`
            metadata.
        credentialResponseEncryptionEncValuesSupported:
          type: array
          items:
            type: string
          description: >
            The supported JWE `enc` algorithms for credential response
            encryption. This property corresponds

            to the `credential_response_encryption.enc_values_supported`
            metadata.
        requireCredentialResponseEncryption:
          type: boolean
          description: >
            The boolean flag indicating whether credential response encryption
            is required. This property

            corresponds to the
            `credential_response_encryption.encryption_required metadata`. If
            this flag

            is `true`, every credential request to the credential issuer must
            include the `credential_response_encryption`

            property.
    ServiceGetListApiResponse400Json1:
      type: object
      properties:
        resultCode:
          type: string
          description: The code which represents the result of the API call.
        resultMessage:
          type: string
          description: A short message which explains the result of the API call.
    ServiceGetListApiResponse401Json1:
      type: object
      properties:
        resultCode:
          type: string
          description: The code which represents the result of the API call.
        resultMessage:
          type: string
          description: A short message which explains the result of the API call.
    ServiceGetListApiResponse403Json1:
      type: object
      properties:
        resultCode:
          type: string
          description: The code which represents the result of the API call.
        resultMessage:
          type: string
          description: A short message which explains the result of the API call.
    ServiceGetListApiResponse500Json1:
      type: object
      properties:
        resultCode:
          type: string
          description: The code which represents the result of the API call.
        resultMessage:
          type: string
          description: A short message which explains the result of the API call.
    ServiceCreateApiRequestBodyJson1:
      type: object
      properties:
        number:
          type: integer
          format: int32
          readOnly: true
          description: The sequential number of the service. The value of this property is
            assigned by Authlete.
        serviceName:
          type: string
          description: The name of this service.
        issuer:
          type: string
          description: >
            The issuer identifier of the service.


            A URL that starts with  https:// and has no query or fragment
            component.


            The value of this property is used as `iss` claim in an [ID
            token](https://openid.net/specs/openid-connect-core-1_0.html#IDToken)

            and `issuer` property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        description:
          type: string
          description: The description about the service.
        apiKey:
          type: integer
          format: int64
          readOnly: true
          description: The service ID used in Authlete API calls. The value of this
            property is assigned by Authlete.
        clientIdAliasEnabled:
          type: boolean
          description: Deprecated. Always `true`.
        metadata:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1MetadataItems"
          description: >
            The `metadata` of the service. The content of the returned array
            depends on contexts.

            The predefined service metadata is listed in the following table.

              | Key | Description |
              | --- | --- |
              | `clientCount` | The number of client applications which belong to this service.  |
        createdAt:
          type: integer
          format: int64
          readOnly: true
          description: >
            The time at which this service was created. The value is represented
            as milliseconds since the

            UNIX epoch (`1970-01-01`).
        modifiedAt:
          type: integer
          format: int64
          readOnly: true
          description: >
            The time at which this service was last modified. The value is
            represented as milliseconds since

            the UNIX epoch (1970-01-01).
        authenticationCallbackEndpoint:
          type: string
          format: uri
          description: >
            A Web API endpoint for user authentication which is to be prepared
            on the service side.


            The endpoint must be implemented if you do not implement the UI at
            the authorization endpoint

            but use the one provided by Authlete.


            The user authentication at the authorization endpoint provided by
            Authlete is performed by making

            a `POST` request to this endpoint.
        authenticationCallbackApiKey:
          type: string
          description: >
            API key for basic authentication at the authentication callback
            endpoint.


            If the value is not empty, Authlete generates Authorization header
            for Basic authentication when

            making a request to the authentication callback endpoint.
        authenticationCallbackApiSecret:
          type: string
          description: API secret for `basic` authentication at the authentication
            callback endpoint.
        supportedAcrs:
          readOnly: true
          type: array
          items:
            type: string
          description: >
            Values of acrs (authentication context class references) that the
            service supports.


            The value of this property is used as `acr_values_supported`

            property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedGrantTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedGrantTypes\
              Items"
          description: >
            Values of `grant_type` request parameter that the service supports.


            The value of this property is used as `grant_types_supported
            property` in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedResponseTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedResponseTy\
              pesItems"
          description: >
            Values of `response_type` request parameter that

            the service supports. Valid values are listed in Response Type.


            The value of this property is used as `response_types_supported`
            property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedAuthorizationDetailsTypes:
          type: array
          items:
            type: string
          description: >
            The supported data types that can be used as values of the type
            field in `authorization_details`.


            This property corresponds to the
            `authorization_details_types_supported` metadata. See "OAuth 2.0

            Rich Authorization Requests" (RAR) for details.
        supportedServiceProfiles:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedServicePro\
              filesItems"
          description: |
            The profiles that this service supports.
        errorDescriptionOmitted:
          type: boolean
          description: >
            The flag to indicate whether the `error_description` response
            parameter is omitted.


            According to [RFC 6749](https://tools.ietf.org/html/rfc6749), an
            authorization server may include

            the `error_description` response parameter in error responses.


            If `true`, Authlete does not embed the `error_description` response
            parameter in error responses.
        errorUriOmitted:
          type: boolean
          description: >
            The flag to indicate whether the `error_uri` response parameter is
            omitted.


            According to [RFC 6749](https://tools.ietf.org/html/rfc6749), an
            authorization server may include the `error_uri` response parameter
            in error responses.


            If `true`, Authlete does not embed the

            `error_uri` response parameter in error responses.
        authorizationEndpoint:
          type: string
          format: uri
          description: >
            The authorization endpoint of the service.


            A URL that starts with `https://` and has no fragment component. For
            example, `https://example.com/auth/authorization`.


            The value of this property is used as `authorization_endpoint`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directAuthorizationEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct authorization endpoint is
            enabled or not.


            The path of the endpoint is
            `/api/auth/authorization/direct/service-api-key`.
        supportedUiLocales:
          type: array
          items:
            type: string
          description: >
            UI locales that the service supports.


            Each element is a language tag defined in [RFC
            5646](https://tools.ietf.org/html/rfc5646). For example, `en-US` and
            `ja-JP`.


            The value of this property is used as `ui_locales_supported`
            property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedDisplays:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedDisplaysIt\
              ems"
          description: >
            Values of `display` request parameter that service supports.


            The value of this property is used as `display_values_supported`
            property in the Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        pkceRequired:
          type: boolean
          description: >
            The flag to indicate whether the use of Proof Key for Code Exchange
            (PKCE) is always required for authorization requests by
            Authorization Code Flow.


            If `true`, `code_challenge` request parameter is always required for
            authorization requests using Authorization Code Flow.


            See [RFC 7636](https://tools.ietf.org/html/rfc7636) (Proof Key for
            Code Exchange by OAuth Public Clients) for details about
            `code_challenge` request parameter.
        pkceS256Required:
          type: boolean
          description: >
            The flag to indicate whether `S256` is always required as the code
            challenge method whenever [PKCE (RFC
            7636)](https://tools.ietf.org/html/rfc7636) is used.


            If this flag is set to `true`, `code_challenge_method=S256` must be
            included in the authorization request

            whenever it includes the `code_challenge` request parameter.

            Neither omission of the `code_challenge_method` request parameter
            nor use of plain (`code_challenge_method=plain`) is allowed.
        authorizationResponseDuration:
          type: integer
          format: int64
          description: >
            The duration of authorization response JWTs in seconds.


            [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            defines new values for the `response_mode` request parameter. They
            are `query.jwt`, `fragment.jwt`,

            `form_post.jwt` and `jwt`. If one of them is specified as the
            response mode, response parameters

            from the authorization endpoint will be packed into a JWT. This
            property is used to compute the

            value of the `exp` claim of the JWT.
        tokenEndpoint:
          type: string
          format: uri
          description: >
            The [token
            endpoint](https://tools.ietf.org/html/rfc6749#section-3.2) of the
            service.


            A URL that starts with `https://` and has not fragment component.
            For example, `https://example.com/auth/token`.


            The value of this property is used as `token_endpoint` property in
            the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directTokenEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct token endpoint is enabled or
            not. The path of the endpoint

            is `/api/auth/token/direct/service-api-key`.
        supportedTokenAuthMethods:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedTokenAuthM\
              ethodsItems"
          description: >
            Client authentication methods supported by the token endpoint of the
            service.


            The value of this property is used as
            `token_endpoint_auth_methods_supports` property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        missingClientIdAllowed:
          type: boolean
          description: >
            The flag to indicate token requests from public clients without the
            `client_id` request parameter are allowed when the client can be
            guessed from `authorization_code` or `refresh_token`.


            This flag should not be set unless you have special reasons.
        revocationEndpoint:
          type: string
          format: uri
          description: >
            The [revocation endpoint](https://tools.ietf.org/html/rfc7009) of
            the service.


            A URL that starts with `https://`. For example,
            `https://example.com/auth/revocation`.
        directRevocationEndpointEnabled:
          type: boolean
          description: "The flag to indicate whether the direct revocation endpoint is
            enabled or not. The URL of the endpoint is
            `/api/auth/revocation/direct/service-api-key`. "
        supportedRevocationAuthMethods:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedRevocation\
              AuthMethodsItems"
          description: |
            Client authentication methods supported at the revocation endpoint.
        introspectionEndpoint:
          type: string
          description: The URI of the introspection endpoint.
          format: uri
        directIntrospectionEndpointEnabled:
          type: boolean
          description: "The flag to indicate whether the direct userinfo endpoint is
            enabled or not. The path of the endpoint is
            `/api/auth/userinfo/direct/{serviceApiKey}`. "
        supportedIntrospectionAuthMethods:
          type: array
          description: >
            Client authentication methods supported at the introspection
            endpoint.
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedIntrospect\
              ionAuthMethodsItems"
        pushedAuthReqEndpoint:
          type: string
          description: >
            The URI of the pushed authorization request endpoint.


            This property corresponds to the
            `pushed_authorization_request_endpoint` metadata defined in "[5.
            Authorization Server
            Metadata](https://tools.ietf.org/html/draft-lodderstedt-oauth-par#section-5)"
            of OAuth 2.0 Pushed Authorization Requests.
          format: uri
        pushedAuthReqDuration:
          type: integer
          format: int64
          description: >
            The duration of pushed authorization requests in seconds.


            [OAuth 2.0 Pushed Authorization
            Requests](https://tools.ietf.org/html/draft-lodderstedt-oauth-par)

            defines an endpoint (called "pushed authorization request endpoint")
            which client applications

            can register authorization requests into and get corresponding URIs
            (called "request URIs") from.

            The issued URIs represent the registered authorization requests. The
            client applications can use

            the URIs as the value of the `request_uri` request parameter in an
            authorization request.


            The property represents the duration of registered authorization
            requests and is used as the value

            of the `expires_in` parameter in responses from the pushed
            authorization request endpoint.
        parRequired:
          type: boolean
          description: >
            The flag to indicate whether this service requires that clients use
            the pushed authorization

            request endpoint.


            This property corresponds to the
            `require_pushed_authorization_requests` server metadata defined

            in [OAuth 2.0 Pushed Authorization
            Requests](https://tools.ietf.org/html/draft-lodderstedt-oauth-par).
        requestObjectRequired:
          type: boolean
          description: >
            The flag to indicate whether this service requires that
            authorization requests always utilize

            a request object by using either request or `request_uri` request
            parameter.


            If this flag is set to `true` and the value of
            `traditionalRequestObjectProcessingApplied` is

            `false`, the value of `require_signed_request_object` server
            metadata of this service is reported

            as `true` in the discovery document. The metadata is defined in JAR
            (JWT Secured Authorization Request).

            That `require_signed_request_object` is `true` means that
            authorization requests which don't

            conform to the JAR specification are rejected.
        traditionalRequestObjectProcessingApplied:
          type: boolean
          description: >
            The flag to indicate whether a request object is processed based on
            rules defined in

            [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) or JAR
            (JWT

            Secured Authorization Request).


            Differences between rules in OpenID Connect Core 1.0 and ones in JAR
            are as follows.
              - JAR requires that a request object be always -signed.
              - JAR does not allow request parameters outside a request object to be referred to.
              - OIDC Core 1.0 requires that response_type request parameter exist outside a request object even if the request object includes the request parameter.
              - OIDC Core 1.0 requires that scope request parameter exist outside a request object if the authorization request is an
              - OIDC request even if the request object includes the request parameter.

            If this flag is set to `false` and the value of
            `requestObjectRequired` is `true`, the value of

            `require_signed_request_object` server metadata of this service

            is reported as `true` in the discovery document. The metadata is
            defined in JAR (JWT Secured

            Authorization Request). That `require_signed_request_object` is
            `true` means that authorization

            requests which don't conform to the JAR specification are rejected.
        mutualTlsValidatePkiCertChain:
          type: boolean
          description: >
            The flag to indicate whether this service validates certificate
            chains during PKI-based client mutual TLS authentication.
        trustedRootCertificates:
          type: array
          items:
            type: string
          description: >
            The list of root certificates trusted by this service for PKI-based
            client mutual TLS authentication.
        mtlsEndpointAliases:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1MtlsEndpointAliases\
              Items"
          description: >
            The MTLS endpoint aliases.


            This property corresponds to the mtls_endpoint_aliases metadata
            defined in "5. Metadata for Mutual TLS Endpoint Aliases" of [OAuth
            2.0 Mutual TLS Client Authentication and Certificate-Bound Access
            Tokens](https://datatracker.ietf.org/doc/rfc8705/).


            The aliases will be embedded in the response from the discovery
            endpoint like the following.


            ```json

            {
              ......,
              "mtls_endpoint_aliases": {
                "token_endpoint":         "https://mtls.example.com/token",
                "revocation_endpoint":    "https://mtls.example.com/revo",
                "introspection_endpoint": "https://mtls.example.com/introspect"
              }
            }

            ```
        accessTokenType:
          type: string
          description: >
            The access token type.


            This value is used as the value of `token_type` property in access
            token responses. If this service

            complies with [RFC 6750](https://tools.ietf.org/html/rfc6750), the
            value of this property should

            be `Bearer`.


            See [RFC 6749 (OAuth 2.0), 7.1. Access Token
            Types](https://tools.ietf.org/html/rfc6749#section-7.1) for details.
        tlsClientCertificateBoundAccessTokens:
          type: boolean
          description: >
            The flag to indicate whether this service supports issuing TLS
            client certificate bound access tokens.
        accessTokenDuration:
          type: integer
          format: int64
          description: >
            The duration of access tokens in seconds. This value is used as the
            value of `expires_in` property

            in access token responses. `expires_in` is defined [RFC 6749, 5.1.
            Successful
            Response](https://tools.ietf.org/html/rfc6749#section-5.1).
        singleAccessTokenPerSubject:
          type: boolean
          description: >
            The flag to indicate whether the number of access tokens per subject
            (and per client) is at most one or can be more.


            If `true`, an attempt to issue a new access token invalidates
            existing access tokens that are associated with the same subject and
            the same client.


            Note that, however, attempts by [Client Credentials
            Flow](https://tools.ietf.org/html/rfc6749#section-4.4) do not
            invalidate existing access tokens because access tokens issued by
            Client Credentials Flow are not associated with any end-user's
            subject. Also note that an attempt by [Refresh Token
            Flow](https://tools.ietf.org/html/rfc6749#section-6) invalidates the
            coupled access token only and this invalidation is always performed
            regardless of whether the value of this setting item is `true` or
            `false`.
        accessTokenSignAlg:
          $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1AccessTokenSignAlg"
        accessTokenSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for signing access tokens.


            A JWK Set can be registered as a property of a service. A JWK Set
            can contain 0 or more JWKs.

            Authlete Server has to pick up one JWK for signing from the JWK Set
            when it generates a JWT-based

            access token. Authlete Server searches the registered JWK Set for a
            JWK which satisfies conditions

            for access token signature. If the number of JWK candidates which
            satisfy the conditions is 1,

            there is no problem. On the other hand, if there exist multiple
            candidates, a Key ID is needed

            to be specified so that Authlete Server can pick up one JWK from
            among the JWK candidates.
        refreshTokenDuration:
          type: integer
          format: int64
          description: The duration of refresh tokens in seconds. The related
            specifications have no requirements on refresh token duration, but
            Authlete sets expiration for refresh tokens.
        refreshTokenDurationKept:
          type: boolean
          description: >
            The flag to indicate whether the remaining duration of the used
            refresh token is taken over to

            the newly issued refresh token.
        refreshTokenDurationReset:
          type: boolean
          description: >
            The flag which indicates whether duration of refresh tokens are
            reset when they are used even

            if the `refreshTokenKept` property of this service set to is `true`
            (= even if "Refresh Token

            Continuous Use" is "Kept").


            This flag has no effect when the `refreshTokenKept` property is set
            to `false`. In other words,

            if this service issues a new refresh token on every refresh token
            request, the refresh token

            will have fresh duration (unless `refreshTokenDurationKept` is set
            to `true`) and this

            `refreshTokenDurationReset` property is not referenced.
        refreshTokenKept:
          type: boolean
          description: >
            The flag to indicate whether a refresh token remains unchanged or
            gets renewed after its use.


            If `true`, a refresh token used to get a new access token remains
            valid after its use. Otherwise, if `false`, a refresh token is
            invalidated after its use and a new refresh token is issued.


            See [RFC 6749 6. Refreshing an Access
            Token](https://tools.ietf.org/html/rfc6749#section-6), as to how to
            get a new access token using a refresh token.
        supportedScopes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedScopesItem\
              s"
          description: >
            Scopes supported by the service.


            Authlete strongly recommends that the service register at least the
            following scopes.


            | Name | Description |

            | --- | --- |

            | openid | A permission to get an ID token of an end-user. The
            `openid` scope appears in [OpenID Connect Core 1.0, 3.1.2.1.
            Authentication Request,
            scope](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
            Without this scope, Authlete does not allow `response_type` request
            parameter to have values other than code and token. |

            | profile | A permission to get information about `name`,
            `family_name`, `given_name`, `middle_name`, `nickname`,
            `preferred_username`, `profile`, `picture`, `website`, `gender`,
            `birthdate`, `zoneinfo`, `locale` and `updated_at` from the user
            info endpoint. See [OpenID Connect Core 1.0, 5.4. Requesting Claims
            using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | email | A permission to get information about `email` and
            `email_verified` from the user info endpoint. See [OpenID Connect
            Core 1.0, 5.4. Requesting Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | address | A permission to get information about address from the
            user info endpoint. See [OpenID Connect Core 1.0, 5.4. Requesting
            Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            and [5.1.1. Address
            Claim](https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim)
            for details. |

            | phone | A permission to get information about `phone_number` and
            `phone_number_verified` from the user info endpoint. See [OpenID
            Connect Core 1.0, 5.4. Requesting Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | offline_access | A permission to get information from the user
            info endpoint even when the end-user is not present. See [OpenID
            Connect Core 1.0, 11. Offline
            Access](https://openid.net/specs/openid-connect-core-1_0.html#OfflineAccess)
            for details. |


            The value of this property is used as `scopes_supported` property in
            the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        scopeRequired:
          type: boolean
          description: >
            The flag to indicate whether requests that request no scope are
            rejected or not.


            When a request has no explicit `scope` parameter and the service's
            pre-defined default scope set is empty,

            the authorization server regards the request requests no scope. When
            this flag is set to `true`,

            requests that request no scope are rejected.


            The requirement below excerpted from [RFC 6749 Section
            3.3](https://tools.ietf.org/html/rfc6749#section-3.3)

            does not explicitly mention the case where the default scope set is
            empty.


            > If the client omits the scope parameter when requesting
            authorization, the authorization server

            MUST either process the request using a pre-defined default value or
            fail the request indicating an invalid scope.


            However, if you interpret *"the default scope set exists but is
            empty"* as *"the default scope set does not exist"*

            and want to strictly conform to the requirement above, this flag has
            to be `true`.
        idTokenDuration:
          type: integer
          format: int64
          description: >
            'The duration of [ID
            token](https://openid.net/specs/openid-connect-core-1_0.html#IDToken)s

            in seconds. This value is used to calculate the value of `exp` claim
            in an ID token.'
        allowableClockSkew:
          type: integer
          format: int32
          description: >
            The allowable clock skew between the server and clients in seconds.


            The clock skew is taken into consideration when time-related claims
            in a JWT (e.g. `exp`, `iat`, `nbf`) are verified.
        supportedClaimTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedClaimTypes\
              Items"
          description: >
            Claim types supported by the service. Valid values are listed in
            Claim Type. Note that Authlete

            currently doesn't provide any API to help implementations for
            `AGGREGATED` and `DISTRIBUTED`.


            The value of this property is used as `claim_types_supported`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedClaimLocales:
          type: array
          items:
            type: string
          description: >
            Claim locales that the service supports. Each element is a language
            tag defined in [RFC 5646](https://tools.ietf.org/html/rfc5646).

            For example, `en-US` and `ja-JP`. See [OpenID Connect Core 1.0, 5.2.
            Languages and
            Scripts](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts)

            for details.


            The value of this property is used as `claims_locales_supported`
            property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedClaims:
          type: array
          items:
            type: string
          description: >
            Claim names that the service supports. The standard claim names
            listed in [OpenID Connect Core 1.0,

            5.1. Standard
            Claim](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims)
            should

            be supported. The following is the list of standard claims.


            - `sub`

            - `name`

            - `given_name`

            - `family_name`

            - `middle_name`

            - `nickname`

            - `preferred_username`

            - `profile`

            - `picture`

            - `website`

            - `email`

            - `email_verified`

            - `gender`

            - `birthdate`

            - `zoneinfo`

            - `locale`

            - `phone_number`

            - `phone_number_verified`

            - `address`

            - `updated_at`


            The value of this property is used as `claims_supported` property in
            the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).


            The service may support its original claim names. See [OpenID
            Connect Core 1.0, 5.1.2. Additional

            Claims](https://openid.net/specs/openid-connect-core-1_0.html#AdditionalClaims).
        claimShortcutRestrictive:
          type: boolean
          description: >
            The flag indicating whether claims specified by shortcut scopes
            (e.g. `profile`) are included

            in the issued ID token only when no access token is issued.


            To strictly conform to the description below excerpted from [OpenID
            Connect Core 1.0 Section

            5.4](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims),
            this flag has to be `true`.


            > The Claims requested by the profile, email, address, and phone
            scope values are returned from

            the UserInfo Endpoint, as described in Section 5.3.2, when a
            response_type value is used that

            results in an Access Token being issued. However, when no Access
            Token is issued (which is the

            case for the response_type value id_token), the resulting Claims are
            returned in the ID Token.
        jwksUri:
          type: string
          format: uri
          description: >
            The URL of the service's [JSON Web Key
            Set](https://tools.ietf.org/html/rfc7517) document. For

            example, `http://example.com/auth/jwks`.


            Client applications accesses this URL (1) to get the public key of
            the service to validate the

            signature of an ID token issued by the service and (2) to get the
            public key of the service to

            encrypt an request object of the client application. See [OpenID
            Connect Core 1.0, 10. Signatures

            and
            Encryption](https://openid.net/specs/openid-connect-core-1_0.html#SigEnc)
            for details.


            The value of this property is used as `jwks_uri` property in the
            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directJwksEndpointEnabled:
          type: boolean
          description: >
            'The flag to indicate whether the direct jwks endpoint is enabled or
            not. The path of the endpoint

            is `/api/service/jwks/get/direct/service-api-key`. '
        jwks:
          type: string
          description: >
            The content of the service's [JSON Web Key
            Set](https://tools.ietf.org/html/rfc7517) document.


            If this property is not `null` in a `/service/create` request or a
            `/service/update` request,

            Authlete hosts the content in the database. This property must not
            be `null` and must contain

            pairs of public/private keys if the service wants to support
            asymmetric signatures for ID tokens

            and asymmetric encryption for request objects. See [OpenID Connect
            Core 1.0, 10. Signatures and

            Encryption](https://openid.net/specs/openid-connect-core-1_0.html#SigEnc)
            for details.
        idTokenSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for ID token signature using an
            asymmetric key.


            A JWK Set can be registered as a property of a Service. A JWK Set
            can contain 0 or more JWKs

            (See [RFC 7517](https://tools.ietf.org/html/rfc7517) for details
            about JWK). Authlete Server has

            to pick up one JWK for signature from the JWK Set when it generates
            an ID token and signature

            using an asymmetric key is required. Authlete Server searches the
            registered JWK Set for a JWK

            which satisfies conditions for ID token signature. If the number of
            JWK candidates which satisfy

            the conditions is 1, there is no problem. On the other hand, if
            there exist multiple candidates,

            a [Key ID](https://tools.ietf.org/html/rfc7517#section-4.5) is
            needed to be specified so that

            Authlete Server can pick up one JWK from among the JWK candidates.


            This `idTokenSignatureKeyId` property exists for the purpose
            described above. For key rotation

            (OpenID Connect Core 1.0, [10.1.1. Rotation of Asymmetric Signing
            Keys](http://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys)),

            this mechanism is needed.
        userInfoSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for user info signature using an
            asymmetric key.


            A JWK Set can be registered as a property of a Service. A JWK Set
            can contain 0 or more JWKs

            (See [RFC 7517](https://tools.ietf.org/html/rfc7517) for details
            about JWK). Authlete Server has

            to pick up one JWK for signature from the JWK Set when it is
            required to sign user info (which

            is returned from [userinfo
            endpoint](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo))

            using an asymmetric key. Authlete Server searches the registered JWK
            Set for a JWK which satisfies

            conditions for user info signature. If the number of JWK candidates
            which satisfy the conditions

            is 1, there is no problem. On the other hand, if there exist
            multiple candidates, a [Key
            ID](https://tools.ietf.org/html/rfc7517#section-4.5)

            is needed to be specified so that Authlete Server can pick up one
            JWK from among the JWK candidates.


            This `userInfoSignatureKeyId` property exists for the purpose
            described above. For key rotation

            (OpenID Connect Core 1.0, [10.1.1. Rotation of Asymmetric Signing
            Keys](http://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys)),

            this mechanism is needed.
        authorizationSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for signing authorization
            responses using an asymmetric key.


            [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            defines new values for the `response_mode` request parameter. They
            are `query.jwt`, `fragment.jwt`,

            `form_post.jwt` and `jwt`. If one of them is specified as the
            response mode, response parameters

            from the authorization endpoint will be packed into a JWT. This
            property is used to compute the

            value of the `exp` claim of the JWT.


            Authlete Server searches the JWK Set for a JWK which satisfies
            conditions for authorization response

            signature. If the number of JWK candidates which satisfy the
            conditions is 1, there is no problem.

            On the other hand, if there exist multiple candidates, a Key ID is
            needed to be specified so that

            Authlete Server can pick up one JWK from among the JWK candidates.
            This property exists to specify

            the key ID.
        userInfoEndpoint:
          type: string
          description: >
            The [user info
            endpoint](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo)
            of the

            service. A URL that starts with `https://`. For example,
            `https://example.com/auth/userinfo`.


            The value of this property is used as `userinfo_endpoint` property
            in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        directUserInfoEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct userinfo endpoint is enabled
            or not. The path

            of the endpoint is `/api/auth/userinfo/direct/service-api-key`.
        dynamicRegistrationSupported:
          type: boolean
          description: >
            The boolean flag which indicates whether the [OAuth 2.0 Dynamic
            Client Registration Protocol](https://tools.ietf.org/html/rfc7591)

            is supported.
        registrationEndpoint:
          type: string
          description: >
            The [registration
            endpoint](http://openid.net/specs/openid-connect-registration-1_0.html#ClientRegistration)

            of the service. A URL that starts with `https://`. For example,
            `https://example.com/auth/registration`.


            The value of this property is used as `registration_endpoint`
            property in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        registrationManagementEndpoint:
          type: string
          description: >
            The URI of the registration management endpoint. If dynamic client
            registration is supported,

            and this is set, this URI will be used as the basis of the client's
            management endpoint by appending

            `/clientid}/` to it as a path element. If this is unset, the value
            of `registrationEndpoint` will

            be used as the URI base instead.
          format: uri
        policyUri:
          type: string
          description: >
            The URL of the "Policy" of the service.


            The value of this property is used as `op_policy_uri` property in
            the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        tosUri:
          type: string
          description: >
            The URL of the "Terms Of Service" of the service.


            The value of this property is used as `op_tos_uri` property in the
            [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        serviceDocumentation:
          type: string
          description: >
            The URL of a page where documents for developers can be found.


            The value of this property is used as `service_documentation`
            property in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        backchannelAuthenticationEndpoint:
          type: string
          description: >
            The URI of backchannel authentication endpoint, which is defined in
            the specification of [CIBA

            (Client Initiated Backchannel
            Authentication)](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html).
          format: uri
        supportedBackchannelTokenDeliveryModes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedBackchanne\
              lTokenDeliveryModesItems"
          description: >
            The supported backchannel token delivery modes. This property
            corresponds to the `backchannel_token_delivery_modes_supported`

            metadata.


            Backchannel token delivery modes are defined in the specification of
            [CIBA (Client Initiated

            Backchannel
            Authentication)](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html).
        backchannelAuthReqIdDuration:
          type: integer
          format: int32
          description: >
            The duration of backchannel authentication request IDs issued from
            the backchannel authentication

            endpoint in seconds. This is used as the value of the `expires_in`
            property in responses from

            the backchannel authentication endpoint.
        backchannelPollingInterval:
          type: integer
          format: int32
          description: >
            The minimum interval between polling requests to the token endpoint
            from client applications in

            seconds. This is used as the value of the `interval` property in
            responses from the backchannel

            authentication endpoint.
        backchannelUserCodeParameterSupported:
          type: boolean
          description: >
            The boolean flag which indicates whether the `user_code` request
            parameter is supported at the

            backchannel authentication endpoint. This property corresponds to
            the `backchannel_user_code_parameter_supported`

            metadata.
        backchannelBindingMessageRequiredInFapi:
          type: boolean
          description: >
            The flag to indicate whether the `binding_message` request parameter
            is always required whenever

            a backchannel authentication request is judged as a request for
            Financial-grade API.


            The FAPI-CIBA profile requires that the authorization server _"shall
            ensure unique authorization

            context exists in the authorization request or require a
            `binding_message` in the authorization

            request"_ (FAPI-CIBA, 5.2.2, 2). The simplest way to fulfill this
            requirement is to set this property

            to `true`.


            If this property is set to `false`, the `binding_message` request
            parameter remains optional

            even in FAPI context, but in exchange, your authorization server
            must implement a custom mechanism

            that ensures each backchannel authentication request has unique
            context.
        deviceAuthorizationEndpoint:
          type: string
          format: uri
          description: >
            The URI of the device authorization endpoint.


            Device authorization endpoint is defined in the specification of
            OAuth 2.0 Device Authorization Grant.
        deviceVerificationUri:
          type: string
          format: uri
          description: >
            The verification URI for the device flow. This URI is used as the
            value of the `verification_uri`

            parameter in responses from the device authorization endpoint.
        deviceVerificationUriComplete:
          type: string
          format: uri
          description: >
            The verification URI for the device flow with a placeholder for a
            user code. This URI is used

            to build the value of the `verification_uri_complete` parameter in
            responses from the device

            authorization endpoint.


            It is expected that the URI contains a fixed string `USER_CODE`
            somewhere as a placeholder for

            a user code. For example, like the following.


            `https://example.com/device?user\_code=USER\_CODE`


            The fixed string is replaced with an actual user code when Authlete
            builds a verification URI

            with a user code for the `verification_uri_complete` parameter.


            If this URI is not set, the `verification_uri_complete` parameter
            won't appear in device authorization

            responses.
        deviceFlowCodeDuration:
          type: integer
          format: int32
          description: >
            The duration of device verification codes and end-user verification
            codes issued from the device

            authorization endpoint in seconds. This is used as the value of the
            `expires_in` property in responses

            from the device authorization endpoint.
        deviceFlowPollingInterval:
          type: integer
          format: int32
          description: >
            The minimum interval between polling requests to the token endpoint
            from client applications in

            seconds in device flow. This is used as the value of the `interval`
            property in responses from

            the device authorization endpoint.
        userCodeCharset:
          $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1UserCodeCharset"
        userCodeLength:
          type: integer
          format: int32
          description: >
            The length of end-user verification codes (`user_code`) for Device
            Flow.
        supportedTrustFrameworks:
          type: array
          items:
            type: string
          description: >
            Trust frameworks supported by this service. This corresponds to the
            `trust_frameworks_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedEvidence:
          type: array
          items:
            type: string
          description: >
            Evidence supported by this service. This corresponds to the
            `evidence_supported`
            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedIdentityDocuments:
          type: array
          items:
            type: string
          description: >
            Identity documents supported by this service. This corresponds to
            the `id_documents_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedVerificationMethods:
          type: array
          items:
            type: string
          description: >
            Verification methods supported by this service. This corresponds to
            the `id_documents_verification_methods_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedVerifiedClaims:
          type: array
          items:
            type: string
          description: >
            Verified claims supported by this service. This corresponds to the
            `claims_in_verified_claims_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        verifiedClaimsValidationSchemaSet:
          $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1VerifiedClaimsValid\
            ationSchemaSet"
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1AttributesItems"
          description: |
            The attributes of this service.
        nbfOptional:
          type: boolean
          description: >
            The flag indicating whether the nbf claim in the request object is
            optional even when the authorization

            request is regarded as a FAPI-Part2 request.


            The final version of Financial-grade API was approved in January,
            2021. The Part 2 of the final

            version has new requirements on lifetime of request objects. They
            require that request objects

            contain an `nbf` claim and the lifetime computed by `exp` - `nbf` be
            no longer than 60 minutes.


            Therefore, when an authorization request is regarded as a FAPI-Part2
            request, the request object

            used in the authorization request must contain an nbf claim.
            Otherwise, the authorization server

            rejects the authorization request.


            When this flag is `true`, the `nbf` claim is treated as an optional
            claim even when the authorization

            request is regarded as a FAPI-Part2 request. That is, the
            authorization server does not perform

            the validation on lifetime of the request object.


            Skipping the validation is a violation of the FAPI specification.
            The reason why this flag has

            been prepared nevertheless is that the new requirements (which do
            not exist in the Implementer's

            Draft 2 released in October, 2018) have big impacts on deployed
            implementations of client

            applications and Authlete thinks there should be a mechanism whereby
            to make the migration

            from ID2 to Final smooth without breaking live systems.
        issSuppressed:
          type: boolean
          description: >
            The flag indicating whether generation of the iss response parameter
            is suppressed.


            "OAuth 2.0 Authorization Server Issuer Identifier in Authorization
            Response" has defined a new

            authorization response parameter, `iss`, as a countermeasure for a
            certain type of mix-up attacks.


            The specification requires that the `iss` response parameter always
            be included in authorization

            responses unless JARM (JWT Secured Authorization Response Mode) is
            used.


            When this flag is `true`, the authorization server does not include
            the `iss` response parameter

            in authorization responses. By turning this flag on and off,
            developers of client applications

            can experiment the mix-up attack and the effect of the `iss`
            response parameter.


            Note that this flag should not be `true` in production environment
            unless there are special

            reasons for it.
        supportedCustomClientMetadata:
          type: array
          items:
            type: string
          description: >
            custom client metadata supported by this service.


            Standard specifications define client metadata as necessary. The
            following are such examples.


            * [OpenID Connect Dynamic Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)

            * [RFC 7591 OAuth 2.0 Dynamic Client Registration
            Protocol](https://www.rfc-editor.org/rfc/rfc7591.html)

            * [RFC 8705 OAuth 2.0 Mutual-TLS Client Authentication and
            Certificate-Bound Access
            Tokens](https://www.rfc-editor.org/rfc/rfc8705.html)

            * [OpenID Connect Client-Initiated Backchannel Authentication Flow -
            Core
            1.0](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html)

            * [The OAuth 2.0 Authorization Framework: JWT Secured Authorization
            Request
            (JAR)](https://datatracker.ietf.org/doc/draft-ietf-oauth-jwsreq/)

            * [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            * [OAuth 2.0 Pushed Authorization Requests
            (PAR)](https://datatracker.ietf.org/doc/rfc9126/)

            * [OAuth 2.0 Rich Authorization Requests
            (RAR)](https://datatracker.ietf.org/doc/draft-ietf-oauth-rar/)


            Standard client metadata included in Client Registration Request and
            Client Update Request (cf.

            [OIDC
            DynReg](https://openid.net/specs/openid-connect-registration-1_0.html),
            [RFC 7591](https://www.rfc-editor.org/rfc/rfc7591.html)

            and [RFC 7592](https://www.rfc-editor.org/rfc/rfc7592.html)) are, if
            supported by Authlete, stored

            into Authlete database. On the other hand, unrecognized client
            metadata are discarded.


            By listing up custom client metadata in advance by using this
            property (`supportedCustomClientMetadata`),

            Authlete can recognize them and stores their values into the
            database. The stored custom client

            metadata values can be referenced by `customMetadata`.
        tokenExpirationLinked:
          type: boolean
          description: >
            The flag indicating whether the expiration date of an access token
            never exceeds that of the

            corresponding refresh token.


            When a new access token is issued by a refresh token request (= a
            token request with `grant_type=refresh_token`),

            the expiration date of the access token may exceed the expiration
            date of the corresponding

            refresh token. This behavior itself is not wrong and may happen when
            `refreshTokenKept` is

            `true` and/or when `refreshTokenDurationKept` is `true`.


            When this flag is `true`, the expiration date of an access token
            never exceeds that of the corresponding

            refresh token regardless of the calculated duration based on other
            settings such as `accessTokenDuration`,

            `accessTokenDuration` in `extension` and `access_token.duration`
            scope attribute.


            It is technically possible to set a value which is bigger than the
            duration of refresh tokens

            as the duration of access tokens although it is strange. In the
            case, the duration of an access

            token becomes longer than the duration of the refresh token which is
            issued together with the

            access token. Even if the duration values are configured so, if this
            flag is `true`, the expiration

            date of the access token does not exceed that of the refresh token.
            That is, the duration of

            the access token will be shortened, and as a result, the access
            token and the refresh token

            will have the same expiration date.
        frontChannelRequestObjectEncryptionRequired:
          type: boolean
          description: >
            The flag indicating whether encryption of request object is required
            when the request object

            is passed through the front channel.


            This flag does not affect the processing of request objects at the
            Pushed Authorization Request

            Endpoint, which is defined in [OAuth 2.0 Pushed Authorization
            Requests](https://datatracker.ietf.org/doc/rfc9126/).

            Unecrypted request objects are accepted at the endpoint even if this
            flag is `true`.


            This flag does not indicate whether a request object is always
            required. There is a different

            flag, `requestObjectRequired`, for the purpose. See the description
            of `requestObjectRequired`

            for details.


            Even if this flag is `false`, encryption of request object is
            required if the `frontChannelRequestObjectEncryptionRequired`

            flag of the client is `true`.
        requestObjectEncryptionAlgMatchRequired:
          type: boolean
          description: >
            The flag indicating whether the JWE alg of encrypted request object
            must match the `request_object_encryption_alg`

            client metadata of the client that has sent the request object.


            The request_object_encryption_alg client metadata itself is defined
            in [OpenID Connect Dynamic

            Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)
            as follows.


            > request_object_encryption_alg

            >

            > OPTIONAL. JWE [JWE] alg algorithm [JWA] the RP is declaring that
            it may use for encrypting

            Request Objects sent to the OP. This parameter SHOULD be included
            when symmetric encryption

            will be used, since this signals to the OP that a client_secret
            value needs to be returned

            from which the symmetric key will be derived, that might not
            otherwise be returned. The RP

            MAY still use other supported encryption algorithms or send
            unencrypted Request Objects, even

            when this parameter is present. If both signing and encryption are
            requested, the Request Object

            will be signed then encrypted, with the result being a Nested JWT,
            as defined in [JWT]. The

            default, if omitted, is that the RP is not declaring whether it
            might encrypt any Request Objects.


            The point here is "The RP MAY still use other supported encryption
            algorithms or send unencrypted

            Request Objects, even when this parameter is present."


            The Client's property that represents the client metadata is
            `requestEncryptionAlg`. See the

            description of `requestEncryptionAlg` for details.


            Even if this flag is `false`, the match is required if the
            `requestObjectEncryptionAlgMatchRequired`

            flag of the client is `true`.
        requestObjectEncryptionEncMatchRequired:
          type: boolean
          description: >
            The flag indicating whether the JWE `enc` of encrypted request
            object must match the `request_object_encryption_enc`

            client metadata of the client that has sent the request object.


            The `request_object_encryption_enc` client metadata itself is
            defined in [OpenID Connect Dynamic

            Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)
            as follows.


            > request_object_encryption_enc

            >

            > OPTIONAL. JWE enc algorithm [JWA] the RP is declaring that it may
            use for encrypting Request

            Objects sent to the OP. If request_object_encryption_alg is
            specified, the default for this

            value is A128CBC-HS256. When request_object_encryption_enc is
            included, request_object_encryption_alg

            MUST also be provided.


            The Client's property that represents the client metadata is
            `requestEncryptionEnc`. See the

            description of `requestEncryptionEnc` for details.


            Even if this flag is false, the match is required if the
            `requestObjectEncryptionEncMatchRequired`

            flag is `true`.
        hsmEnabled:
          type: boolean
          description: >
            The flag indicating whether HSM (Hardware Security Module) support
            is enabled for this service.


            When this flag is `false`, keys managed in HSMs are not used even if
            they exist. In addition,

            `/api/hsk/*` APIs reject all requests.


            Even if this flag is `true`, HSM-related features do not work if the
            configuration of the Authlete

            server you are using does not support HSM.
        hsks:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1HsksItems"
          description: >
            The information about keys managed on HSMs (Hardware Security
            Modules).


            This `hsks` property is output only, meaning that `hsks` in requests
            to `/api/service/create`

            API and `/api/service/update` API do not have any effect. The
            contents of this property is controlled

            only by `/api/hsk/*` APIs.
        grantManagementEndpoint:
          type: string
          description: |
            The URL of the grant management endpoint.
        grantManagementActionRequired:
          type: boolean
          description: >
            The flag indicating whether every authorization request (and any
            request serving as an authorization

            request such as CIBA backchannel authentication request and device
            authorization request) must

            include the `grant_management_action` request parameter.


            This property corresponds to the `grant_management_action_required`
            server metadata defined

            in [Grant Management for OAuth
            2.0](https://openid.net/specs/fapi-grant-management.html).


            Note that setting true to this property will result in blocking all
            public clients because

            the specification requires that grant management be usable only by
            confidential clients for

            security reasons.
        unauthorizedOnClientConfigSupported:
          type: boolean
          description: >
            The flag indicating whether Authlete's `/api/client/registration`
            API uses `UNAUTHORIZED` as

            a value of the `action` response parameter when appropriate.


            The `UNAUTHORIZED` enum value was initially not defined as a
            possible value of the `action`

            parameter in an `/api/client/registration` API response. This means
            that implementations of

            client `configuration` endpoint were not able to conform to [RFC
            7592](https://www.rfc-editor.org/rfc/rfc7592.html)

            strictly.


            For backward compatibility (to avoid breaking running systems),
            Authlete's `/api/client/registration`

            API does not return the `UNAUTHORIZED` enum value if this flag is
            not turned on.


            The steps an existing implementation of client configuration
            endpoint has to do in order to

            conform to the requirement related to "401 Unauthorized" are as
            follows.


            1. Update the Authlete library (e.g. authlete-java-common) your
            system is using.

            2. Update your implementation of client configuration endpoint so
            that it can handle the

            `UNAUTHORIZED` action.

            3. Turn on this `unauthorizedOnClientConfigSupported` flag.
        dcrScopeUsedAsRequestable:
          type: boolean
          description: >
            The flag indicating whether the `scope` request parameter in dynamic
            client registration and

            update requests (RFC 7591 and RFC 7592) is used as scopes that the
            client can request.


            Limiting the range of scopes that a client can request is achieved
            by listing scopes in the

            `client.extension.requestableScopes` property and setting the
            `client.extension.requestableScopesEnabled`

            property to `true`. This feature is called "requestable scopes".


            This property affects behaviors of `/api/client/registration` and
            other family APIs.
        endSessionEndpoint:
          type: string
          format: uri
          description: >
            The endpoint for clients ending the sessions.


            A URL that starts with `https://` and has no fragment component. For
            example, `https://example.com/auth/endSession`.


            The value of this property is used as `end_session_endpoint`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        loopbackRedirectionUriVariable:
          type: boolean
          description: >
            The flag indicating whether the port number component of redirection
            URIs can be variable when

            the host component indicates loopback.


            When this flag is `true`, if the host component of a redirection URI
            specified in an authorization

            request indicates loopback (to be precise, when the host component
            is localhost, `127.0.0.1`

            or `::1`), the port number component is ignored when the specified
            redirection URI is compared

            to pre-registered ones. This behavior is described in [7.3. Loopback
            Interface Redirection](

            https://www.rfc-editor.org/rfc/rfc8252.html#section-7.3) of [RFC
            8252 OAuth 2.0](https://www.rfc-editor.org/rfc/rfc8252.html)

            for Native Apps.


            [3.1.2.3. Dynamic
            Configuration](https://www.rfc-editor.org/rfc/rfc6749.html#section-3.1.2.3)

            of [RFC 6749](https://www.rfc-editor.org/rfc/rfc6749.html) states
            _"If the client registration

            included the full redirection URI, the authorization server MUST
            compare the two URIs using

            simple string comparison as defined in [RFC3986] Section 6.2.1."_
            Also, the description of

            `redirect_uri` in [3.1.2.1. Authentication
            Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest)

            of [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) states

            _"This URI MUST exactly match one of the Redirection URI values for
            the Client pre-registered

            at the OpenID Provider, with the matching performed as described in
            Section 6.2.1 of [RFC3986]

            (**Simple String Comparison**)."_ These "Simple String Comparison"
            requirements are preceded

            by this flag. That is, even when the conditions described in RFC
            6749 and OpenID Connect Core 1.0

            are satisfied, the port number component of loopback redirection
            URIs can be variable when this

            flag is `true`.


            [8.3. Loopback Redirect
            Considerations](https://www.rfc-editor.org/rfc/rfc8252.html#section-8.3)

            of [RFC 8252](https://www.rfc-editor.org/rfc/rfc8252.html) states as
            follows.


            > While redirect URIs using localhost (i.e.,
            `"http://localhost:{port}/{path}"`) function

            similarly to loopback IP redirects described in Section 7.3, the use
            of localhost is NOT RECOMMENDED.

            Specifying a redirect URI with the loopback IP literal rather than
            localhost avoids inadvertently

            listening on network interfaces other than the loopback interface.
            It is also less susceptible

            to client-side firewalls and misconfigured host name resolution on
            the user's device.


            However, Authlete allows the port number component to be variable in
            the case of `localhost`,

            too. It is left to client applications whether they use `localhost`
            or a literal loopback IP

            address (`127.0.0.1` for IPv4 or `::1` for IPv6).


            Section 7.3 and Section 8.3 of [RFC
            8252](https://www.rfc-editor.org/rfc/rfc8252.html) state

            that loopback redirection URIs use the `"http"` scheme, but Authlete
            allows the port number

            component to be variable in other cases (e.g. in the case of the
            `"https"` scheme), too.
        requestObjectAudienceChecked:
          type: boolean
          description: >
            The flag indicating whether Authlete checks whether the `aud` claim
            of request objects matches

            the issuer identifier of this service.


            [Section 6.1. Passing a Request Object by
            Value](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests)

            of [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) has the
            following

            statement.


            > The `aud` value SHOULD be or include the OP's Issuer Identifier
            URL.


            Likewise, [Section 4. Request
            Object](https://www.rfc-editor.org/rfc/rfc9101.html#section-4) of

            [RFC 9101](https://www.rfc-editor.org/rfc/rfc9101.html) (The OAuth
            2.0 Authorization Framework:

            JWT-Secured Authorization Request (JAR)) has the following
            statement.


            > The value of aud should be the value of the authorization server
            (AS) issuer, as defined in

            [RFC 8414](https://www.rfc-editor.org/rfc/rfc8414.html).


            As excerpted above, validation on the `aud` claim of request objects
            is optional. However, if

            this flag is turned on, Authlete checks whether the `aud` claim of
            request objects matches the issuer

            identifier of this service and raises an error if they are
            different.
        accessTokenForExternalAttachmentEmbedded:
          type: boolean
          description: |
            The flag indicating whether Authlete generates access tokens for
            external attachments and embeds them in ID tokens and userinfo
            responses.
        authorityHints:
          type: array
          items:
            type: string
          description: |
            Identifiers of entities that can issue entity statements for this
            service. This property corresponds to the `authority_hints`
            property that appears in a self-signed entity statement that is
            defined in OpenID Connect Federation 1.0.
        federationEnabled:
          type: boolean
          description: >
            flag indicating whether this service supports OpenID Connect
            Federation 1
        federationJwks:
          type: string
          description: >
            JWK Set document containing keys that are used to sign (1)
            self-signed

            entity statement of this service and (2) the response from

            `signed_jwks_uri`.
        federationSignatureKeyId:
          type: string
          description: |
            A key ID to identify a JWK used to sign the entity configuration and
            the signed JWK Set.
        federationConfigurationDuration:
          type: integer
          description: |
            The duration of the entity configuration in seconds.
        federationRegistrationEndpoint:
          type: string
          description: >
            The URI of the federation registration endpoint. This property
            corresponds

            to the `federation_registration_endpoint` server metadata that is

            defined in OpenID Connect Federation 1.0.
        organizationName:
          type: string
          description: |
            The human-readable name representing the organization that operates
            this service. This property corresponds to the `organization_name`
            server metadata that is defined in OpenID Connect Federation 1.0.
        predefinedTransformedClaims:
          type: string
          description: |
            The transformed claims predefined by this service in JSON format.
            This property corresponds to the `transformed_claims_predefined`
            server metadata.
        refreshTokenIdempotent:
          type: boolean
          description: |
            flag indicating whether refresh token requests with the same
            refresh token can be made multiple times in quick succession and
            they can obtain the same renewed refresh token within the short
            period.
        signedJwksUri:
          type: string
          description: >
            The URI of the endpoint that returns this service's JWK Set document
            in

            the JWT format. This property corresponds to the `signed_jwks_uri`

            server metadata defined in OpenID Connect Federation 1.0.
        supportedAttachments:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedAttachment\
              sItems"
          description: |
            Supported attachment types. This property corresponds to the {@code
            attachments_supported} server metadata which was added by the third
            implementer's draft of OpenID Connect for Identity Assurance 1.0.
        supportedDigestAlgorithms:
          type: array
          items:
            type: string
          description: |
            Supported algorithms used to compute digest values of external
            attachments. This property corresponds to the
            `digest_algorithms_supported` server metadata which was added
            by the third implementer's draft of OpenID Connect for Identity
            Assurance 1.0.
        supportedDocuments:
          type: array
          items:
            type: string
          description: |
            Document types supported by this service. This property corresponds
            to the `documents_supported` server metadata.
        supportedDocumentsMethods:
          type: array
          items:
            type: string
          description: >
            validation and verification processes supported by this service.

            This property corresponds to the `documents_methods_supported`

            server metadata.


            The third implementer's draft of [OpenID Connect for Identity
            Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)

            renamed the

            `id_documents_verification_methods_supported` server metadata to

            `documents_methods_supported`.
        supportedDocumentsValidationMethods:
          type: array
          items:
            type: string
          description: >
            Document validation methods supported by this service. This property

            corresponds to the `documents_validation_methods_supported` server

            metadata which was added by the third implementer's draft of <a
            href=

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedDocumentsVerificationMethods:
          type: array
          items:
            type: string
          description: >
            Document verification methods supported by this service. This
            property

            corresponds to the `documents_verification_methods_supported` server

            metadata which was added by the third implementer's draft of

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedElectronicRecords:
          type: array
          items:
            type: string
          description: >
            Electronic record types supported by this service. This property

            corresponds to the `electronic_records_supported` server metadata

            which was added by the third implementer's draft of

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedClientRegistrationTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedClientRegi\
              strationTypesItems"
        tokenExchangeByIdentifiableClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit unidentifiable clients from
            making token exchange requests.
        tokenExchangeByConfidentialClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit public clients from making
            token exchange requests.
        tokenExchangeByPermittedClientsOnly:
          type: boolean
          description: >
            The flag indicating whether to prohibit clients that have no
            explicit

            permission from making token exchange requests.
        tokenExchangeEncryptedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token exchange requests which
            use encrypted JWTs as input tokens.
        tokenExchangeUnsignedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token exchange requests which
            use unsigned JWTs as input tokens.
        jwtGrantByIdentifiableClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit unidentifiable clients from
            using the grant type "urn:ietf:params:oauth:grant-type:jwt-bearer".
        jwtGrantEncryptedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token requests that use an
            encrypted JWT as an authorization grant with the grant type
            "urn:ietf:params:oauth:grant-type:jwt-bearer".
        jwtGrantUnsignedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token requests that use an
            unsigned JWT as an authorization grant with the grant type
            "urn:ietf:params:oauth:grant-type:jwt-bearer".
        dcrDuplicateSoftwareIdBlocked:
          type: boolean
          description: >
            The flag indicating whether to block DCR (Dynamic Client
            Registration)

            requests whose "software_id" has already been used previously.
        trustAnchors:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1TrustAnchorsItems"
          description: |
            The trust anchors that are referenced when this service resolves
            trust chains of relying parties.

            If this property is empty, client registration fails regardless of
            whether its type is `automatic` or `explicit`. It means
            that OpenID Connect Federation 1.0 does not work.
        openidDroppedOnRefreshWithoutOfflineAccess:
          type: boolean
          description: >
            The flag indicating whether the openid scope should be dropped from

            scopes list assigned to access token issued when a refresh token
            grant

            is used.
        supportedDocumentsCheckMethods:
          type: array
          items:
            type: string
          description: >
            Supported document check methods. This property corresponds to the
            `documents_check_methods_supported`

            server metadata which was added by the fourth implementer's draft of
            OpenID Connect for Identity

            Assurance 1.0.
        rsResponseSigned:
          type: boolean
          description: >
            The flag indicating whether this service signs responses from the
            resource server.
        cnonceDuration:
          type: integer
          format: int64
          description: |
            The duration of `c_nonce`.
        dpopNonceRequired:
          type: boolean
          description: |
            Whether to require DPoP proof JWTs to include the `nonce` claim
            whenever they are presented.
        verifiableCredentialsEnabled:
          type: boolean
          description: >
            Get the flag indicating whether the feature of Verifiable
            Credentials

            for this service is enabled or not.
        credentialJwksUri:
          type: string
          description: |
            The URL at which the JWK Set document of the credential issuer is
            exposed.
        credentialOfferDuration:
          type: integer
          format: int64
          description: |
            The default duration of credential offers in seconds.
        dpopNonceDuration:
          type: integer
          format: int64
          description: |
            The duration of nonce values for DPoP proof JWTs in seconds.
        preAuthorizedGrantAnonymousAccessSupported:
          type: boolean
          description: |
            The flag indicating whether token requests using the pre-authorized
            code grant flow by unidentifiable clients are allowed.
        credentialTransactionDuration:
          type: integer
          format: int64
          description: |
            The duration of transaction ID in seconds that may be issued as a
            result of a credential request or a batch credential request.
        introspectionSignatureKeyId:
          type: string
          description: |
            The key ID of the key for signing introspection responses.
        resourceSignatureKeyId:
          type: string
          description: |
            The key ID of the key for signing introspection responses.
        userPinLength:
          type: integer
          format: int32
          description: |
            The default length of user PINs.
        supportedPromptValues:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedPromptValu\
              esItems"
          description: |
            The supported `prompt` values.
        idTokenReissuable:
          type: boolean
          description: |
            The flag indicating whether to enable the feature of ID token
            reissuance in the refresh token flow.
        credentialJwks:
          type: string
          description: |
            The JWK Set document containing private keys that are used to sign
            verifiable credentials.
        fapiModes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1FapiModesItems"
          description: >
            FAPI modes for this service.


            When the value of this property is not `null`, Authlete always
            processes requests to this service based

            on the specified FAPI modes if the FAPI feature is enabled in
            Authlete and the FAPI profile is supported

            by this service.


            For instance, when this property is set to an array containing
            `FAPI1_ADVANCED` only, Authlete always

            processes requests to this service based on "Financial-grade API
            Security Profile 1.0 - Part 2:

            Advanced" if the FAPI feature is enabled in Authlete and the FAPI
            profile is supported by this service.
        credentialDuration:
          type: integer
          format: int64
          description: |
            The default duration of verifiable credentials in seconds.
        credentialIssuerMetadata:
          $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1CredentialIssuerMet\
            adata"
        idTokenAudType:
          type: string
          description: |
            The type of the `aud` claim in ID tokens.
        nativeSsoSupported:
          type: boolean
          description: >
            The flag to determine to support the [OpenID Connect Native SSO for
            Mobile Apps
            1.0](https://openid.net/specs/openid-connect-native-sso-1_0.html)

            specification (a.k.a. "Native SSO").


            If this property is not set to `true`, Native SSO-specific

            parameters will be ignored or treated as errors. For example, the
            `device_sso scope` will have

            no special meaning (Authlete will not embed the sid claim in the ID
            token), and the `urn:openid:params:token-type:device-secret`

            token type will be treated as unknown, resulting in an error.


            This property corresponds to the `native_sso_supported` server
            metadata. If this property is set

            to `true`, `"native_sso_supported":true` will appear in the server
            metadata document (see [OpenID

            Connect Discovery 1.0, Section 3. OpenID Provider Metadata; RFC
            8414](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata):

            [OAuth 2.0 Authorization Server Metadata, Section 2. Authorization
            Server
            Metadata](https://www.rfc-editor.org/rfc/rfc8414.html#section-2)).
    ServiceCreateApiRequestBodyJson1MetadataItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceCreateApiRequestBodyJson1MtlsEndpointAliasesItems:
      type: object
      properties:
        name:
          type: string
        uri:
          type: string
          format: uri
    ServiceCreateApiRequestBodyJson1SupportedScopesItems:
      type: object
      properties:
        name:
          type: string
          description: The name of the scope.
        defaultEntry:
          type: boolean
          description: "`true` to mark the scope as default. Scopes marked as default are
            regarded as requested when an authorization request from a client
            application does not contain scope request parameter. "
        description:
          type: string
          description: The description about the scope.
        descriptions:
          type: array
          description: The descriptions about this scope in multiple languages.
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedScopesItem\
              sDescriptionsItems"
        attributes:
          type: array
          description: The attributes of the scope.
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBodyJson1SupportedScopesItem\
              sAttributesItems"
    ServiceCreateApiRequestBodyJson1SupportedScopesItemsDescriptionsItems:
      type: object
      properties:
        tag:
          type: string
          description: The language tag part.
        value:
          type: string
          description: The value part.
    ServiceCreateApiRequestBodyJson1SupportedScopesItemsAttributesItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceCreateApiRequestBodyJson1AttributesItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceCreateApiRequestBodyJson1HsksItems:
      type: object
      description: >
        Holds information about a key managed in an HSM (Hardware Security
        Module)
      properties:
        kty:
          type: string
          description: |
            The key type (EC or RSA)
        use:
          type: string
          description: >
            Get the use of the key on the HSM.

            When the key use is "sig" (signature), the private key on the HSM is
            used to sign data and the corresponding public key is used to verify
            the signature.

            When the key use is "enc" (encryption), the private key on the HSM
            is used to decrypt encrypted data which have been encrypted with the
            corresponding public key
        kid:
          type: string
          description: |
            Key ID for the key on the HSM.
        hsmName:
          type: string
          description: >
            The name of the HSM.

            The identifier for the HSM that sits behind the Authlete server. For
            example, "google".
        handle:
          type: string
          description: >
            The handle for the key on the HSM.

            A handle is a base64url-encoded 256-bit random value (43 letters)
            which is assigned by Authlete on the call of the /api/hsk/create API
        publicKey:
          type: string
          description: |
            The public key that corresponds to the key on the HSM.
        alg:
          type: string
          description: >
            The algorithm of the key on the HSM. When the key use is `"sig"`,
            the algorithm represents a

            signing algorithm such as `"ES256"`. When the key use is `"enc"`,
            the algorithm represents an

            encryption algorithm such as `"RSA-OAEP-256"`.
    ServiceCreateApiRequestBodyJson1TrustAnchorsItems:
      type: object
      properties:
        entityId:
          type: string
          description: |
            the entity ID of the trust anchor
        jwks:
          type: string
          description: |
            the JWK Set document containing public keys of the trust anchor
    ServiceCreateApiRequestBodyJson1CredentialIssuerMetadata:
      type: object
      properties:
        authorizationServers:
          type: array
          items:
            type: string
          description: >
            The identifiers of the authorization servers that the credential
            issuer relies on for authorization.

            This property corresponds to the authorization_servers metadata.
            When the credential issuer works

            as an authorization server for itself, this property should be
            omitted.
        credentialIssuer:
          type: string
          description: The identifier of a credential request.
        credentialEndpoint:
          type: boolean
          description: The URL of the credential endpoint of the credential issuer.
        batchCredentialEndpoint:
          type: integer
          format: int64
          description: The URL of the batch credential endpoint of the credential issuer.
        deferredCredentialEndpoint:
          type: string
          description: The URL of the deferred credential endpoint of the credential issuer.
        credentialsSupported:
          type: boolean
          description: A JSON array describing supported credentials.
        credentialResponseEncryptionAlgValuesSupported:
          type: array
          items:
            type: string
          description: >
            The supported JWE `alg` algorithms for credential response
            encryption. This property corresponds

            to the `credential_response_encryption.alg_values_supported`
            metadata.
        credentialResponseEncryptionEncValuesSupported:
          type: array
          items:
            type: string
          description: >
            The supported JWE `enc` algorithms for credential response
            encryption. This property corresponds

            to the `credential_response_encryption.enc_values_supported`
            metadata.
        requireCredentialResponseEncryption:
          type: boolean
          description: >
            The boolean flag indicating whether credential response encryption
            is required. This property

            corresponds to the
            `credential_response_encryption.encryption_required metadata`. If
            this flag

            is `true`, every credential request to the credential issuer must
            include the `credential_response_encryption`

            property.
    ServiceCreateApiRequestBody1:
      type: object
      properties:
        number:
          type: integer
          format: int32
          readOnly: true
          description: The sequential number of the service. The value of this property is
            assigned by Authlete.
        serviceName:
          type: string
          description: The name of this service.
        issuer:
          type: string
          description: >
            The issuer identifier of the service.


            A URL that starts with  https:// and has no query or fragment
            component.


            The value of this property is used as `iss` claim in an [ID
            token](https://openid.net/specs/openid-connect-core-1_0.html#IDToken)

            and `issuer` property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        description:
          type: string
          description: The description about the service.
        apiKey:
          type: integer
          format: int64
          readOnly: true
          description: The service ID used in Authlete API calls. The value of this
            property is assigned by Authlete.
        clientIdAliasEnabled:
          type: boolean
          description: Deprecated. Always `true`.
        metadata:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1MetadataItems"
          description: >
            The `metadata` of the service. The content of the returned array
            depends on contexts.

            The predefined service metadata is listed in the following table.

              | Key | Description |
              | --- | --- |
              | `clientCount` | The number of client applications which belong to this service.  |
        createdAt:
          type: integer
          format: int64
          readOnly: true
          description: >
            The time at which this service was created. The value is represented
            as milliseconds since the

            UNIX epoch (`1970-01-01`).
        modifiedAt:
          type: integer
          format: int64
          readOnly: true
          description: >
            The time at which this service was last modified. The value is
            represented as milliseconds since

            the UNIX epoch (1970-01-01).
        authenticationCallbackEndpoint:
          type: string
          format: uri
          description: >
            A Web API endpoint for user authentication which is to be prepared
            on the service side.


            The endpoint must be implemented if you do not implement the UI at
            the authorization endpoint

            but use the one provided by Authlete.


            The user authentication at the authorization endpoint provided by
            Authlete is performed by making

            a `POST` request to this endpoint.
        authenticationCallbackApiKey:
          type: string
          description: >
            API key for basic authentication at the authentication callback
            endpoint.


            If the value is not empty, Authlete generates Authorization header
            for Basic authentication when

            making a request to the authentication callback endpoint.
        authenticationCallbackApiSecret:
          type: string
          description: API secret for `basic` authentication at the authentication
            callback endpoint.
        supportedAcrs:
          readOnly: true
          type: array
          items:
            type: string
          description: >
            Values of acrs (authentication context class references) that the
            service supports.


            The value of this property is used as `acr_values_supported`

            property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedGrantTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedGrantTypesItem\
              s"
          description: >
            Values of `grant_type` request parameter that the service supports.


            The value of this property is used as `grant_types_supported
            property` in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedResponseTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedResponseTypesI\
              tems"
          description: >
            Values of `response_type` request parameter that

            the service supports. Valid values are listed in Response Type.


            The value of this property is used as `response_types_supported`
            property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedAuthorizationDetailsTypes:
          type: array
          items:
            type: string
          description: >
            The supported data types that can be used as values of the type
            field in `authorization_details`.


            This property corresponds to the
            `authorization_details_types_supported` metadata. See "OAuth 2.0

            Rich Authorization Requests" (RAR) for details.
        supportedServiceProfiles:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedServiceProfile\
              sItems"
          description: |
            The profiles that this service supports.
        errorDescriptionOmitted:
          type: boolean
          description: >
            The flag to indicate whether the `error_description` response
            parameter is omitted.


            According to [RFC 6749](https://tools.ietf.org/html/rfc6749), an
            authorization server may include

            the `error_description` response parameter in error responses.


            If `true`, Authlete does not embed the `error_description` response
            parameter in error responses.
        errorUriOmitted:
          type: boolean
          description: >
            The flag to indicate whether the `error_uri` response parameter is
            omitted.


            According to [RFC 6749](https://tools.ietf.org/html/rfc6749), an
            authorization server may include the `error_uri` response parameter
            in error responses.


            If `true`, Authlete does not embed the

            `error_uri` response parameter in error responses.
        authorizationEndpoint:
          type: string
          format: uri
          description: >
            The authorization endpoint of the service.


            A URL that starts with `https://` and has no fragment component. For
            example, `https://example.com/auth/authorization`.


            The value of this property is used as `authorization_endpoint`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directAuthorizationEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct authorization endpoint is
            enabled or not.


            The path of the endpoint is
            `/api/auth/authorization/direct/service-api-key`.
        supportedUiLocales:
          type: array
          items:
            type: string
          description: >
            UI locales that the service supports.


            Each element is a language tag defined in [RFC
            5646](https://tools.ietf.org/html/rfc5646). For example, `en-US` and
            `ja-JP`.


            The value of this property is used as `ui_locales_supported`
            property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedDisplays:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedDisplaysItems"
          description: >
            Values of `display` request parameter that service supports.


            The value of this property is used as `display_values_supported`
            property in the Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        pkceRequired:
          type: boolean
          description: >
            The flag to indicate whether the use of Proof Key for Code Exchange
            (PKCE) is always required for authorization requests by
            Authorization Code Flow.


            If `true`, `code_challenge` request parameter is always required for
            authorization requests using Authorization Code Flow.


            See [RFC 7636](https://tools.ietf.org/html/rfc7636) (Proof Key for
            Code Exchange by OAuth Public Clients) for details about
            `code_challenge` request parameter.
        pkceS256Required:
          type: boolean
          description: >
            The flag to indicate whether `S256` is always required as the code
            challenge method whenever [PKCE (RFC
            7636)](https://tools.ietf.org/html/rfc7636) is used.


            If this flag is set to `true`, `code_challenge_method=S256` must be
            included in the authorization request

            whenever it includes the `code_challenge` request parameter.

            Neither omission of the `code_challenge_method` request parameter
            nor use of plain (`code_challenge_method=plain`) is allowed.
        authorizationResponseDuration:
          type: integer
          format: int64
          description: >
            The duration of authorization response JWTs in seconds.


            [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            defines new values for the `response_mode` request parameter. They
            are `query.jwt`, `fragment.jwt`,

            `form_post.jwt` and `jwt`. If one of them is specified as the
            response mode, response parameters

            from the authorization endpoint will be packed into a JWT. This
            property is used to compute the

            value of the `exp` claim of the JWT.
        tokenEndpoint:
          type: string
          format: uri
          description: >
            The [token
            endpoint](https://tools.ietf.org/html/rfc6749#section-3.2) of the
            service.


            A URL that starts with `https://` and has not fragment component.
            For example, `https://example.com/auth/token`.


            The value of this property is used as `token_endpoint` property in
            the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directTokenEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct token endpoint is enabled or
            not. The path of the endpoint

            is `/api/auth/token/direct/service-api-key`.
        supportedTokenAuthMethods:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedTokenAuthMetho\
              dsItems"
          description: >
            Client authentication methods supported by the token endpoint of the
            service.


            The value of this property is used as
            `token_endpoint_auth_methods_supports` property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        missingClientIdAllowed:
          type: boolean
          description: >
            The flag to indicate token requests from public clients without the
            `client_id` request parameter are allowed when the client can be
            guessed from `authorization_code` or `refresh_token`.


            This flag should not be set unless you have special reasons.
        revocationEndpoint:
          type: string
          format: uri
          description: >
            The [revocation endpoint](https://tools.ietf.org/html/rfc7009) of
            the service.


            A URL that starts with `https://`. For example,
            `https://example.com/auth/revocation`.
        directRevocationEndpointEnabled:
          type: boolean
          description: "The flag to indicate whether the direct revocation endpoint is
            enabled or not. The URL of the endpoint is
            `/api/auth/revocation/direct/service-api-key`. "
        supportedRevocationAuthMethods:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedRevocationAuth\
              MethodsItems"
          description: |
            Client authentication methods supported at the revocation endpoint.
        introspectionEndpoint:
          type: string
          description: The URI of the introspection endpoint.
          format: uri
        directIntrospectionEndpointEnabled:
          type: boolean
          description: "The flag to indicate whether the direct userinfo endpoint is
            enabled or not. The path of the endpoint is
            `/api/auth/userinfo/direct/{serviceApiKey}`. "
        supportedIntrospectionAuthMethods:
          type: array
          description: >
            Client authentication methods supported at the introspection
            endpoint.
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedIntrospectionA\
              uthMethodsItems"
        pushedAuthReqEndpoint:
          type: string
          description: >
            The URI of the pushed authorization request endpoint.


            This property corresponds to the
            `pushed_authorization_request_endpoint` metadata defined in "[5.
            Authorization Server
            Metadata](https://tools.ietf.org/html/draft-lodderstedt-oauth-par#section-5)"
            of OAuth 2.0 Pushed Authorization Requests.
          format: uri
        pushedAuthReqDuration:
          type: integer
          format: int64
          description: >
            The duration of pushed authorization requests in seconds.


            [OAuth 2.0 Pushed Authorization
            Requests](https://tools.ietf.org/html/draft-lodderstedt-oauth-par)

            defines an endpoint (called "pushed authorization request endpoint")
            which client applications

            can register authorization requests into and get corresponding URIs
            (called "request URIs") from.

            The issued URIs represent the registered authorization requests. The
            client applications can use

            the URIs as the value of the `request_uri` request parameter in an
            authorization request.


            The property represents the duration of registered authorization
            requests and is used as the value

            of the `expires_in` parameter in responses from the pushed
            authorization request endpoint.
        parRequired:
          type: boolean
          description: >
            The flag to indicate whether this service requires that clients use
            the pushed authorization

            request endpoint.


            This property corresponds to the
            `require_pushed_authorization_requests` server metadata defined

            in [OAuth 2.0 Pushed Authorization
            Requests](https://tools.ietf.org/html/draft-lodderstedt-oauth-par).
        requestObjectRequired:
          type: boolean
          description: >
            The flag to indicate whether this service requires that
            authorization requests always utilize

            a request object by using either request or `request_uri` request
            parameter.


            If this flag is set to `true` and the value of
            `traditionalRequestObjectProcessingApplied` is

            `false`, the value of `require_signed_request_object` server
            metadata of this service is reported

            as `true` in the discovery document. The metadata is defined in JAR
            (JWT Secured Authorization Request).

            That `require_signed_request_object` is `true` means that
            authorization requests which don't

            conform to the JAR specification are rejected.
        traditionalRequestObjectProcessingApplied:
          type: boolean
          description: >
            The flag to indicate whether a request object is processed based on
            rules defined in

            [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) or JAR
            (JWT

            Secured Authorization Request).


            Differences between rules in OpenID Connect Core 1.0 and ones in JAR
            are as follows.
              - JAR requires that a request object be always -signed.
              - JAR does not allow request parameters outside a request object to be referred to.
              - OIDC Core 1.0 requires that response_type request parameter exist outside a request object even if the request object includes the request parameter.
              - OIDC Core 1.0 requires that scope request parameter exist outside a request object if the authorization request is an
              - OIDC request even if the request object includes the request parameter.

            If this flag is set to `false` and the value of
            `requestObjectRequired` is `true`, the value of

            `require_signed_request_object` server metadata of this service

            is reported as `true` in the discovery document. The metadata is
            defined in JAR (JWT Secured

            Authorization Request). That `require_signed_request_object` is
            `true` means that authorization

            requests which don't conform to the JAR specification are rejected.
        mutualTlsValidatePkiCertChain:
          type: boolean
          description: >
            The flag to indicate whether this service validates certificate
            chains during PKI-based client mutual TLS authentication.
        trustedRootCertificates:
          type: array
          items:
            type: string
          description: >
            The list of root certificates trusted by this service for PKI-based
            client mutual TLS authentication.
        mtlsEndpointAliases:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1MtlsEndpointAliasesItem\
              s"
          description: >
            The MTLS endpoint aliases.


            This property corresponds to the mtls_endpoint_aliases metadata
            defined in "5. Metadata for Mutual TLS Endpoint Aliases" of [OAuth
            2.0 Mutual TLS Client Authentication and Certificate-Bound Access
            Tokens](https://datatracker.ietf.org/doc/rfc8705/).


            The aliases will be embedded in the response from the discovery
            endpoint like the following.


            ```json

            {
              ......,
              "mtls_endpoint_aliases": {
                "token_endpoint":         "https://mtls.example.com/token",
                "revocation_endpoint":    "https://mtls.example.com/revo",
                "introspection_endpoint": "https://mtls.example.com/introspect"
              }
            }

            ```
        accessTokenType:
          type: string
          description: >
            The access token type.


            This value is used as the value of `token_type` property in access
            token responses. If this service

            complies with [RFC 6750](https://tools.ietf.org/html/rfc6750), the
            value of this property should

            be `Bearer`.


            See [RFC 6749 (OAuth 2.0), 7.1. Access Token
            Types](https://tools.ietf.org/html/rfc6749#section-7.1) for details.
        tlsClientCertificateBoundAccessTokens:
          type: boolean
          description: >
            The flag to indicate whether this service supports issuing TLS
            client certificate bound access tokens.
        accessTokenDuration:
          type: integer
          format: int64
          description: >
            The duration of access tokens in seconds. This value is used as the
            value of `expires_in` property

            in access token responses. `expires_in` is defined [RFC 6749, 5.1.
            Successful
            Response](https://tools.ietf.org/html/rfc6749#section-5.1).
        singleAccessTokenPerSubject:
          type: boolean
          description: >
            The flag to indicate whether the number of access tokens per subject
            (and per client) is at most one or can be more.


            If `true`, an attempt to issue a new access token invalidates
            existing access tokens that are associated with the same subject and
            the same client.


            Note that, however, attempts by [Client Credentials
            Flow](https://tools.ietf.org/html/rfc6749#section-4.4) do not
            invalidate existing access tokens because access tokens issued by
            Client Credentials Flow are not associated with any end-user's
            subject. Also note that an attempt by [Refresh Token
            Flow](https://tools.ietf.org/html/rfc6749#section-6) invalidates the
            coupled access token only and this invalidation is always performed
            regardless of whether the value of this setting item is `true` or
            `false`.
        accessTokenSignAlg:
          $ref: "#/components/schemas/ServiceCreateApiRequestBody1AccessTokenSignAlg"
        accessTokenSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for signing access tokens.


            A JWK Set can be registered as a property of a service. A JWK Set
            can contain 0 or more JWKs.

            Authlete Server has to pick up one JWK for signing from the JWK Set
            when it generates a JWT-based

            access token. Authlete Server searches the registered JWK Set for a
            JWK which satisfies conditions

            for access token signature. If the number of JWK candidates which
            satisfy the conditions is 1,

            there is no problem. On the other hand, if there exist multiple
            candidates, a Key ID is needed

            to be specified so that Authlete Server can pick up one JWK from
            among the JWK candidates.
        refreshTokenDuration:
          type: integer
          format: int64
          description: The duration of refresh tokens in seconds. The related
            specifications have no requirements on refresh token duration, but
            Authlete sets expiration for refresh tokens.
        refreshTokenDurationKept:
          type: boolean
          description: >
            The flag to indicate whether the remaining duration of the used
            refresh token is taken over to

            the newly issued refresh token.
        refreshTokenDurationReset:
          type: boolean
          description: >
            The flag which indicates whether duration of refresh tokens are
            reset when they are used even

            if the `refreshTokenKept` property of this service set to is `true`
            (= even if "Refresh Token

            Continuous Use" is "Kept").


            This flag has no effect when the `refreshTokenKept` property is set
            to `false`. In other words,

            if this service issues a new refresh token on every refresh token
            request, the refresh token

            will have fresh duration (unless `refreshTokenDurationKept` is set
            to `true`) and this

            `refreshTokenDurationReset` property is not referenced.
        refreshTokenKept:
          type: boolean
          description: >
            The flag to indicate whether a refresh token remains unchanged or
            gets renewed after its use.


            If `true`, a refresh token used to get a new access token remains
            valid after its use. Otherwise, if `false`, a refresh token is
            invalidated after its use and a new refresh token is issued.


            See [RFC 6749 6. Refreshing an Access
            Token](https://tools.ietf.org/html/rfc6749#section-6), as to how to
            get a new access token using a refresh token.
        supportedScopes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedScopesItems"
          description: >
            Scopes supported by the service.


            Authlete strongly recommends that the service register at least the
            following scopes.


            | Name | Description |

            | --- | --- |

            | openid | A permission to get an ID token of an end-user. The
            `openid` scope appears in [OpenID Connect Core 1.0, 3.1.2.1.
            Authentication Request,
            scope](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
            Without this scope, Authlete does not allow `response_type` request
            parameter to have values other than code and token. |

            | profile | A permission to get information about `name`,
            `family_name`, `given_name`, `middle_name`, `nickname`,
            `preferred_username`, `profile`, `picture`, `website`, `gender`,
            `birthdate`, `zoneinfo`, `locale` and `updated_at` from the user
            info endpoint. See [OpenID Connect Core 1.0, 5.4. Requesting Claims
            using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | email | A permission to get information about `email` and
            `email_verified` from the user info endpoint. See [OpenID Connect
            Core 1.0, 5.4. Requesting Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | address | A permission to get information about address from the
            user info endpoint. See [OpenID Connect Core 1.0, 5.4. Requesting
            Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            and [5.1.1. Address
            Claim](https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim)
            for details. |

            | phone | A permission to get information about `phone_number` and
            `phone_number_verified` from the user info endpoint. See [OpenID
            Connect Core 1.0, 5.4. Requesting Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | offline_access | A permission to get information from the user
            info endpoint even when the end-user is not present. See [OpenID
            Connect Core 1.0, 11. Offline
            Access](https://openid.net/specs/openid-connect-core-1_0.html#OfflineAccess)
            for details. |


            The value of this property is used as `scopes_supported` property in
            the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        scopeRequired:
          type: boolean
          description: >
            The flag to indicate whether requests that request no scope are
            rejected or not.


            When a request has no explicit `scope` parameter and the service's
            pre-defined default scope set is empty,

            the authorization server regards the request requests no scope. When
            this flag is set to `true`,

            requests that request no scope are rejected.


            The requirement below excerpted from [RFC 6749 Section
            3.3](https://tools.ietf.org/html/rfc6749#section-3.3)

            does not explicitly mention the case where the default scope set is
            empty.


            > If the client omits the scope parameter when requesting
            authorization, the authorization server

            MUST either process the request using a pre-defined default value or
            fail the request indicating an invalid scope.


            However, if you interpret *"the default scope set exists but is
            empty"* as *"the default scope set does not exist"*

            and want to strictly conform to the requirement above, this flag has
            to be `true`.
        idTokenDuration:
          type: integer
          format: int64
          description: >
            'The duration of [ID
            token](https://openid.net/specs/openid-connect-core-1_0.html#IDToken)s

            in seconds. This value is used to calculate the value of `exp` claim
            in an ID token.'
        allowableClockSkew:
          type: integer
          format: int32
          description: >
            The allowable clock skew between the server and clients in seconds.


            The clock skew is taken into consideration when time-related claims
            in a JWT (e.g. `exp`, `iat`, `nbf`) are verified.
        supportedClaimTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedClaimTypesItem\
              s"
          description: >
            Claim types supported by the service. Valid values are listed in
            Claim Type. Note that Authlete

            currently doesn't provide any API to help implementations for
            `AGGREGATED` and `DISTRIBUTED`.


            The value of this property is used as `claim_types_supported`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedClaimLocales:
          type: array
          items:
            type: string
          description: >
            Claim locales that the service supports. Each element is a language
            tag defined in [RFC 5646](https://tools.ietf.org/html/rfc5646).

            For example, `en-US` and `ja-JP`. See [OpenID Connect Core 1.0, 5.2.
            Languages and
            Scripts](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts)

            for details.


            The value of this property is used as `claims_locales_supported`
            property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedClaims:
          type: array
          items:
            type: string
          description: >
            Claim names that the service supports. The standard claim names
            listed in [OpenID Connect Core 1.0,

            5.1. Standard
            Claim](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims)
            should

            be supported. The following is the list of standard claims.


            - `sub`

            - `name`

            - `given_name`

            - `family_name`

            - `middle_name`

            - `nickname`

            - `preferred_username`

            - `profile`

            - `picture`

            - `website`

            - `email`

            - `email_verified`

            - `gender`

            - `birthdate`

            - `zoneinfo`

            - `locale`

            - `phone_number`

            - `phone_number_verified`

            - `address`

            - `updated_at`


            The value of this property is used as `claims_supported` property in
            the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).


            The service may support its original claim names. See [OpenID
            Connect Core 1.0, 5.1.2. Additional

            Claims](https://openid.net/specs/openid-connect-core-1_0.html#AdditionalClaims).
        claimShortcutRestrictive:
          type: boolean
          description: >
            The flag indicating whether claims specified by shortcut scopes
            (e.g. `profile`) are included

            in the issued ID token only when no access token is issued.


            To strictly conform to the description below excerpted from [OpenID
            Connect Core 1.0 Section

            5.4](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims),
            this flag has to be `true`.


            > The Claims requested by the profile, email, address, and phone
            scope values are returned from

            the UserInfo Endpoint, as described in Section 5.3.2, when a
            response_type value is used that

            results in an Access Token being issued. However, when no Access
            Token is issued (which is the

            case for the response_type value id_token), the resulting Claims are
            returned in the ID Token.
        jwksUri:
          type: string
          format: uri
          description: >
            The URL of the service's [JSON Web Key
            Set](https://tools.ietf.org/html/rfc7517) document. For

            example, `http://example.com/auth/jwks`.


            Client applications accesses this URL (1) to get the public key of
            the service to validate the

            signature of an ID token issued by the service and (2) to get the
            public key of the service to

            encrypt an request object of the client application. See [OpenID
            Connect Core 1.0, 10. Signatures

            and
            Encryption](https://openid.net/specs/openid-connect-core-1_0.html#SigEnc)
            for details.


            The value of this property is used as `jwks_uri` property in the
            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directJwksEndpointEnabled:
          type: boolean
          description: >
            'The flag to indicate whether the direct jwks endpoint is enabled or
            not. The path of the endpoint

            is `/api/service/jwks/get/direct/service-api-key`. '
        jwks:
          type: string
          description: >
            The content of the service's [JSON Web Key
            Set](https://tools.ietf.org/html/rfc7517) document.


            If this property is not `null` in a `/service/create` request or a
            `/service/update` request,

            Authlete hosts the content in the database. This property must not
            be `null` and must contain

            pairs of public/private keys if the service wants to support
            asymmetric signatures for ID tokens

            and asymmetric encryption for request objects. See [OpenID Connect
            Core 1.0, 10. Signatures and

            Encryption](https://openid.net/specs/openid-connect-core-1_0.html#SigEnc)
            for details.
        idTokenSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for ID token signature using an
            asymmetric key.


            A JWK Set can be registered as a property of a Service. A JWK Set
            can contain 0 or more JWKs

            (See [RFC 7517](https://tools.ietf.org/html/rfc7517) for details
            about JWK). Authlete Server has

            to pick up one JWK for signature from the JWK Set when it generates
            an ID token and signature

            using an asymmetric key is required. Authlete Server searches the
            registered JWK Set for a JWK

            which satisfies conditions for ID token signature. If the number of
            JWK candidates which satisfy

            the conditions is 1, there is no problem. On the other hand, if
            there exist multiple candidates,

            a [Key ID](https://tools.ietf.org/html/rfc7517#section-4.5) is
            needed to be specified so that

            Authlete Server can pick up one JWK from among the JWK candidates.


            This `idTokenSignatureKeyId` property exists for the purpose
            described above. For key rotation

            (OpenID Connect Core 1.0, [10.1.1. Rotation of Asymmetric Signing
            Keys](http://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys)),

            this mechanism is needed.
        userInfoSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for user info signature using an
            asymmetric key.


            A JWK Set can be registered as a property of a Service. A JWK Set
            can contain 0 or more JWKs

            (See [RFC 7517](https://tools.ietf.org/html/rfc7517) for details
            about JWK). Authlete Server has

            to pick up one JWK for signature from the JWK Set when it is
            required to sign user info (which

            is returned from [userinfo
            endpoint](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo))

            using an asymmetric key. Authlete Server searches the registered JWK
            Set for a JWK which satisfies

            conditions for user info signature. If the number of JWK candidates
            which satisfy the conditions

            is 1, there is no problem. On the other hand, if there exist
            multiple candidates, a [Key
            ID](https://tools.ietf.org/html/rfc7517#section-4.5)

            is needed to be specified so that Authlete Server can pick up one
            JWK from among the JWK candidates.


            This `userInfoSignatureKeyId` property exists for the purpose
            described above. For key rotation

            (OpenID Connect Core 1.0, [10.1.1. Rotation of Asymmetric Signing
            Keys](http://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys)),

            this mechanism is needed.
        authorizationSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for signing authorization
            responses using an asymmetric key.


            [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            defines new values for the `response_mode` request parameter. They
            are `query.jwt`, `fragment.jwt`,

            `form_post.jwt` and `jwt`. If one of them is specified as the
            response mode, response parameters

            from the authorization endpoint will be packed into a JWT. This
            property is used to compute the

            value of the `exp` claim of the JWT.


            Authlete Server searches the JWK Set for a JWK which satisfies
            conditions for authorization response

            signature. If the number of JWK candidates which satisfy the
            conditions is 1, there is no problem.

            On the other hand, if there exist multiple candidates, a Key ID is
            needed to be specified so that

            Authlete Server can pick up one JWK from among the JWK candidates.
            This property exists to specify

            the key ID.
        userInfoEndpoint:
          type: string
          description: >
            The [user info
            endpoint](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo)
            of the

            service. A URL that starts with `https://`. For example,
            `https://example.com/auth/userinfo`.


            The value of this property is used as `userinfo_endpoint` property
            in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        directUserInfoEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct userinfo endpoint is enabled
            or not. The path

            of the endpoint is `/api/auth/userinfo/direct/service-api-key`.
        dynamicRegistrationSupported:
          type: boolean
          description: >
            The boolean flag which indicates whether the [OAuth 2.0 Dynamic
            Client Registration Protocol](https://tools.ietf.org/html/rfc7591)

            is supported.
        registrationEndpoint:
          type: string
          description: >
            The [registration
            endpoint](http://openid.net/specs/openid-connect-registration-1_0.html#ClientRegistration)

            of the service. A URL that starts with `https://`. For example,
            `https://example.com/auth/registration`.


            The value of this property is used as `registration_endpoint`
            property in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        registrationManagementEndpoint:
          type: string
          description: >
            The URI of the registration management endpoint. If dynamic client
            registration is supported,

            and this is set, this URI will be used as the basis of the client's
            management endpoint by appending

            `/clientid}/` to it as a path element. If this is unset, the value
            of `registrationEndpoint` will

            be used as the URI base instead.
          format: uri
        policyUri:
          type: string
          description: >
            The URL of the "Policy" of the service.


            The value of this property is used as `op_policy_uri` property in
            the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        tosUri:
          type: string
          description: >
            The URL of the "Terms Of Service" of the service.


            The value of this property is used as `op_tos_uri` property in the
            [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        serviceDocumentation:
          type: string
          description: >
            The URL of a page where documents for developers can be found.


            The value of this property is used as `service_documentation`
            property in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        backchannelAuthenticationEndpoint:
          type: string
          description: >
            The URI of backchannel authentication endpoint, which is defined in
            the specification of [CIBA

            (Client Initiated Backchannel
            Authentication)](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html).
          format: uri
        supportedBackchannelTokenDeliveryModes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedBackchannelTok\
              enDeliveryModesItems"
          description: >
            The supported backchannel token delivery modes. This property
            corresponds to the `backchannel_token_delivery_modes_supported`

            metadata.


            Backchannel token delivery modes are defined in the specification of
            [CIBA (Client Initiated

            Backchannel
            Authentication)](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html).
        backchannelAuthReqIdDuration:
          type: integer
          format: int32
          description: >
            The duration of backchannel authentication request IDs issued from
            the backchannel authentication

            endpoint in seconds. This is used as the value of the `expires_in`
            property in responses from

            the backchannel authentication endpoint.
        backchannelPollingInterval:
          type: integer
          format: int32
          description: >
            The minimum interval between polling requests to the token endpoint
            from client applications in

            seconds. This is used as the value of the `interval` property in
            responses from the backchannel

            authentication endpoint.
        backchannelUserCodeParameterSupported:
          type: boolean
          description: >
            The boolean flag which indicates whether the `user_code` request
            parameter is supported at the

            backchannel authentication endpoint. This property corresponds to
            the `backchannel_user_code_parameter_supported`

            metadata.
        backchannelBindingMessageRequiredInFapi:
          type: boolean
          description: >
            The flag to indicate whether the `binding_message` request parameter
            is always required whenever

            a backchannel authentication request is judged as a request for
            Financial-grade API.


            The FAPI-CIBA profile requires that the authorization server _"shall
            ensure unique authorization

            context exists in the authorization request or require a
            `binding_message` in the authorization

            request"_ (FAPI-CIBA, 5.2.2, 2). The simplest way to fulfill this
            requirement is to set this property

            to `true`.


            If this property is set to `false`, the `binding_message` request
            parameter remains optional

            even in FAPI context, but in exchange, your authorization server
            must implement a custom mechanism

            that ensures each backchannel authentication request has unique
            context.
        deviceAuthorizationEndpoint:
          type: string
          format: uri
          description: >
            The URI of the device authorization endpoint.


            Device authorization endpoint is defined in the specification of
            OAuth 2.0 Device Authorization Grant.
        deviceVerificationUri:
          type: string
          format: uri
          description: >
            The verification URI for the device flow. This URI is used as the
            value of the `verification_uri`

            parameter in responses from the device authorization endpoint.
        deviceVerificationUriComplete:
          type: string
          format: uri
          description: >
            The verification URI for the device flow with a placeholder for a
            user code. This URI is used

            to build the value of the `verification_uri_complete` parameter in
            responses from the device

            authorization endpoint.


            It is expected that the URI contains a fixed string `USER_CODE`
            somewhere as a placeholder for

            a user code. For example, like the following.


            `https://example.com/device?user\_code=USER\_CODE`


            The fixed string is replaced with an actual user code when Authlete
            builds a verification URI

            with a user code for the `verification_uri_complete` parameter.


            If this URI is not set, the `verification_uri_complete` parameter
            won't appear in device authorization

            responses.
        deviceFlowCodeDuration:
          type: integer
          format: int32
          description: >
            The duration of device verification codes and end-user verification
            codes issued from the device

            authorization endpoint in seconds. This is used as the value of the
            `expires_in` property in responses

            from the device authorization endpoint.
        deviceFlowPollingInterval:
          type: integer
          format: int32
          description: >
            The minimum interval between polling requests to the token endpoint
            from client applications in

            seconds in device flow. This is used as the value of the `interval`
            property in responses from

            the device authorization endpoint.
        userCodeCharset:
          $ref: "#/components/schemas/ServiceCreateApiRequestBody1UserCodeCharset"
        userCodeLength:
          type: integer
          format: int32
          description: >
            The length of end-user verification codes (`user_code`) for Device
            Flow.
        supportedTrustFrameworks:
          type: array
          items:
            type: string
          description: >
            Trust frameworks supported by this service. This corresponds to the
            `trust_frameworks_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedEvidence:
          type: array
          items:
            type: string
          description: >
            Evidence supported by this service. This corresponds to the
            `evidence_supported`
            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedIdentityDocuments:
          type: array
          items:
            type: string
          description: >
            Identity documents supported by this service. This corresponds to
            the `id_documents_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedVerificationMethods:
          type: array
          items:
            type: string
          description: >
            Verification methods supported by this service. This corresponds to
            the `id_documents_verification_methods_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedVerifiedClaims:
          type: array
          items:
            type: string
          description: >
            Verified claims supported by this service. This corresponds to the
            `claims_in_verified_claims_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        verifiedClaimsValidationSchemaSet:
          $ref: "#/components/schemas/ServiceCreateApiRequestBody1VerifiedClaimsValidatio\
            nSchemaSet"
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1AttributesItems"
          description: |
            The attributes of this service.
        nbfOptional:
          type: boolean
          description: >
            The flag indicating whether the nbf claim in the request object is
            optional even when the authorization

            request is regarded as a FAPI-Part2 request.


            The final version of Financial-grade API was approved in January,
            2021. The Part 2 of the final

            version has new requirements on lifetime of request objects. They
            require that request objects

            contain an `nbf` claim and the lifetime computed by `exp` - `nbf` be
            no longer than 60 minutes.


            Therefore, when an authorization request is regarded as a FAPI-Part2
            request, the request object

            used in the authorization request must contain an nbf claim.
            Otherwise, the authorization server

            rejects the authorization request.


            When this flag is `true`, the `nbf` claim is treated as an optional
            claim even when the authorization

            request is regarded as a FAPI-Part2 request. That is, the
            authorization server does not perform

            the validation on lifetime of the request object.


            Skipping the validation is a violation of the FAPI specification.
            The reason why this flag has

            been prepared nevertheless is that the new requirements (which do
            not exist in the Implementer's

            Draft 2 released in October, 2018) have big impacts on deployed
            implementations of client

            applications and Authlete thinks there should be a mechanism whereby
            to make the migration

            from ID2 to Final smooth without breaking live systems.
        issSuppressed:
          type: boolean
          description: >
            The flag indicating whether generation of the iss response parameter
            is suppressed.


            "OAuth 2.0 Authorization Server Issuer Identifier in Authorization
            Response" has defined a new

            authorization response parameter, `iss`, as a countermeasure for a
            certain type of mix-up attacks.


            The specification requires that the `iss` response parameter always
            be included in authorization

            responses unless JARM (JWT Secured Authorization Response Mode) is
            used.


            When this flag is `true`, the authorization server does not include
            the `iss` response parameter

            in authorization responses. By turning this flag on and off,
            developers of client applications

            can experiment the mix-up attack and the effect of the `iss`
            response parameter.


            Note that this flag should not be `true` in production environment
            unless there are special

            reasons for it.
        supportedCustomClientMetadata:
          type: array
          items:
            type: string
          description: >
            custom client metadata supported by this service.


            Standard specifications define client metadata as necessary. The
            following are such examples.


            * [OpenID Connect Dynamic Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)

            * [RFC 7591 OAuth 2.0 Dynamic Client Registration
            Protocol](https://www.rfc-editor.org/rfc/rfc7591.html)

            * [RFC 8705 OAuth 2.0 Mutual-TLS Client Authentication and
            Certificate-Bound Access
            Tokens](https://www.rfc-editor.org/rfc/rfc8705.html)

            * [OpenID Connect Client-Initiated Backchannel Authentication Flow -
            Core
            1.0](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html)

            * [The OAuth 2.0 Authorization Framework: JWT Secured Authorization
            Request
            (JAR)](https://datatracker.ietf.org/doc/draft-ietf-oauth-jwsreq/)

            * [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            * [OAuth 2.0 Pushed Authorization Requests
            (PAR)](https://datatracker.ietf.org/doc/rfc9126/)

            * [OAuth 2.0 Rich Authorization Requests
            (RAR)](https://datatracker.ietf.org/doc/draft-ietf-oauth-rar/)


            Standard client metadata included in Client Registration Request and
            Client Update Request (cf.

            [OIDC
            DynReg](https://openid.net/specs/openid-connect-registration-1_0.html),
            [RFC 7591](https://www.rfc-editor.org/rfc/rfc7591.html)

            and [RFC 7592](https://www.rfc-editor.org/rfc/rfc7592.html)) are, if
            supported by Authlete, stored

            into Authlete database. On the other hand, unrecognized client
            metadata are discarded.


            By listing up custom client metadata in advance by using this
            property (`supportedCustomClientMetadata`),

            Authlete can recognize them and stores their values into the
            database. The stored custom client

            metadata values can be referenced by `customMetadata`.
        tokenExpirationLinked:
          type: boolean
          description: >
            The flag indicating whether the expiration date of an access token
            never exceeds that of the

            corresponding refresh token.


            When a new access token is issued by a refresh token request (= a
            token request with `grant_type=refresh_token`),

            the expiration date of the access token may exceed the expiration
            date of the corresponding

            refresh token. This behavior itself is not wrong and may happen when
            `refreshTokenKept` is

            `true` and/or when `refreshTokenDurationKept` is `true`.


            When this flag is `true`, the expiration date of an access token
            never exceeds that of the corresponding

            refresh token regardless of the calculated duration based on other
            settings such as `accessTokenDuration`,

            `accessTokenDuration` in `extension` and `access_token.duration`
            scope attribute.


            It is technically possible to set a value which is bigger than the
            duration of refresh tokens

            as the duration of access tokens although it is strange. In the
            case, the duration of an access

            token becomes longer than the duration of the refresh token which is
            issued together with the

            access token. Even if the duration values are configured so, if this
            flag is `true`, the expiration

            date of the access token does not exceed that of the refresh token.
            That is, the duration of

            the access token will be shortened, and as a result, the access
            token and the refresh token

            will have the same expiration date.
        frontChannelRequestObjectEncryptionRequired:
          type: boolean
          description: >
            The flag indicating whether encryption of request object is required
            when the request object

            is passed through the front channel.


            This flag does not affect the processing of request objects at the
            Pushed Authorization Request

            Endpoint, which is defined in [OAuth 2.0 Pushed Authorization
            Requests](https://datatracker.ietf.org/doc/rfc9126/).

            Unecrypted request objects are accepted at the endpoint even if this
            flag is `true`.


            This flag does not indicate whether a request object is always
            required. There is a different

            flag, `requestObjectRequired`, for the purpose. See the description
            of `requestObjectRequired`

            for details.


            Even if this flag is `false`, encryption of request object is
            required if the `frontChannelRequestObjectEncryptionRequired`

            flag of the client is `true`.
        requestObjectEncryptionAlgMatchRequired:
          type: boolean
          description: >
            The flag indicating whether the JWE alg of encrypted request object
            must match the `request_object_encryption_alg`

            client metadata of the client that has sent the request object.


            The request_object_encryption_alg client metadata itself is defined
            in [OpenID Connect Dynamic

            Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)
            as follows.


            > request_object_encryption_alg

            >

            > OPTIONAL. JWE [JWE] alg algorithm [JWA] the RP is declaring that
            it may use for encrypting

            Request Objects sent to the OP. This parameter SHOULD be included
            when symmetric encryption

            will be used, since this signals to the OP that a client_secret
            value needs to be returned

            from which the symmetric key will be derived, that might not
            otherwise be returned. The RP

            MAY still use other supported encryption algorithms or send
            unencrypted Request Objects, even

            when this parameter is present. If both signing and encryption are
            requested, the Request Object

            will be signed then encrypted, with the result being a Nested JWT,
            as defined in [JWT]. The

            default, if omitted, is that the RP is not declaring whether it
            might encrypt any Request Objects.


            The point here is "The RP MAY still use other supported encryption
            algorithms or send unencrypted

            Request Objects, even when this parameter is present."


            The Client's property that represents the client metadata is
            `requestEncryptionAlg`. See the

            description of `requestEncryptionAlg` for details.


            Even if this flag is `false`, the match is required if the
            `requestObjectEncryptionAlgMatchRequired`

            flag of the client is `true`.
        requestObjectEncryptionEncMatchRequired:
          type: boolean
          description: >
            The flag indicating whether the JWE `enc` of encrypted request
            object must match the `request_object_encryption_enc`

            client metadata of the client that has sent the request object.


            The `request_object_encryption_enc` client metadata itself is
            defined in [OpenID Connect Dynamic

            Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)
            as follows.


            > request_object_encryption_enc

            >

            > OPTIONAL. JWE enc algorithm [JWA] the RP is declaring that it may
            use for encrypting Request

            Objects sent to the OP. If request_object_encryption_alg is
            specified, the default for this

            value is A128CBC-HS256. When request_object_encryption_enc is
            included, request_object_encryption_alg

            MUST also be provided.


            The Client's property that represents the client metadata is
            `requestEncryptionEnc`. See the

            description of `requestEncryptionEnc` for details.


            Even if this flag is false, the match is required if the
            `requestObjectEncryptionEncMatchRequired`

            flag is `true`.
        hsmEnabled:
          type: boolean
          description: >
            The flag indicating whether HSM (Hardware Security Module) support
            is enabled for this service.


            When this flag is `false`, keys managed in HSMs are not used even if
            they exist. In addition,

            `/api/hsk/*` APIs reject all requests.


            Even if this flag is `true`, HSM-related features do not work if the
            configuration of the Authlete

            server you are using does not support HSM.
        hsks:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1HsksItems"
          description: >
            The information about keys managed on HSMs (Hardware Security
            Modules).


            This `hsks` property is output only, meaning that `hsks` in requests
            to `/api/service/create`

            API and `/api/service/update` API do not have any effect. The
            contents of this property is controlled

            only by `/api/hsk/*` APIs.
        grantManagementEndpoint:
          type: string
          description: |
            The URL of the grant management endpoint.
        grantManagementActionRequired:
          type: boolean
          description: >
            The flag indicating whether every authorization request (and any
            request serving as an authorization

            request such as CIBA backchannel authentication request and device
            authorization request) must

            include the `grant_management_action` request parameter.


            This property corresponds to the `grant_management_action_required`
            server metadata defined

            in [Grant Management for OAuth
            2.0](https://openid.net/specs/fapi-grant-management.html).


            Note that setting true to this property will result in blocking all
            public clients because

            the specification requires that grant management be usable only by
            confidential clients for

            security reasons.
        unauthorizedOnClientConfigSupported:
          type: boolean
          description: >
            The flag indicating whether Authlete's `/api/client/registration`
            API uses `UNAUTHORIZED` as

            a value of the `action` response parameter when appropriate.


            The `UNAUTHORIZED` enum value was initially not defined as a
            possible value of the `action`

            parameter in an `/api/client/registration` API response. This means
            that implementations of

            client `configuration` endpoint were not able to conform to [RFC
            7592](https://www.rfc-editor.org/rfc/rfc7592.html)

            strictly.


            For backward compatibility (to avoid breaking running systems),
            Authlete's `/api/client/registration`

            API does not return the `UNAUTHORIZED` enum value if this flag is
            not turned on.


            The steps an existing implementation of client configuration
            endpoint has to do in order to

            conform to the requirement related to "401 Unauthorized" are as
            follows.


            1. Update the Authlete library (e.g. authlete-java-common) your
            system is using.

            2. Update your implementation of client configuration endpoint so
            that it can handle the

            `UNAUTHORIZED` action.

            3. Turn on this `unauthorizedOnClientConfigSupported` flag.
        dcrScopeUsedAsRequestable:
          type: boolean
          description: >
            The flag indicating whether the `scope` request parameter in dynamic
            client registration and

            update requests (RFC 7591 and RFC 7592) is used as scopes that the
            client can request.


            Limiting the range of scopes that a client can request is achieved
            by listing scopes in the

            `client.extension.requestableScopes` property and setting the
            `client.extension.requestableScopesEnabled`

            property to `true`. This feature is called "requestable scopes".


            This property affects behaviors of `/api/client/registration` and
            other family APIs.
        endSessionEndpoint:
          type: string
          format: uri
          description: >
            The endpoint for clients ending the sessions.


            A URL that starts with `https://` and has no fragment component. For
            example, `https://example.com/auth/endSession`.


            The value of this property is used as `end_session_endpoint`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        loopbackRedirectionUriVariable:
          type: boolean
          description: >
            The flag indicating whether the port number component of redirection
            URIs can be variable when

            the host component indicates loopback.


            When this flag is `true`, if the host component of a redirection URI
            specified in an authorization

            request indicates loopback (to be precise, when the host component
            is localhost, `127.0.0.1`

            or `::1`), the port number component is ignored when the specified
            redirection URI is compared

            to pre-registered ones. This behavior is described in [7.3. Loopback
            Interface Redirection](

            https://www.rfc-editor.org/rfc/rfc8252.html#section-7.3) of [RFC
            8252 OAuth 2.0](https://www.rfc-editor.org/rfc/rfc8252.html)

            for Native Apps.


            [3.1.2.3. Dynamic
            Configuration](https://www.rfc-editor.org/rfc/rfc6749.html#section-3.1.2.3)

            of [RFC 6749](https://www.rfc-editor.org/rfc/rfc6749.html) states
            _"If the client registration

            included the full redirection URI, the authorization server MUST
            compare the two URIs using

            simple string comparison as defined in [RFC3986] Section 6.2.1."_
            Also, the description of

            `redirect_uri` in [3.1.2.1. Authentication
            Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest)

            of [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) states

            _"This URI MUST exactly match one of the Redirection URI values for
            the Client pre-registered

            at the OpenID Provider, with the matching performed as described in
            Section 6.2.1 of [RFC3986]

            (**Simple String Comparison**)."_ These "Simple String Comparison"
            requirements are preceded

            by this flag. That is, even when the conditions described in RFC
            6749 and OpenID Connect Core 1.0

            are satisfied, the port number component of loopback redirection
            URIs can be variable when this

            flag is `true`.


            [8.3. Loopback Redirect
            Considerations](https://www.rfc-editor.org/rfc/rfc8252.html#section-8.3)

            of [RFC 8252](https://www.rfc-editor.org/rfc/rfc8252.html) states as
            follows.


            > While redirect URIs using localhost (i.e.,
            `"http://localhost:{port}/{path}"`) function

            similarly to loopback IP redirects described in Section 7.3, the use
            of localhost is NOT RECOMMENDED.

            Specifying a redirect URI with the loopback IP literal rather than
            localhost avoids inadvertently

            listening on network interfaces other than the loopback interface.
            It is also less susceptible

            to client-side firewalls and misconfigured host name resolution on
            the user's device.


            However, Authlete allows the port number component to be variable in
            the case of `localhost`,

            too. It is left to client applications whether they use `localhost`
            or a literal loopback IP

            address (`127.0.0.1` for IPv4 or `::1` for IPv6).


            Section 7.3 and Section 8.3 of [RFC
            8252](https://www.rfc-editor.org/rfc/rfc8252.html) state

            that loopback redirection URIs use the `"http"` scheme, but Authlete
            allows the port number

            component to be variable in other cases (e.g. in the case of the
            `"https"` scheme), too.
        requestObjectAudienceChecked:
          type: boolean
          description: >
            The flag indicating whether Authlete checks whether the `aud` claim
            of request objects matches

            the issuer identifier of this service.


            [Section 6.1. Passing a Request Object by
            Value](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests)

            of [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) has the
            following

            statement.


            > The `aud` value SHOULD be or include the OP's Issuer Identifier
            URL.


            Likewise, [Section 4. Request
            Object](https://www.rfc-editor.org/rfc/rfc9101.html#section-4) of

            [RFC 9101](https://www.rfc-editor.org/rfc/rfc9101.html) (The OAuth
            2.0 Authorization Framework:

            JWT-Secured Authorization Request (JAR)) has the following
            statement.


            > The value of aud should be the value of the authorization server
            (AS) issuer, as defined in

            [RFC 8414](https://www.rfc-editor.org/rfc/rfc8414.html).


            As excerpted above, validation on the `aud` claim of request objects
            is optional. However, if

            this flag is turned on, Authlete checks whether the `aud` claim of
            request objects matches the issuer

            identifier of this service and raises an error if they are
            different.
        accessTokenForExternalAttachmentEmbedded:
          type: boolean
          description: |
            The flag indicating whether Authlete generates access tokens for
            external attachments and embeds them in ID tokens and userinfo
            responses.
        authorityHints:
          type: array
          items:
            type: string
          description: |
            Identifiers of entities that can issue entity statements for this
            service. This property corresponds to the `authority_hints`
            property that appears in a self-signed entity statement that is
            defined in OpenID Connect Federation 1.0.
        federationEnabled:
          type: boolean
          description: >
            flag indicating whether this service supports OpenID Connect
            Federation 1
        federationJwks:
          type: string
          description: >
            JWK Set document containing keys that are used to sign (1)
            self-signed

            entity statement of this service and (2) the response from

            `signed_jwks_uri`.
        federationSignatureKeyId:
          type: string
          description: |
            A key ID to identify a JWK used to sign the entity configuration and
            the signed JWK Set.
        federationConfigurationDuration:
          type: integer
          description: |
            The duration of the entity configuration in seconds.
        federationRegistrationEndpoint:
          type: string
          description: >
            The URI of the federation registration endpoint. This property
            corresponds

            to the `federation_registration_endpoint` server metadata that is

            defined in OpenID Connect Federation 1.0.
        organizationName:
          type: string
          description: |
            The human-readable name representing the organization that operates
            this service. This property corresponds to the `organization_name`
            server metadata that is defined in OpenID Connect Federation 1.0.
        predefinedTransformedClaims:
          type: string
          description: |
            The transformed claims predefined by this service in JSON format.
            This property corresponds to the `transformed_claims_predefined`
            server metadata.
        refreshTokenIdempotent:
          type: boolean
          description: |
            flag indicating whether refresh token requests with the same
            refresh token can be made multiple times in quick succession and
            they can obtain the same renewed refresh token within the short
            period.
        signedJwksUri:
          type: string
          description: >
            The URI of the endpoint that returns this service's JWK Set document
            in

            the JWT format. This property corresponds to the `signed_jwks_uri`

            server metadata defined in OpenID Connect Federation 1.0.
        supportedAttachments:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedAttachmentsIte\
              ms"
          description: |
            Supported attachment types. This property corresponds to the {@code
            attachments_supported} server metadata which was added by the third
            implementer's draft of OpenID Connect for Identity Assurance 1.0.
        supportedDigestAlgorithms:
          type: array
          items:
            type: string
          description: |
            Supported algorithms used to compute digest values of external
            attachments. This property corresponds to the
            `digest_algorithms_supported` server metadata which was added
            by the third implementer's draft of OpenID Connect for Identity
            Assurance 1.0.
        supportedDocuments:
          type: array
          items:
            type: string
          description: |
            Document types supported by this service. This property corresponds
            to the `documents_supported` server metadata.
        supportedDocumentsMethods:
          type: array
          items:
            type: string
          description: >
            validation and verification processes supported by this service.

            This property corresponds to the `documents_methods_supported`

            server metadata.


            The third implementer's draft of [OpenID Connect for Identity
            Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)

            renamed the

            `id_documents_verification_methods_supported` server metadata to

            `documents_methods_supported`.
        supportedDocumentsValidationMethods:
          type: array
          items:
            type: string
          description: >
            Document validation methods supported by this service. This property

            corresponds to the `documents_validation_methods_supported` server

            metadata which was added by the third implementer's draft of <a
            href=

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedDocumentsVerificationMethods:
          type: array
          items:
            type: string
          description: >
            Document verification methods supported by this service. This
            property

            corresponds to the `documents_verification_methods_supported` server

            metadata which was added by the third implementer's draft of

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedElectronicRecords:
          type: array
          items:
            type: string
          description: >
            Electronic record types supported by this service. This property

            corresponds to the `electronic_records_supported` server metadata

            which was added by the third implementer's draft of

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedClientRegistrationTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedClientRegistra\
              tionTypesItems"
        tokenExchangeByIdentifiableClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit unidentifiable clients from
            making token exchange requests.
        tokenExchangeByConfidentialClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit public clients from making
            token exchange requests.
        tokenExchangeByPermittedClientsOnly:
          type: boolean
          description: >
            The flag indicating whether to prohibit clients that have no
            explicit

            permission from making token exchange requests.
        tokenExchangeEncryptedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token exchange requests which
            use encrypted JWTs as input tokens.
        tokenExchangeUnsignedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token exchange requests which
            use unsigned JWTs as input tokens.
        jwtGrantByIdentifiableClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit unidentifiable clients from
            using the grant type "urn:ietf:params:oauth:grant-type:jwt-bearer".
        jwtGrantEncryptedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token requests that use an
            encrypted JWT as an authorization grant with the grant type
            "urn:ietf:params:oauth:grant-type:jwt-bearer".
        jwtGrantUnsignedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token requests that use an
            unsigned JWT as an authorization grant with the grant type
            "urn:ietf:params:oauth:grant-type:jwt-bearer".
        dcrDuplicateSoftwareIdBlocked:
          type: boolean
          description: >
            The flag indicating whether to block DCR (Dynamic Client
            Registration)

            requests whose "software_id" has already been used previously.
        trustAnchors:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1TrustAnchorsItems"
          description: |
            The trust anchors that are referenced when this service resolves
            trust chains of relying parties.

            If this property is empty, client registration fails regardless of
            whether its type is `automatic` or `explicit`. It means
            that OpenID Connect Federation 1.0 does not work.
        openidDroppedOnRefreshWithoutOfflineAccess:
          type: boolean
          description: >
            The flag indicating whether the openid scope should be dropped from

            scopes list assigned to access token issued when a refresh token
            grant

            is used.
        supportedDocumentsCheckMethods:
          type: array
          items:
            type: string
          description: >
            Supported document check methods. This property corresponds to the
            `documents_check_methods_supported`

            server metadata which was added by the fourth implementer's draft of
            OpenID Connect for Identity

            Assurance 1.0.
        rsResponseSigned:
          type: boolean
          description: >
            The flag indicating whether this service signs responses from the
            resource server.
        cnonceDuration:
          type: integer
          format: int64
          description: |
            The duration of `c_nonce`.
        dpopNonceRequired:
          type: boolean
          description: |
            Whether to require DPoP proof JWTs to include the `nonce` claim
            whenever they are presented.
        verifiableCredentialsEnabled:
          type: boolean
          description: >
            Get the flag indicating whether the feature of Verifiable
            Credentials

            for this service is enabled or not.
        credentialJwksUri:
          type: string
          description: |
            The URL at which the JWK Set document of the credential issuer is
            exposed.
        credentialOfferDuration:
          type: integer
          format: int64
          description: |
            The default duration of credential offers in seconds.
        dpopNonceDuration:
          type: integer
          format: int64
          description: |
            The duration of nonce values for DPoP proof JWTs in seconds.
        preAuthorizedGrantAnonymousAccessSupported:
          type: boolean
          description: |
            The flag indicating whether token requests using the pre-authorized
            code grant flow by unidentifiable clients are allowed.
        credentialTransactionDuration:
          type: integer
          format: int64
          description: |
            The duration of transaction ID in seconds that may be issued as a
            result of a credential request or a batch credential request.
        introspectionSignatureKeyId:
          type: string
          description: |
            The key ID of the key for signing introspection responses.
        resourceSignatureKeyId:
          type: string
          description: |
            The key ID of the key for signing introspection responses.
        userPinLength:
          type: integer
          format: int32
          description: |
            The default length of user PINs.
        supportedPromptValues:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedPromptValuesIt\
              ems"
          description: |
            The supported `prompt` values.
        idTokenReissuable:
          type: boolean
          description: |
            The flag indicating whether to enable the feature of ID token
            reissuance in the refresh token flow.
        credentialJwks:
          type: string
          description: |
            The JWK Set document containing private keys that are used to sign
            verifiable credentials.
        fapiModes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1FapiModesItems"
          description: >
            FAPI modes for this service.


            When the value of this property is not `null`, Authlete always
            processes requests to this service based

            on the specified FAPI modes if the FAPI feature is enabled in
            Authlete and the FAPI profile is supported

            by this service.


            For instance, when this property is set to an array containing
            `FAPI1_ADVANCED` only, Authlete always

            processes requests to this service based on "Financial-grade API
            Security Profile 1.0 - Part 2:

            Advanced" if the FAPI feature is enabled in Authlete and the FAPI
            profile is supported by this service.
        credentialDuration:
          type: integer
          format: int64
          description: |
            The default duration of verifiable credentials in seconds.
        credentialIssuerMetadata:
          $ref: "#/components/schemas/ServiceCreateApiRequestBody1CredentialIssuerMetadat\
            a"
        idTokenAudType:
          type: string
          description: |
            The type of the `aud` claim in ID tokens.
        nativeSsoSupported:
          type: boolean
          description: >
            The flag to determine to support the [OpenID Connect Native SSO for
            Mobile Apps
            1.0](https://openid.net/specs/openid-connect-native-sso-1_0.html)

            specification (a.k.a. "Native SSO").


            If this property is not set to `true`, Native SSO-specific

            parameters will be ignored or treated as errors. For example, the
            `device_sso scope` will have

            no special meaning (Authlete will not embed the sid claim in the ID
            token), and the `urn:openid:params:token-type:device-secret`

            token type will be treated as unknown, resulting in an error.


            This property corresponds to the `native_sso_supported` server
            metadata. If this property is set

            to `true`, `"native_sso_supported":true` will appear in the server
            metadata document (see [OpenID

            Connect Discovery 1.0, Section 3. OpenID Provider Metadata; RFC
            8414](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata):

            [OAuth 2.0 Authorization Server Metadata, Section 2. Authorization
            Server
            Metadata](https://www.rfc-editor.org/rfc/rfc8414.html#section-2)).
    ServiceCreateApiRequestBody1MetadataItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceCreateApiRequestBody1MtlsEndpointAliasesItems:
      type: object
      properties:
        name:
          type: string
        uri:
          type: string
          format: uri
    ServiceCreateApiRequestBody1SupportedScopesItems:
      type: object
      properties:
        name:
          type: string
          description: The name of the scope.
        defaultEntry:
          type: boolean
          description: "`true` to mark the scope as default. Scopes marked as default are
            regarded as requested when an authorization request from a client
            application does not contain scope request parameter. "
        description:
          type: string
          description: The description about the scope.
        descriptions:
          type: array
          description: The descriptions about this scope in multiple languages.
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedScopesItemsDes\
              criptionsItems"
        attributes:
          type: array
          description: The attributes of the scope.
          items:
            $ref: "#/components/schemas/ServiceCreateApiRequestBody1SupportedScopesItemsAtt\
              ributesItems"
    ServiceCreateApiRequestBody1SupportedScopesItemsDescriptionsItems:
      type: object
      properties:
        tag:
          type: string
          description: The language tag part.
        value:
          type: string
          description: The value part.
    ServiceCreateApiRequestBody1SupportedScopesItemsAttributesItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceCreateApiRequestBody1AttributesItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceCreateApiRequestBody1HsksItems:
      type: object
      description: >
        Holds information about a key managed in an HSM (Hardware Security
        Module)
      properties:
        kty:
          type: string
          description: |
            The key type (EC or RSA)
        use:
          type: string
          description: >
            Get the use of the key on the HSM.

            When the key use is "sig" (signature), the private key on the HSM is
            used to sign data and the corresponding public key is used to verify
            the signature.

            When the key use is "enc" (encryption), the private key on the HSM
            is used to decrypt encrypted data which have been encrypted with the
            corresponding public key
        kid:
          type: string
          description: |
            Key ID for the key on the HSM.
        hsmName:
          type: string
          description: >
            The name of the HSM.

            The identifier for the HSM that sits behind the Authlete server. For
            example, "google".
        handle:
          type: string
          description: >
            The handle for the key on the HSM.

            A handle is a base64url-encoded 256-bit random value (43 letters)
            which is assigned by Authlete on the call of the /api/hsk/create API
        publicKey:
          type: string
          description: |
            The public key that corresponds to the key on the HSM.
        alg:
          type: string
          description: >
            The algorithm of the key on the HSM. When the key use is `"sig"`,
            the algorithm represents a

            signing algorithm such as `"ES256"`. When the key use is `"enc"`,
            the algorithm represents an

            encryption algorithm such as `"RSA-OAEP-256"`.
    ServiceCreateApiRequestBody1TrustAnchorsItems:
      type: object
      properties:
        entityId:
          type: string
          description: |
            the entity ID of the trust anchor
        jwks:
          type: string
          description: |
            the JWK Set document containing public keys of the trust anchor
    ServiceCreateApiRequestBody1CredentialIssuerMetadata:
      type: object
      properties:
        authorizationServers:
          type: array
          items:
            type: string
          description: >
            The identifiers of the authorization servers that the credential
            issuer relies on for authorization.

            This property corresponds to the authorization_servers metadata.
            When the credential issuer works

            as an authorization server for itself, this property should be
            omitted.
        credentialIssuer:
          type: string
          description: The identifier of a credential request.
        credentialEndpoint:
          type: boolean
          description: The URL of the credential endpoint of the credential issuer.
        batchCredentialEndpoint:
          type: integer
          format: int64
          description: The URL of the batch credential endpoint of the credential issuer.
        deferredCredentialEndpoint:
          type: string
          description: The URL of the deferred credential endpoint of the credential issuer.
        credentialsSupported:
          type: boolean
          description: A JSON array describing supported credentials.
        credentialResponseEncryptionAlgValuesSupported:
          type: array
          items:
            type: string
          description: >
            The supported JWE `alg` algorithms for credential response
            encryption. This property corresponds

            to the `credential_response_encryption.alg_values_supported`
            metadata.
        credentialResponseEncryptionEncValuesSupported:
          type: array
          items:
            type: string
          description: >
            The supported JWE `enc` algorithms for credential response
            encryption. This property corresponds

            to the `credential_response_encryption.enc_values_supported`
            metadata.
        requireCredentialResponseEncryption:
          type: boolean
          description: >
            The boolean flag indicating whether credential response encryption
            is required. This property

            corresponds to the
            `credential_response_encryption.encryption_required metadata`. If
            this flag

            is `true`, every credential request to the credential issuer must
            include the `credential_response_encryption`

            property.
    ServiceCreateApiResponse200Json1:
      type: object
      properties:
        number:
          type: integer
          format: int32
          readOnly: true
          description: The sequential number of the service. The value of this property is
            assigned by Authlete.
        serviceName:
          type: string
          description: The name of this service.
        issuer:
          type: string
          description: >
            The issuer identifier of the service.


            A URL that starts with  https:// and has no query or fragment
            component.


            The value of this property is used as `iss` claim in an [ID
            token](https://openid.net/specs/openid-connect-core-1_0.html#IDToken)

            and `issuer` property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        description:
          type: string
          description: The description about the service.
        apiKey:
          type: integer
          format: int64
          readOnly: true
          description: The service ID used in Authlete API calls. The value of this
            property is assigned by Authlete.
        clientIdAliasEnabled:
          type: boolean
          description: Deprecated. Always `true`.
        metadata:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1MetadataItems"
          description: >
            The `metadata` of the service. The content of the returned array
            depends on contexts.

            The predefined service metadata is listed in the following table.

              | Key | Description |
              | --- | --- |
              | `clientCount` | The number of client applications which belong to this service.  |
        createdAt:
          type: integer
          format: int64
          readOnly: true
          description: >
            The time at which this service was created. The value is represented
            as milliseconds since the

            UNIX epoch (`1970-01-01`).
        modifiedAt:
          type: integer
          format: int64
          readOnly: true
          description: >
            The time at which this service was last modified. The value is
            represented as milliseconds since

            the UNIX epoch (1970-01-01).
        authenticationCallbackEndpoint:
          type: string
          format: uri
          description: >
            A Web API endpoint for user authentication which is to be prepared
            on the service side.


            The endpoint must be implemented if you do not implement the UI at
            the authorization endpoint

            but use the one provided by Authlete.


            The user authentication at the authorization endpoint provided by
            Authlete is performed by making

            a `POST` request to this endpoint.
        authenticationCallbackApiKey:
          type: string
          description: >
            API key for basic authentication at the authentication callback
            endpoint.


            If the value is not empty, Authlete generates Authorization header
            for Basic authentication when

            making a request to the authentication callback endpoint.
        authenticationCallbackApiSecret:
          type: string
          description: API secret for `basic` authentication at the authentication
            callback endpoint.
        supportedAcrs:
          readOnly: true
          type: array
          items:
            type: string
          description: >
            Values of acrs (authentication context class references) that the
            service supports.


            The value of this property is used as `acr_values_supported`

            property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedGrantTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedGrantTypes\
              Items"
          description: >
            Values of `grant_type` request parameter that the service supports.


            The value of this property is used as `grant_types_supported
            property` in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedResponseTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedResponseTy\
              pesItems"
          description: >
            Values of `response_type` request parameter that

            the service supports. Valid values are listed in Response Type.


            The value of this property is used as `response_types_supported`
            property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedAuthorizationDetailsTypes:
          type: array
          items:
            type: string
          description: >
            The supported data types that can be used as values of the type
            field in `authorization_details`.


            This property corresponds to the
            `authorization_details_types_supported` metadata. See "OAuth 2.0

            Rich Authorization Requests" (RAR) for details.
        supportedServiceProfiles:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedServicePro\
              filesItems"
          description: |
            The profiles that this service supports.
        errorDescriptionOmitted:
          type: boolean
          description: >
            The flag to indicate whether the `error_description` response
            parameter is omitted.


            According to [RFC 6749](https://tools.ietf.org/html/rfc6749), an
            authorization server may include

            the `error_description` response parameter in error responses.


            If `true`, Authlete does not embed the `error_description` response
            parameter in error responses.
        errorUriOmitted:
          type: boolean
          description: >
            The flag to indicate whether the `error_uri` response parameter is
            omitted.


            According to [RFC 6749](https://tools.ietf.org/html/rfc6749), an
            authorization server may include the `error_uri` response parameter
            in error responses.


            If `true`, Authlete does not embed the

            `error_uri` response parameter in error responses.
        authorizationEndpoint:
          type: string
          format: uri
          description: >
            The authorization endpoint of the service.


            A URL that starts with `https://` and has no fragment component. For
            example, `https://example.com/auth/authorization`.


            The value of this property is used as `authorization_endpoint`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directAuthorizationEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct authorization endpoint is
            enabled or not.


            The path of the endpoint is
            `/api/auth/authorization/direct/service-api-key`.
        supportedUiLocales:
          type: array
          items:
            type: string
          description: >
            UI locales that the service supports.


            Each element is a language tag defined in [RFC
            5646](https://tools.ietf.org/html/rfc5646). For example, `en-US` and
            `ja-JP`.


            The value of this property is used as `ui_locales_supported`
            property in the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedDisplays:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedDisplaysIt\
              ems"
          description: >
            Values of `display` request parameter that service supports.


            The value of this property is used as `display_values_supported`
            property in the Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        pkceRequired:
          type: boolean
          description: >
            The flag to indicate whether the use of Proof Key for Code Exchange
            (PKCE) is always required for authorization requests by
            Authorization Code Flow.


            If `true`, `code_challenge` request parameter is always required for
            authorization requests using Authorization Code Flow.


            See [RFC 7636](https://tools.ietf.org/html/rfc7636) (Proof Key for
            Code Exchange by OAuth Public Clients) for details about
            `code_challenge` request parameter.
        pkceS256Required:
          type: boolean
          description: >
            The flag to indicate whether `S256` is always required as the code
            challenge method whenever [PKCE (RFC
            7636)](https://tools.ietf.org/html/rfc7636) is used.


            If this flag is set to `true`, `code_challenge_method=S256` must be
            included in the authorization request

            whenever it includes the `code_challenge` request parameter.

            Neither omission of the `code_challenge_method` request parameter
            nor use of plain (`code_challenge_method=plain`) is allowed.
        authorizationResponseDuration:
          type: integer
          format: int64
          description: >
            The duration of authorization response JWTs in seconds.


            [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            defines new values for the `response_mode` request parameter. They
            are `query.jwt`, `fragment.jwt`,

            `form_post.jwt` and `jwt`. If one of them is specified as the
            response mode, response parameters

            from the authorization endpoint will be packed into a JWT. This
            property is used to compute the

            value of the `exp` claim of the JWT.
        tokenEndpoint:
          type: string
          format: uri
          description: >
            The [token
            endpoint](https://tools.ietf.org/html/rfc6749#section-3.2) of the
            service.


            A URL that starts with `https://` and has not fragment component.
            For example, `https://example.com/auth/token`.


            The value of this property is used as `token_endpoint` property in
            the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directTokenEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct token endpoint is enabled or
            not. The path of the endpoint

            is `/api/auth/token/direct/service-api-key`.
        supportedTokenAuthMethods:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedTokenAuthM\
              ethodsItems"
          description: >
            Client authentication methods supported by the token endpoint of the
            service.


            The value of this property is used as
            `token_endpoint_auth_methods_supports` property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        missingClientIdAllowed:
          type: boolean
          description: >
            The flag to indicate token requests from public clients without the
            `client_id` request parameter are allowed when the client can be
            guessed from `authorization_code` or `refresh_token`.


            This flag should not be set unless you have special reasons.
        revocationEndpoint:
          type: string
          format: uri
          description: >
            The [revocation endpoint](https://tools.ietf.org/html/rfc7009) of
            the service.


            A URL that starts with `https://`. For example,
            `https://example.com/auth/revocation`.
        directRevocationEndpointEnabled:
          type: boolean
          description: "The flag to indicate whether the direct revocation endpoint is
            enabled or not. The URL of the endpoint is
            `/api/auth/revocation/direct/service-api-key`. "
        supportedRevocationAuthMethods:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedRevocation\
              AuthMethodsItems"
          description: |
            Client authentication methods supported at the revocation endpoint.
        introspectionEndpoint:
          type: string
          description: The URI of the introspection endpoint.
          format: uri
        directIntrospectionEndpointEnabled:
          type: boolean
          description: "The flag to indicate whether the direct userinfo endpoint is
            enabled or not. The path of the endpoint is
            `/api/auth/userinfo/direct/{serviceApiKey}`. "
        supportedIntrospectionAuthMethods:
          type: array
          description: >
            Client authentication methods supported at the introspection
            endpoint.
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedIntrospect\
              ionAuthMethodsItems"
        pushedAuthReqEndpoint:
          type: string
          description: >
            The URI of the pushed authorization request endpoint.


            This property corresponds to the
            `pushed_authorization_request_endpoint` metadata defined in "[5.
            Authorization Server
            Metadata](https://tools.ietf.org/html/draft-lodderstedt-oauth-par#section-5)"
            of OAuth 2.0 Pushed Authorization Requests.
          format: uri
        pushedAuthReqDuration:
          type: integer
          format: int64
          description: >
            The duration of pushed authorization requests in seconds.


            [OAuth 2.0 Pushed Authorization
            Requests](https://tools.ietf.org/html/draft-lodderstedt-oauth-par)

            defines an endpoint (called "pushed authorization request endpoint")
            which client applications

            can register authorization requests into and get corresponding URIs
            (called "request URIs") from.

            The issued URIs represent the registered authorization requests. The
            client applications can use

            the URIs as the value of the `request_uri` request parameter in an
            authorization request.


            The property represents the duration of registered authorization
            requests and is used as the value

            of the `expires_in` parameter in responses from the pushed
            authorization request endpoint.
        parRequired:
          type: boolean
          description: >
            The flag to indicate whether this service requires that clients use
            the pushed authorization

            request endpoint.


            This property corresponds to the
            `require_pushed_authorization_requests` server metadata defined

            in [OAuth 2.0 Pushed Authorization
            Requests](https://tools.ietf.org/html/draft-lodderstedt-oauth-par).
        requestObjectRequired:
          type: boolean
          description: >
            The flag to indicate whether this service requires that
            authorization requests always utilize

            a request object by using either request or `request_uri` request
            parameter.


            If this flag is set to `true` and the value of
            `traditionalRequestObjectProcessingApplied` is

            `false`, the value of `require_signed_request_object` server
            metadata of this service is reported

            as `true` in the discovery document. The metadata is defined in JAR
            (JWT Secured Authorization Request).

            That `require_signed_request_object` is `true` means that
            authorization requests which don't

            conform to the JAR specification are rejected.
        traditionalRequestObjectProcessingApplied:
          type: boolean
          description: >
            The flag to indicate whether a request object is processed based on
            rules defined in

            [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) or JAR
            (JWT

            Secured Authorization Request).


            Differences between rules in OpenID Connect Core 1.0 and ones in JAR
            are as follows.
              - JAR requires that a request object be always -signed.
              - JAR does not allow request parameters outside a request object to be referred to.
              - OIDC Core 1.0 requires that response_type request parameter exist outside a request object even if the request object includes the request parameter.
              - OIDC Core 1.0 requires that scope request parameter exist outside a request object if the authorization request is an
              - OIDC request even if the request object includes the request parameter.

            If this flag is set to `false` and the value of
            `requestObjectRequired` is `true`, the value of

            `require_signed_request_object` server metadata of this service

            is reported as `true` in the discovery document. The metadata is
            defined in JAR (JWT Secured

            Authorization Request). That `require_signed_request_object` is
            `true` means that authorization

            requests which don't conform to the JAR specification are rejected.
        mutualTlsValidatePkiCertChain:
          type: boolean
          description: >
            The flag to indicate whether this service validates certificate
            chains during PKI-based client mutual TLS authentication.
        trustedRootCertificates:
          type: array
          items:
            type: string
          description: >
            The list of root certificates trusted by this service for PKI-based
            client mutual TLS authentication.
        mtlsEndpointAliases:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1MtlsEndpointAliases\
              Items"
          description: >
            The MTLS endpoint aliases.


            This property corresponds to the mtls_endpoint_aliases metadata
            defined in "5. Metadata for Mutual TLS Endpoint Aliases" of [OAuth
            2.0 Mutual TLS Client Authentication and Certificate-Bound Access
            Tokens](https://datatracker.ietf.org/doc/rfc8705/).


            The aliases will be embedded in the response from the discovery
            endpoint like the following.


            ```json

            {
              ......,
              "mtls_endpoint_aliases": {
                "token_endpoint":         "https://mtls.example.com/token",
                "revocation_endpoint":    "https://mtls.example.com/revo",
                "introspection_endpoint": "https://mtls.example.com/introspect"
              }
            }

            ```
        accessTokenType:
          type: string
          description: >
            The access token type.


            This value is used as the value of `token_type` property in access
            token responses. If this service

            complies with [RFC 6750](https://tools.ietf.org/html/rfc6750), the
            value of this property should

            be `Bearer`.


            See [RFC 6749 (OAuth 2.0), 7.1. Access Token
            Types](https://tools.ietf.org/html/rfc6749#section-7.1) for details.
        tlsClientCertificateBoundAccessTokens:
          type: boolean
          description: >
            The flag to indicate whether this service supports issuing TLS
            client certificate bound access tokens.
        accessTokenDuration:
          type: integer
          format: int64
          description: >
            The duration of access tokens in seconds. This value is used as the
            value of `expires_in` property

            in access token responses. `expires_in` is defined [RFC 6749, 5.1.
            Successful
            Response](https://tools.ietf.org/html/rfc6749#section-5.1).
        singleAccessTokenPerSubject:
          type: boolean
          description: >
            The flag to indicate whether the number of access tokens per subject
            (and per client) is at most one or can be more.


            If `true`, an attempt to issue a new access token invalidates
            existing access tokens that are associated with the same subject and
            the same client.


            Note that, however, attempts by [Client Credentials
            Flow](https://tools.ietf.org/html/rfc6749#section-4.4) do not
            invalidate existing access tokens because access tokens issued by
            Client Credentials Flow are not associated with any end-user's
            subject. Also note that an attempt by [Refresh Token
            Flow](https://tools.ietf.org/html/rfc6749#section-6) invalidates the
            coupled access token only and this invalidation is always performed
            regardless of whether the value of this setting item is `true` or
            `false`.
        accessTokenSignAlg:
          $ref: "#/components/schemas/ServiceCreateApiResponse200Json1AccessTokenSignAlg"
        accessTokenSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for signing access tokens.


            A JWK Set can be registered as a property of a service. A JWK Set
            can contain 0 or more JWKs.

            Authlete Server has to pick up one JWK for signing from the JWK Set
            when it generates a JWT-based

            access token. Authlete Server searches the registered JWK Set for a
            JWK which satisfies conditions

            for access token signature. If the number of JWK candidates which
            satisfy the conditions is 1,

            there is no problem. On the other hand, if there exist multiple
            candidates, a Key ID is needed

            to be specified so that Authlete Server can pick up one JWK from
            among the JWK candidates.
        refreshTokenDuration:
          type: integer
          format: int64
          description: The duration of refresh tokens in seconds. The related
            specifications have no requirements on refresh token duration, but
            Authlete sets expiration for refresh tokens.
        refreshTokenDurationKept:
          type: boolean
          description: >
            The flag to indicate whether the remaining duration of the used
            refresh token is taken over to

            the newly issued refresh token.
        refreshTokenDurationReset:
          type: boolean
          description: >
            The flag which indicates whether duration of refresh tokens are
            reset when they are used even

            if the `refreshTokenKept` property of this service set to is `true`
            (= even if "Refresh Token

            Continuous Use" is "Kept").


            This flag has no effect when the `refreshTokenKept` property is set
            to `false`. In other words,

            if this service issues a new refresh token on every refresh token
            request, the refresh token

            will have fresh duration (unless `refreshTokenDurationKept` is set
            to `true`) and this

            `refreshTokenDurationReset` property is not referenced.
        refreshTokenKept:
          type: boolean
          description: >
            The flag to indicate whether a refresh token remains unchanged or
            gets renewed after its use.


            If `true`, a refresh token used to get a new access token remains
            valid after its use. Otherwise, if `false`, a refresh token is
            invalidated after its use and a new refresh token is issued.


            See [RFC 6749 6. Refreshing an Access
            Token](https://tools.ietf.org/html/rfc6749#section-6), as to how to
            get a new access token using a refresh token.
        supportedScopes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedScopesItem\
              s"
          description: >
            Scopes supported by the service.


            Authlete strongly recommends that the service register at least the
            following scopes.


            | Name | Description |

            | --- | --- |

            | openid | A permission to get an ID token of an end-user. The
            `openid` scope appears in [OpenID Connect Core 1.0, 3.1.2.1.
            Authentication Request,
            scope](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest).
            Without this scope, Authlete does not allow `response_type` request
            parameter to have values other than code and token. |

            | profile | A permission to get information about `name`,
            `family_name`, `given_name`, `middle_name`, `nickname`,
            `preferred_username`, `profile`, `picture`, `website`, `gender`,
            `birthdate`, `zoneinfo`, `locale` and `updated_at` from the user
            info endpoint. See [OpenID Connect Core 1.0, 5.4. Requesting Claims
            using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | email | A permission to get information about `email` and
            `email_verified` from the user info endpoint. See [OpenID Connect
            Core 1.0, 5.4. Requesting Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | address | A permission to get information about address from the
            user info endpoint. See [OpenID Connect Core 1.0, 5.4. Requesting
            Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            and [5.1.1. Address
            Claim](https://openid.net/specs/openid-connect-core-1_0.html#AddressClaim)
            for details. |

            | phone | A permission to get information about `phone_number` and
            `phone_number_verified` from the user info endpoint. See [OpenID
            Connect Core 1.0, 5.4. Requesting Claims using Scope
            Values](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims)
            for details. |

            | offline_access | A permission to get information from the user
            info endpoint even when the end-user is not present. See [OpenID
            Connect Core 1.0, 11. Offline
            Access](https://openid.net/specs/openid-connect-core-1_0.html#OfflineAccess)
            for details. |


            The value of this property is used as `scopes_supported` property in
            the [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        scopeRequired:
          type: boolean
          description: >
            The flag to indicate whether requests that request no scope are
            rejected or not.


            When a request has no explicit `scope` parameter and the service's
            pre-defined default scope set is empty,

            the authorization server regards the request requests no scope. When
            this flag is set to `true`,

            requests that request no scope are rejected.


            The requirement below excerpted from [RFC 6749 Section
            3.3](https://tools.ietf.org/html/rfc6749#section-3.3)

            does not explicitly mention the case where the default scope set is
            empty.


            > If the client omits the scope parameter when requesting
            authorization, the authorization server

            MUST either process the request using a pre-defined default value or
            fail the request indicating an invalid scope.


            However, if you interpret *"the default scope set exists but is
            empty"* as *"the default scope set does not exist"*

            and want to strictly conform to the requirement above, this flag has
            to be `true`.
        idTokenDuration:
          type: integer
          format: int64
          description: >
            'The duration of [ID
            token](https://openid.net/specs/openid-connect-core-1_0.html#IDToken)s

            in seconds. This value is used to calculate the value of `exp` claim
            in an ID token.'
        allowableClockSkew:
          type: integer
          format: int32
          description: >
            The allowable clock skew between the server and clients in seconds.


            The clock skew is taken into consideration when time-related claims
            in a JWT (e.g. `exp`, `iat`, `nbf`) are verified.
        supportedClaimTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedClaimTypes\
              Items"
          description: >
            Claim types supported by the service. Valid values are listed in
            Claim Type. Note that Authlete

            currently doesn't provide any API to help implementations for
            `AGGREGATED` and `DISTRIBUTED`.


            The value of this property is used as `claim_types_supported`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedClaimLocales:
          type: array
          items:
            type: string
          description: >
            Claim locales that the service supports. Each element is a language
            tag defined in [RFC 5646](https://tools.ietf.org/html/rfc5646).

            For example, `en-US` and `ja-JP`. See [OpenID Connect Core 1.0, 5.2.
            Languages and
            Scripts](https://openid.net/specs/openid-connect-core-1_0.html#ClaimsLanguagesAndScripts)

            for details.


            The value of this property is used as `claims_locales_supported`
            property in the

            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        supportedClaims:
          type: array
          items:
            type: string
          description: >
            Claim names that the service supports. The standard claim names
            listed in [OpenID Connect Core 1.0,

            5.1. Standard
            Claim](https://openid.net/specs/openid-connect-core-1_0.html#StandardClaims)
            should

            be supported. The following is the list of standard claims.


            - `sub`

            - `name`

            - `given_name`

            - `family_name`

            - `middle_name`

            - `nickname`

            - `preferred_username`

            - `profile`

            - `picture`

            - `website`

            - `email`

            - `email_verified`

            - `gender`

            - `birthdate`

            - `zoneinfo`

            - `locale`

            - `phone_number`

            - `phone_number_verified`

            - `address`

            - `updated_at`


            The value of this property is used as `claims_supported` property in
            the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).


            The service may support its original claim names. See [OpenID
            Connect Core 1.0, 5.1.2. Additional

            Claims](https://openid.net/specs/openid-connect-core-1_0.html#AdditionalClaims).
        claimShortcutRestrictive:
          type: boolean
          description: >
            The flag indicating whether claims specified by shortcut scopes
            (e.g. `profile`) are included

            in the issued ID token only when no access token is issued.


            To strictly conform to the description below excerpted from [OpenID
            Connect Core 1.0 Section

            5.4](https://openid.net/specs/openid-connect-core-1_0.html#ScopeClaims),
            this flag has to be `true`.


            > The Claims requested by the profile, email, address, and phone
            scope values are returned from

            the UserInfo Endpoint, as described in Section 5.3.2, when a
            response_type value is used that

            results in an Access Token being issued. However, when no Access
            Token is issued (which is the

            case for the response_type value id_token), the resulting Claims are
            returned in the ID Token.
        jwksUri:
          type: string
          format: uri
          description: >
            The URL of the service's [JSON Web Key
            Set](https://tools.ietf.org/html/rfc7517) document. For

            example, `http://example.com/auth/jwks`.


            Client applications accesses this URL (1) to get the public key of
            the service to validate the

            signature of an ID token issued by the service and (2) to get the
            public key of the service to

            encrypt an request object of the client application. See [OpenID
            Connect Core 1.0, 10. Signatures

            and
            Encryption](https://openid.net/specs/openid-connect-core-1_0.html#SigEnc)
            for details.


            The value of this property is used as `jwks_uri` property in the
            [OpenID Provider
            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        directJwksEndpointEnabled:
          type: boolean
          description: >
            'The flag to indicate whether the direct jwks endpoint is enabled or
            not. The path of the endpoint

            is `/api/service/jwks/get/direct/service-api-key`. '
        jwks:
          type: string
          description: >
            The content of the service's [JSON Web Key
            Set](https://tools.ietf.org/html/rfc7517) document.


            If this property is not `null` in a `/service/create` request or a
            `/service/update` request,

            Authlete hosts the content in the database. This property must not
            be `null` and must contain

            pairs of public/private keys if the service wants to support
            asymmetric signatures for ID tokens

            and asymmetric encryption for request objects. See [OpenID Connect
            Core 1.0, 10. Signatures and

            Encryption](https://openid.net/specs/openid-connect-core-1_0.html#SigEnc)
            for details.
        idTokenSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for ID token signature using an
            asymmetric key.


            A JWK Set can be registered as a property of a Service. A JWK Set
            can contain 0 or more JWKs

            (See [RFC 7517](https://tools.ietf.org/html/rfc7517) for details
            about JWK). Authlete Server has

            to pick up one JWK for signature from the JWK Set when it generates
            an ID token and signature

            using an asymmetric key is required. Authlete Server searches the
            registered JWK Set for a JWK

            which satisfies conditions for ID token signature. If the number of
            JWK candidates which satisfy

            the conditions is 1, there is no problem. On the other hand, if
            there exist multiple candidates,

            a [Key ID](https://tools.ietf.org/html/rfc7517#section-4.5) is
            needed to be specified so that

            Authlete Server can pick up one JWK from among the JWK candidates.


            This `idTokenSignatureKeyId` property exists for the purpose
            described above. For key rotation

            (OpenID Connect Core 1.0, [10.1.1. Rotation of Asymmetric Signing
            Keys](http://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys)),

            this mechanism is needed.
        userInfoSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for user info signature using an
            asymmetric key.


            A JWK Set can be registered as a property of a Service. A JWK Set
            can contain 0 or more JWKs

            (See [RFC 7517](https://tools.ietf.org/html/rfc7517) for details
            about JWK). Authlete Server has

            to pick up one JWK for signature from the JWK Set when it is
            required to sign user info (which

            is returned from [userinfo
            endpoint](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo))

            using an asymmetric key. Authlete Server searches the registered JWK
            Set for a JWK which satisfies

            conditions for user info signature. If the number of JWK candidates
            which satisfy the conditions

            is 1, there is no problem. On the other hand, if there exist
            multiple candidates, a [Key
            ID](https://tools.ietf.org/html/rfc7517#section-4.5)

            is needed to be specified so that Authlete Server can pick up one
            JWK from among the JWK candidates.


            This `userInfoSignatureKeyId` property exists for the purpose
            described above. For key rotation

            (OpenID Connect Core 1.0, [10.1.1. Rotation of Asymmetric Signing
            Keys](http://openid.net/specs/openid-connect-core-1_0.html#RotateSigKeys)),

            this mechanism is needed.
        authorizationSignatureKeyId:
          type: string
          description: >
            The key ID to identify a JWK used for signing authorization
            responses using an asymmetric key.


            [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            defines new values for the `response_mode` request parameter. They
            are `query.jwt`, `fragment.jwt`,

            `form_post.jwt` and `jwt`. If one of them is specified as the
            response mode, response parameters

            from the authorization endpoint will be packed into a JWT. This
            property is used to compute the

            value of the `exp` claim of the JWT.


            Authlete Server searches the JWK Set for a JWK which satisfies
            conditions for authorization response

            signature. If the number of JWK candidates which satisfy the
            conditions is 1, there is no problem.

            On the other hand, if there exist multiple candidates, a Key ID is
            needed to be specified so that

            Authlete Server can pick up one JWK from among the JWK candidates.
            This property exists to specify

            the key ID.
        userInfoEndpoint:
          type: string
          description: >
            The [user info
            endpoint](http://openid.net/specs/openid-connect-core-1_0.html#UserInfo)
            of the

            service. A URL that starts with `https://`. For example,
            `https://example.com/auth/userinfo`.


            The value of this property is used as `userinfo_endpoint` property
            in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        directUserInfoEndpointEnabled:
          type: boolean
          description: >
            The flag to indicate whether the direct userinfo endpoint is enabled
            or not. The path

            of the endpoint is `/api/auth/userinfo/direct/service-api-key`.
        dynamicRegistrationSupported:
          type: boolean
          description: >
            The boolean flag which indicates whether the [OAuth 2.0 Dynamic
            Client Registration Protocol](https://tools.ietf.org/html/rfc7591)

            is supported.
        registrationEndpoint:
          type: string
          description: >
            The [registration
            endpoint](http://openid.net/specs/openid-connect-registration-1_0.html#ClientRegistration)

            of the service. A URL that starts with `https://`. For example,
            `https://example.com/auth/registration`.


            The value of this property is used as `registration_endpoint`
            property in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        registrationManagementEndpoint:
          type: string
          description: >
            The URI of the registration management endpoint. If dynamic client
            registration is supported,

            and this is set, this URI will be used as the basis of the client's
            management endpoint by appending

            `/clientid}/` to it as a path element. If this is unset, the value
            of `registrationEndpoint` will

            be used as the URI base instead.
          format: uri
        policyUri:
          type: string
          description: >
            The URL of the "Policy" of the service.


            The value of this property is used as `op_policy_uri` property in
            the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        tosUri:
          type: string
          description: >
            The URL of the "Terms Of Service" of the service.


            The value of this property is used as `op_tos_uri` property in the
            [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        serviceDocumentation:
          type: string
          description: >
            The URL of a page where documents for developers can be found.


            The value of this property is used as `service_documentation`
            property in the [OpenID Provider
            Metadata](http://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
          format: uri
        backchannelAuthenticationEndpoint:
          type: string
          description: >
            The URI of backchannel authentication endpoint, which is defined in
            the specification of [CIBA

            (Client Initiated Backchannel
            Authentication)](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html).
          format: uri
        supportedBackchannelTokenDeliveryModes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedBackchanne\
              lTokenDeliveryModesItems"
          description: >
            The supported backchannel token delivery modes. This property
            corresponds to the `backchannel_token_delivery_modes_supported`

            metadata.


            Backchannel token delivery modes are defined in the specification of
            [CIBA (Client Initiated

            Backchannel
            Authentication)](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html).
        backchannelAuthReqIdDuration:
          type: integer
          format: int32
          description: >
            The duration of backchannel authentication request IDs issued from
            the backchannel authentication

            endpoint in seconds. This is used as the value of the `expires_in`
            property in responses from

            the backchannel authentication endpoint.
        backchannelPollingInterval:
          type: integer
          format: int32
          description: >
            The minimum interval between polling requests to the token endpoint
            from client applications in

            seconds. This is used as the value of the `interval` property in
            responses from the backchannel

            authentication endpoint.
        backchannelUserCodeParameterSupported:
          type: boolean
          description: >
            The boolean flag which indicates whether the `user_code` request
            parameter is supported at the

            backchannel authentication endpoint. This property corresponds to
            the `backchannel_user_code_parameter_supported`

            metadata.
        backchannelBindingMessageRequiredInFapi:
          type: boolean
          description: >
            The flag to indicate whether the `binding_message` request parameter
            is always required whenever

            a backchannel authentication request is judged as a request for
            Financial-grade API.


            The FAPI-CIBA profile requires that the authorization server _"shall
            ensure unique authorization

            context exists in the authorization request or require a
            `binding_message` in the authorization

            request"_ (FAPI-CIBA, 5.2.2, 2). The simplest way to fulfill this
            requirement is to set this property

            to `true`.


            If this property is set to `false`, the `binding_message` request
            parameter remains optional

            even in FAPI context, but in exchange, your authorization server
            must implement a custom mechanism

            that ensures each backchannel authentication request has unique
            context.
        deviceAuthorizationEndpoint:
          type: string
          format: uri
          description: >
            The URI of the device authorization endpoint.


            Device authorization endpoint is defined in the specification of
            OAuth 2.0 Device Authorization Grant.
        deviceVerificationUri:
          type: string
          format: uri
          description: >
            The verification URI for the device flow. This URI is used as the
            value of the `verification_uri`

            parameter in responses from the device authorization endpoint.
        deviceVerificationUriComplete:
          type: string
          format: uri
          description: >
            The verification URI for the device flow with a placeholder for a
            user code. This URI is used

            to build the value of the `verification_uri_complete` parameter in
            responses from the device

            authorization endpoint.


            It is expected that the URI contains a fixed string `USER_CODE`
            somewhere as a placeholder for

            a user code. For example, like the following.


            `https://example.com/device?user\_code=USER\_CODE`


            The fixed string is replaced with an actual user code when Authlete
            builds a verification URI

            with a user code for the `verification_uri_complete` parameter.


            If this URI is not set, the `verification_uri_complete` parameter
            won't appear in device authorization

            responses.
        deviceFlowCodeDuration:
          type: integer
          format: int32
          description: >
            The duration of device verification codes and end-user verification
            codes issued from the device

            authorization endpoint in seconds. This is used as the value of the
            `expires_in` property in responses

            from the device authorization endpoint.
        deviceFlowPollingInterval:
          type: integer
          format: int32
          description: >
            The minimum interval between polling requests to the token endpoint
            from client applications in

            seconds in device flow. This is used as the value of the `interval`
            property in responses from

            the device authorization endpoint.
        userCodeCharset:
          $ref: "#/components/schemas/ServiceCreateApiResponse200Json1UserCodeCharset"
        userCodeLength:
          type: integer
          format: int32
          description: >
            The length of end-user verification codes (`user_code`) for Device
            Flow.
        supportedTrustFrameworks:
          type: array
          items:
            type: string
          description: >
            Trust frameworks supported by this service. This corresponds to the
            `trust_frameworks_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedEvidence:
          type: array
          items:
            type: string
          description: >
            Evidence supported by this service. This corresponds to the
            `evidence_supported`
            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedIdentityDocuments:
          type: array
          items:
            type: string
          description: >
            Identity documents supported by this service. This corresponds to
            the `id_documents_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedVerificationMethods:
          type: array
          items:
            type: string
          description: >
            Verification methods supported by this service. This corresponds to
            the `id_documents_verification_methods_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        supportedVerifiedClaims:
          type: array
          items:
            type: string
          description: >
            Verified claims supported by this service. This corresponds to the
            `claims_in_verified_claims_supported`

            [metadata](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html#rfc.section.7).
        verifiedClaimsValidationSchemaSet:
          $ref: "#/components/schemas/ServiceCreateApiResponse200Json1VerifiedClaimsValid\
            ationSchemaSet"
        attributes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1AttributesItems"
          description: |
            The attributes of this service.
        nbfOptional:
          type: boolean
          description: >
            The flag indicating whether the nbf claim in the request object is
            optional even when the authorization

            request is regarded as a FAPI-Part2 request.


            The final version of Financial-grade API was approved in January,
            2021. The Part 2 of the final

            version has new requirements on lifetime of request objects. They
            require that request objects

            contain an `nbf` claim and the lifetime computed by `exp` - `nbf` be
            no longer than 60 minutes.


            Therefore, when an authorization request is regarded as a FAPI-Part2
            request, the request object

            used in the authorization request must contain an nbf claim.
            Otherwise, the authorization server

            rejects the authorization request.


            When this flag is `true`, the `nbf` claim is treated as an optional
            claim even when the authorization

            request is regarded as a FAPI-Part2 request. That is, the
            authorization server does not perform

            the validation on lifetime of the request object.


            Skipping the validation is a violation of the FAPI specification.
            The reason why this flag has

            been prepared nevertheless is that the new requirements (which do
            not exist in the Implementer's

            Draft 2 released in October, 2018) have big impacts on deployed
            implementations of client

            applications and Authlete thinks there should be a mechanism whereby
            to make the migration

            from ID2 to Final smooth without breaking live systems.
        issSuppressed:
          type: boolean
          description: >
            The flag indicating whether generation of the iss response parameter
            is suppressed.


            "OAuth 2.0 Authorization Server Issuer Identifier in Authorization
            Response" has defined a new

            authorization response parameter, `iss`, as a countermeasure for a
            certain type of mix-up attacks.


            The specification requires that the `iss` response parameter always
            be included in authorization

            responses unless JARM (JWT Secured Authorization Response Mode) is
            used.


            When this flag is `true`, the authorization server does not include
            the `iss` response parameter

            in authorization responses. By turning this flag on and off,
            developers of client applications

            can experiment the mix-up attack and the effect of the `iss`
            response parameter.


            Note that this flag should not be `true` in production environment
            unless there are special

            reasons for it.
        supportedCustomClientMetadata:
          type: array
          items:
            type: string
          description: >
            custom client metadata supported by this service.


            Standard specifications define client metadata as necessary. The
            following are such examples.


            * [OpenID Connect Dynamic Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)

            * [RFC 7591 OAuth 2.0 Dynamic Client Registration
            Protocol](https://www.rfc-editor.org/rfc/rfc7591.html)

            * [RFC 8705 OAuth 2.0 Mutual-TLS Client Authentication and
            Certificate-Bound Access
            Tokens](https://www.rfc-editor.org/rfc/rfc8705.html)

            * [OpenID Connect Client-Initiated Backchannel Authentication Flow -
            Core
            1.0](https://openid.net/specs/openid-client-initiated-backchannel-authentication-core-1_0.html)

            * [The OAuth 2.0 Authorization Framework: JWT Secured Authorization
            Request
            (JAR)](https://datatracker.ietf.org/doc/draft-ietf-oauth-jwsreq/)

            * [Financial-grade API: JWT Secured Authorization Response Mode for
            OAuth 2.0
            (JARM)](https://openid.net/specs/openid-financial-api-jarm.html)

            * [OAuth 2.0 Pushed Authorization Requests
            (PAR)](https://datatracker.ietf.org/doc/rfc9126/)

            * [OAuth 2.0 Rich Authorization Requests
            (RAR)](https://datatracker.ietf.org/doc/draft-ietf-oauth-rar/)


            Standard client metadata included in Client Registration Request and
            Client Update Request (cf.

            [OIDC
            DynReg](https://openid.net/specs/openid-connect-registration-1_0.html),
            [RFC 7591](https://www.rfc-editor.org/rfc/rfc7591.html)

            and [RFC 7592](https://www.rfc-editor.org/rfc/rfc7592.html)) are, if
            supported by Authlete, stored

            into Authlete database. On the other hand, unrecognized client
            metadata are discarded.


            By listing up custom client metadata in advance by using this
            property (`supportedCustomClientMetadata`),

            Authlete can recognize them and stores their values into the
            database. The stored custom client

            metadata values can be referenced by `customMetadata`.
        tokenExpirationLinked:
          type: boolean
          description: >
            The flag indicating whether the expiration date of an access token
            never exceeds that of the

            corresponding refresh token.


            When a new access token is issued by a refresh token request (= a
            token request with `grant_type=refresh_token`),

            the expiration date of the access token may exceed the expiration
            date of the corresponding

            refresh token. This behavior itself is not wrong and may happen when
            `refreshTokenKept` is

            `true` and/or when `refreshTokenDurationKept` is `true`.


            When this flag is `true`, the expiration date of an access token
            never exceeds that of the corresponding

            refresh token regardless of the calculated duration based on other
            settings such as `accessTokenDuration`,

            `accessTokenDuration` in `extension` and `access_token.duration`
            scope attribute.


            It is technically possible to set a value which is bigger than the
            duration of refresh tokens

            as the duration of access tokens although it is strange. In the
            case, the duration of an access

            token becomes longer than the duration of the refresh token which is
            issued together with the

            access token. Even if the duration values are configured so, if this
            flag is `true`, the expiration

            date of the access token does not exceed that of the refresh token.
            That is, the duration of

            the access token will be shortened, and as a result, the access
            token and the refresh token

            will have the same expiration date.
        frontChannelRequestObjectEncryptionRequired:
          type: boolean
          description: >
            The flag indicating whether encryption of request object is required
            when the request object

            is passed through the front channel.


            This flag does not affect the processing of request objects at the
            Pushed Authorization Request

            Endpoint, which is defined in [OAuth 2.0 Pushed Authorization
            Requests](https://datatracker.ietf.org/doc/rfc9126/).

            Unecrypted request objects are accepted at the endpoint even if this
            flag is `true`.


            This flag does not indicate whether a request object is always
            required. There is a different

            flag, `requestObjectRequired`, for the purpose. See the description
            of `requestObjectRequired`

            for details.


            Even if this flag is `false`, encryption of request object is
            required if the `frontChannelRequestObjectEncryptionRequired`

            flag of the client is `true`.
        requestObjectEncryptionAlgMatchRequired:
          type: boolean
          description: >
            The flag indicating whether the JWE alg of encrypted request object
            must match the `request_object_encryption_alg`

            client metadata of the client that has sent the request object.


            The request_object_encryption_alg client metadata itself is defined
            in [OpenID Connect Dynamic

            Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)
            as follows.


            > request_object_encryption_alg

            >

            > OPTIONAL. JWE [JWE] alg algorithm [JWA] the RP is declaring that
            it may use for encrypting

            Request Objects sent to the OP. This parameter SHOULD be included
            when symmetric encryption

            will be used, since this signals to the OP that a client_secret
            value needs to be returned

            from which the symmetric key will be derived, that might not
            otherwise be returned. The RP

            MAY still use other supported encryption algorithms or send
            unencrypted Request Objects, even

            when this parameter is present. If both signing and encryption are
            requested, the Request Object

            will be signed then encrypted, with the result being a Nested JWT,
            as defined in [JWT]. The

            default, if omitted, is that the RP is not declaring whether it
            might encrypt any Request Objects.


            The point here is "The RP MAY still use other supported encryption
            algorithms or send unencrypted

            Request Objects, even when this parameter is present."


            The Client's property that represents the client metadata is
            `requestEncryptionAlg`. See the

            description of `requestEncryptionAlg` for details.


            Even if this flag is `false`, the match is required if the
            `requestObjectEncryptionAlgMatchRequired`

            flag of the client is `true`.
        requestObjectEncryptionEncMatchRequired:
          type: boolean
          description: >
            The flag indicating whether the JWE `enc` of encrypted request
            object must match the `request_object_encryption_enc`

            client metadata of the client that has sent the request object.


            The `request_object_encryption_enc` client metadata itself is
            defined in [OpenID Connect Dynamic

            Client Registration
            1.0](https://openid.net/specs/openid-connect-registration-1_0.html)
            as follows.


            > request_object_encryption_enc

            >

            > OPTIONAL. JWE enc algorithm [JWA] the RP is declaring that it may
            use for encrypting Request

            Objects sent to the OP. If request_object_encryption_alg is
            specified, the default for this

            value is A128CBC-HS256. When request_object_encryption_enc is
            included, request_object_encryption_alg

            MUST also be provided.


            The Client's property that represents the client metadata is
            `requestEncryptionEnc`. See the

            description of `requestEncryptionEnc` for details.


            Even if this flag is false, the match is required if the
            `requestObjectEncryptionEncMatchRequired`

            flag is `true`.
        hsmEnabled:
          type: boolean
          description: >
            The flag indicating whether HSM (Hardware Security Module) support
            is enabled for this service.


            When this flag is `false`, keys managed in HSMs are not used even if
            they exist. In addition,

            `/api/hsk/*` APIs reject all requests.


            Even if this flag is `true`, HSM-related features do not work if the
            configuration of the Authlete

            server you are using does not support HSM.
        hsks:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1HsksItems"
          description: >
            The information about keys managed on HSMs (Hardware Security
            Modules).


            This `hsks` property is output only, meaning that `hsks` in requests
            to `/api/service/create`

            API and `/api/service/update` API do not have any effect. The
            contents of this property is controlled

            only by `/api/hsk/*` APIs.
        grantManagementEndpoint:
          type: string
          description: |
            The URL of the grant management endpoint.
        grantManagementActionRequired:
          type: boolean
          description: >
            The flag indicating whether every authorization request (and any
            request serving as an authorization

            request such as CIBA backchannel authentication request and device
            authorization request) must

            include the `grant_management_action` request parameter.


            This property corresponds to the `grant_management_action_required`
            server metadata defined

            in [Grant Management for OAuth
            2.0](https://openid.net/specs/fapi-grant-management.html).


            Note that setting true to this property will result in blocking all
            public clients because

            the specification requires that grant management be usable only by
            confidential clients for

            security reasons.
        unauthorizedOnClientConfigSupported:
          type: boolean
          description: >
            The flag indicating whether Authlete's `/api/client/registration`
            API uses `UNAUTHORIZED` as

            a value of the `action` response parameter when appropriate.


            The `UNAUTHORIZED` enum value was initially not defined as a
            possible value of the `action`

            parameter in an `/api/client/registration` API response. This means
            that implementations of

            client `configuration` endpoint were not able to conform to [RFC
            7592](https://www.rfc-editor.org/rfc/rfc7592.html)

            strictly.


            For backward compatibility (to avoid breaking running systems),
            Authlete's `/api/client/registration`

            API does not return the `UNAUTHORIZED` enum value if this flag is
            not turned on.


            The steps an existing implementation of client configuration
            endpoint has to do in order to

            conform to the requirement related to "401 Unauthorized" are as
            follows.


            1. Update the Authlete library (e.g. authlete-java-common) your
            system is using.

            2. Update your implementation of client configuration endpoint so
            that it can handle the

            `UNAUTHORIZED` action.

            3. Turn on this `unauthorizedOnClientConfigSupported` flag.
        dcrScopeUsedAsRequestable:
          type: boolean
          description: >
            The flag indicating whether the `scope` request parameter in dynamic
            client registration and

            update requests (RFC 7591 and RFC 7592) is used as scopes that the
            client can request.


            Limiting the range of scopes that a client can request is achieved
            by listing scopes in the

            `client.extension.requestableScopes` property and setting the
            `client.extension.requestableScopesEnabled`

            property to `true`. This feature is called "requestable scopes".


            This property affects behaviors of `/api/client/registration` and
            other family APIs.
        endSessionEndpoint:
          type: string
          format: uri
          description: >
            The endpoint for clients ending the sessions.


            A URL that starts with `https://` and has no fragment component. For
            example, `https://example.com/auth/endSession`.


            The value of this property is used as `end_session_endpoint`
            property in the [OpenID Provider

            Metadata](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).
        loopbackRedirectionUriVariable:
          type: boolean
          description: >
            The flag indicating whether the port number component of redirection
            URIs can be variable when

            the host component indicates loopback.


            When this flag is `true`, if the host component of a redirection URI
            specified in an authorization

            request indicates loopback (to be precise, when the host component
            is localhost, `127.0.0.1`

            or `::1`), the port number component is ignored when the specified
            redirection URI is compared

            to pre-registered ones. This behavior is described in [7.3. Loopback
            Interface Redirection](

            https://www.rfc-editor.org/rfc/rfc8252.html#section-7.3) of [RFC
            8252 OAuth 2.0](https://www.rfc-editor.org/rfc/rfc8252.html)

            for Native Apps.


            [3.1.2.3. Dynamic
            Configuration](https://www.rfc-editor.org/rfc/rfc6749.html#section-3.1.2.3)

            of [RFC 6749](https://www.rfc-editor.org/rfc/rfc6749.html) states
            _"If the client registration

            included the full redirection URI, the authorization server MUST
            compare the two URIs using

            simple string comparison as defined in [RFC3986] Section 6.2.1."_
            Also, the description of

            `redirect_uri` in [3.1.2.1. Authentication
            Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest)

            of [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) states

            _"This URI MUST exactly match one of the Redirection URI values for
            the Client pre-registered

            at the OpenID Provider, with the matching performed as described in
            Section 6.2.1 of [RFC3986]

            (**Simple String Comparison**)."_ These "Simple String Comparison"
            requirements are preceded

            by this flag. That is, even when the conditions described in RFC
            6749 and OpenID Connect Core 1.0

            are satisfied, the port number component of loopback redirection
            URIs can be variable when this

            flag is `true`.


            [8.3. Loopback Redirect
            Considerations](https://www.rfc-editor.org/rfc/rfc8252.html#section-8.3)

            of [RFC 8252](https://www.rfc-editor.org/rfc/rfc8252.html) states as
            follows.


            > While redirect URIs using localhost (i.e.,
            `"http://localhost:{port}/{path}"`) function

            similarly to loopback IP redirects described in Section 7.3, the use
            of localhost is NOT RECOMMENDED.

            Specifying a redirect URI with the loopback IP literal rather than
            localhost avoids inadvertently

            listening on network interfaces other than the loopback interface.
            It is also less susceptible

            to client-side firewalls and misconfigured host name resolution on
            the user's device.


            However, Authlete allows the port number component to be variable in
            the case of `localhost`,

            too. It is left to client applications whether they use `localhost`
            or a literal loopback IP

            address (`127.0.0.1` for IPv4 or `::1` for IPv6).


            Section 7.3 and Section 8.3 of [RFC
            8252](https://www.rfc-editor.org/rfc/rfc8252.html) state

            that loopback redirection URIs use the `"http"` scheme, but Authlete
            allows the port number

            component to be variable in other cases (e.g. in the case of the
            `"https"` scheme), too.
        requestObjectAudienceChecked:
          type: boolean
          description: >
            The flag indicating whether Authlete checks whether the `aud` claim
            of request objects matches

            the issuer identifier of this service.


            [Section 6.1. Passing a Request Object by
            Value](https://openid.net/specs/openid-connect-core-1_0.html#JWTRequests)

            of [OpenID Connect Core
            1.0](https://openid.net/specs/openid-connect-core-1_0.html) has the
            following

            statement.


            > The `aud` value SHOULD be or include the OP's Issuer Identifier
            URL.


            Likewise, [Section 4. Request
            Object](https://www.rfc-editor.org/rfc/rfc9101.html#section-4) of

            [RFC 9101](https://www.rfc-editor.org/rfc/rfc9101.html) (The OAuth
            2.0 Authorization Framework:

            JWT-Secured Authorization Request (JAR)) has the following
            statement.


            > The value of aud should be the value of the authorization server
            (AS) issuer, as defined in

            [RFC 8414](https://www.rfc-editor.org/rfc/rfc8414.html).


            As excerpted above, validation on the `aud` claim of request objects
            is optional. However, if

            this flag is turned on, Authlete checks whether the `aud` claim of
            request objects matches the issuer

            identifier of this service and raises an error if they are
            different.
        accessTokenForExternalAttachmentEmbedded:
          type: boolean
          description: |
            The flag indicating whether Authlete generates access tokens for
            external attachments and embeds them in ID tokens and userinfo
            responses.
        authorityHints:
          type: array
          items:
            type: string
          description: |
            Identifiers of entities that can issue entity statements for this
            service. This property corresponds to the `authority_hints`
            property that appears in a self-signed entity statement that is
            defined in OpenID Connect Federation 1.0.
        federationEnabled:
          type: boolean
          description: >
            flag indicating whether this service supports OpenID Connect
            Federation 1
        federationJwks:
          type: string
          description: >
            JWK Set document containing keys that are used to sign (1)
            self-signed

            entity statement of this service and (2) the response from

            `signed_jwks_uri`.
        federationSignatureKeyId:
          type: string
          description: |
            A key ID to identify a JWK used to sign the entity configuration and
            the signed JWK Set.
        federationConfigurationDuration:
          type: integer
          description: |
            The duration of the entity configuration in seconds.
        federationRegistrationEndpoint:
          type: string
          description: >
            The URI of the federation registration endpoint. This property
            corresponds

            to the `federation_registration_endpoint` server metadata that is

            defined in OpenID Connect Federation 1.0.
        organizationName:
          type: string
          description: |
            The human-readable name representing the organization that operates
            this service. This property corresponds to the `organization_name`
            server metadata that is defined in OpenID Connect Federation 1.0.
        predefinedTransformedClaims:
          type: string
          description: |
            The transformed claims predefined by this service in JSON format.
            This property corresponds to the `transformed_claims_predefined`
            server metadata.
        refreshTokenIdempotent:
          type: boolean
          description: |
            flag indicating whether refresh token requests with the same
            refresh token can be made multiple times in quick succession and
            they can obtain the same renewed refresh token within the short
            period.
        signedJwksUri:
          type: string
          description: >
            The URI of the endpoint that returns this service's JWK Set document
            in

            the JWT format. This property corresponds to the `signed_jwks_uri`

            server metadata defined in OpenID Connect Federation 1.0.
        supportedAttachments:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedAttachment\
              sItems"
          description: |
            Supported attachment types. This property corresponds to the {@code
            attachments_supported} server metadata which was added by the third
            implementer's draft of OpenID Connect for Identity Assurance 1.0.
        supportedDigestAlgorithms:
          type: array
          items:
            type: string
          description: |
            Supported algorithms used to compute digest values of external
            attachments. This property corresponds to the
            `digest_algorithms_supported` server metadata which was added
            by the third implementer's draft of OpenID Connect for Identity
            Assurance 1.0.
        supportedDocuments:
          type: array
          items:
            type: string
          description: |
            Document types supported by this service. This property corresponds
            to the `documents_supported` server metadata.
        supportedDocumentsMethods:
          type: array
          items:
            type: string
          description: >
            validation and verification processes supported by this service.

            This property corresponds to the `documents_methods_supported`

            server metadata.


            The third implementer's draft of [OpenID Connect for Identity
            Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)

            renamed the

            `id_documents_verification_methods_supported` server metadata to

            `documents_methods_supported`.
        supportedDocumentsValidationMethods:
          type: array
          items:
            type: string
          description: >
            Document validation methods supported by this service. This property

            corresponds to the `documents_validation_methods_supported` server

            metadata which was added by the third implementer's draft of <a
            href=

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedDocumentsVerificationMethods:
          type: array
          items:
            type: string
          description: >
            Document verification methods supported by this service. This
            property

            corresponds to the `documents_verification_methods_supported` server

            metadata which was added by the third implementer's draft of

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedElectronicRecords:
          type: array
          items:
            type: string
          description: >
            Electronic record types supported by this service. This property

            corresponds to the `electronic_records_supported` server metadata

            which was added by the third implementer's draft of

            [OpenID Connect for Identity Assurance
            1.0](https://openid.net/specs/openid-connect-4-identity-assurance-1_0.html)
        supportedClientRegistrationTypes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedClientRegi\
              strationTypesItems"
        tokenExchangeByIdentifiableClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit unidentifiable clients from
            making token exchange requests.
        tokenExchangeByConfidentialClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit public clients from making
            token exchange requests.
        tokenExchangeByPermittedClientsOnly:
          type: boolean
          description: >
            The flag indicating whether to prohibit clients that have no
            explicit

            permission from making token exchange requests.
        tokenExchangeEncryptedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token exchange requests which
            use encrypted JWTs as input tokens.
        tokenExchangeUnsignedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token exchange requests which
            use unsigned JWTs as input tokens.
        jwtGrantByIdentifiableClientsOnly:
          type: boolean
          description: |
            The flag indicating whether to prohibit unidentifiable clients from
            using the grant type "urn:ietf:params:oauth:grant-type:jwt-bearer".
        jwtGrantEncryptedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token requests that use an
            encrypted JWT as an authorization grant with the grant type
            "urn:ietf:params:oauth:grant-type:jwt-bearer".
        jwtGrantUnsignedJwtRejected:
          type: boolean
          description: |
            The flag indicating whether to reject token requests that use an
            unsigned JWT as an authorization grant with the grant type
            "urn:ietf:params:oauth:grant-type:jwt-bearer".
        dcrDuplicateSoftwareIdBlocked:
          type: boolean
          description: >
            The flag indicating whether to block DCR (Dynamic Client
            Registration)

            requests whose "software_id" has already been used previously.
        trustAnchors:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1TrustAnchorsItems"
          description: |
            The trust anchors that are referenced when this service resolves
            trust chains of relying parties.

            If this property is empty, client registration fails regardless of
            whether its type is `automatic` or `explicit`. It means
            that OpenID Connect Federation 1.0 does not work.
        openidDroppedOnRefreshWithoutOfflineAccess:
          type: boolean
          description: >
            The flag indicating whether the openid scope should be dropped from

            scopes list assigned to access token issued when a refresh token
            grant

            is used.
        supportedDocumentsCheckMethods:
          type: array
          items:
            type: string
          description: >
            Supported document check methods. This property corresponds to the
            `documents_check_methods_supported`

            server metadata which was added by the fourth implementer's draft of
            OpenID Connect for Identity

            Assurance 1.0.
        rsResponseSigned:
          type: boolean
          description: >
            The flag indicating whether this service signs responses from the
            resource server.
        cnonceDuration:
          type: integer
          format: int64
          description: |
            The duration of `c_nonce`.
        dpopNonceRequired:
          type: boolean
          description: |
            Whether to require DPoP proof JWTs to include the `nonce` claim
            whenever they are presented.
        verifiableCredentialsEnabled:
          type: boolean
          description: >
            Get the flag indicating whether the feature of Verifiable
            Credentials

            for this service is enabled or not.
        credentialJwksUri:
          type: string
          description: |
            The URL at which the JWK Set document of the credential issuer is
            exposed.
        credentialOfferDuration:
          type: integer
          format: int64
          description: |
            The default duration of credential offers in seconds.
        dpopNonceDuration:
          type: integer
          format: int64
          description: |
            The duration of nonce values for DPoP proof JWTs in seconds.
        preAuthorizedGrantAnonymousAccessSupported:
          type: boolean
          description: |
            The flag indicating whether token requests using the pre-authorized
            code grant flow by unidentifiable clients are allowed.
        credentialTransactionDuration:
          type: integer
          format: int64
          description: |
            The duration of transaction ID in seconds that may be issued as a
            result of a credential request or a batch credential request.
        introspectionSignatureKeyId:
          type: string
          description: |
            The key ID of the key for signing introspection responses.
        resourceSignatureKeyId:
          type: string
          description: |
            The key ID of the key for signing introspection responses.
        userPinLength:
          type: integer
          format: int32
          description: |
            The default length of user PINs.
        supportedPromptValues:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedPromptValu\
              esItems"
          description: |
            The supported `prompt` values.
        idTokenReissuable:
          type: boolean
          description: |
            The flag indicating whether to enable the feature of ID token
            reissuance in the refresh token flow.
        credentialJwks:
          type: string
          description: |
            The JWK Set document containing private keys that are used to sign
            verifiable credentials.
        fapiModes:
          type: array
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1FapiModesItems"
          description: >
            FAPI modes for this service.


            When the value of this property is not `null`, Authlete always
            processes requests to this service based

            on the specified FAPI modes if the FAPI feature is enabled in
            Authlete and the FAPI profile is supported

            by this service.


            For instance, when this property is set to an array containing
            `FAPI1_ADVANCED` only, Authlete always

            processes requests to this service based on "Financial-grade API
            Security Profile 1.0 - Part 2:

            Advanced" if the FAPI feature is enabled in Authlete and the FAPI
            profile is supported by this service.
        credentialDuration:
          type: integer
          format: int64
          description: |
            The default duration of verifiable credentials in seconds.
        credentialIssuerMetadata:
          $ref: "#/components/schemas/ServiceCreateApiResponse200Json1CredentialIssuerMet\
            adata"
        idTokenAudType:
          type: string
          description: |
            The type of the `aud` claim in ID tokens.
        nativeSsoSupported:
          type: boolean
          description: >
            The flag to determine to support the [OpenID Connect Native SSO for
            Mobile Apps
            1.0](https://openid.net/specs/openid-connect-native-sso-1_0.html)

            specification (a.k.a. "Native SSO").


            If this property is not set to `true`, Native SSO-specific

            parameters will be ignored or treated as errors. For example, the
            `device_sso scope` will have

            no special meaning (Authlete will not embed the sid claim in the ID
            token), and the `urn:openid:params:token-type:device-secret`

            token type will be treated as unknown, resulting in an error.


            This property corresponds to the `native_sso_supported` server
            metadata. If this property is set

            to `true`, `"native_sso_supported":true` will appear in the server
            metadata document (see [OpenID

            Connect Discovery 1.0, Section 3. OpenID Provider Metadata; RFC
            8414](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata):

            [OAuth 2.0 Authorization Server Metadata, Section 2. Authorization
            Server
            Metadata](https://www.rfc-editor.org/rfc/rfc8414.html#section-2)).
    ServiceCreateApiResponse200Json1MetadataItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceCreateApiResponse200Json1MtlsEndpointAliasesItems:
      type: object
      properties:
        name:
          type: string
        uri:
          type: string
          format: uri
    ServiceCreateApiResponse200Json1SupportedScopesItems:
      type: object
      properties:
        name:
          type: string
          description: The name of the scope.
        defaultEntry:
          type: boolean
          description: "`true` to mark the scope as default. Scopes marked as default are
            regarded as requested when an authorization request from a client
            application does not contain scope request parameter. "
        description:
          type: string
          description: The description about the scope.
        descriptions:
          type: array
          description: The descriptions about this scope in multiple languages.
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedScopesItem\
              sDescriptionsItems"
        attributes:
          type: array
          description: The attributes of the scope.
          items:
            $ref: "#/components/schemas/ServiceCreateApiResponse200Json1SupportedScopesItem\
              sAttributesItems"
    ServiceCreateApiResponse200Json1SupportedScopesItemsDescriptionsItems:
      type: object
      properties:
        tag:
          type: string
          description: The language tag part.
        value:
          type: string
          description: The value part.
    ServiceCreateApiResponse200Json1SupportedScopesItemsAttributesItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceCreateApiResponse200Json1AttributesItems:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
    ServiceCreateApiResponse200Json1HsksItems:
      type: object
      description: >
        Holds information about a key managed in an HSM (Hardware Security
        Module)
      properties:
        kty:
          type: string
          description: |
            The key type (EC or RSA)
        use:
          type: string
          description: >
            Get the use of the key on the HSM.

            When the key use is "sig" (signature), the private key on the HSM is
            used to sign data and the corresponding public key is used to verify
            the signature.

            When the key use is "enc" (encryption), the private key on the HSM
            is used to decrypt encrypted data which have been encrypted with the
            corresponding public key
        kid:
          type: string
          description: |
            Key ID for the key on the HSM.
        hsmName:
          type: string
          description: >
            The name of the HSM.

            The identifier for the HSM that sits behind the Authlete server. For
            example, "google".
        handle:
          type: string
          description: >
            The handle for the key on the HSM.

            A handle is a base64url-encoded 256-bit random value (43 letters)
            which is assigned by Authlete on the call of the /api/hsk/create API
        publicKey:
          type: string
          description: |
            The public key that corresponds to the key on the HSM.
        alg:
          type: string
          description: >
            The algorithm of the key on the HSM. When the key use is `"sig"`,
            the algorithm represents a

            signing algorithm such as `"ES256"`. When the key use is `"enc"`,
            the algorithm represents an

            encryption algorithm such as `"RSA-OAEP-256"`.
    ServiceCreateApiResponse200Json1TrustAnchorsItems:
      type: object
      properties:
        entityId:
          type: string
          description: |
            the entity ID of the trust anchor
        jwks:
          type: string
          description: |
            the JWK Set document containing public keys of the trust anchor
    ServiceCreateApiResponse200Json1CredentialIssuerMetadata:
      type: object
      properties:
        authorizationServers:
          type: array
          items:
            type: string
          description: >
            The identifiers of the authorization servers that the credential
            issuer relies on for authorization.

            This property corresponds to the authorization_servers metadata.
            When the credential issuer works

            as an authorization server for itself, this property should be
            omitted.
        credentialIssuer:
          type: string
          description: The identifier of a credential request.
        credentialEndpoint:
          type: boolean
          description: The URL of the credential endpoint of the credential issuer.
        batchCredentialEndpoint:
          type: integer
          format: int64
          description: The URL of the batch credential endpoint of the credential issuer.
        deferredCredentialEndpoint:
          type: string
          description: The URL of the deferred credential endpoint of the credential issuer.
        credentialsSupported:
          type: boolean
          description: A JSON array describing supported credentials.
        credentialResponseEncryptionAlgValuesSupported:
          type: array
          items:
            type: string
          description: >
            The supported JWE `alg` algorithms for credential response
            encryption. This property corresponds

            to the `credential_response_encryption.alg_values_supported`
            metadata.
        credentialResponseEncryptionEncValuesSupported:
          type: array
          items:
            type: string
          description: >
            The supported JWE `enc` algorithms for credential response
            encryption. This property corresponds

            to the `credential_response_encryption.enc_values_supported`
            metadata.
        requireCredentialResponseEncryption:
          type: boolean
          description: >
            The boolean flag indicating whether credential response encryption
            is required. This property

            corresponds to the
            `credential_response_encryption.encryption_required metadata`. If
            this flag

            is `true`, every credential request to the credential issuer must
            include the `credential_response_encryption`

            property.
    ServiceCreateApiResponse400Json1:
      type: object
      properties:
        resultCode:
          type: string
          description: The code which represents the result of the API call.
        resultMessage:
          type: string
          description: A short message which explains the result of the API call.
    ServiceCreateApiResponse401Json1:
      type: object
      properties:
        resultCode:
          type: string
          description: The code which represents the result of the API call.
        resultMessage:
          type: string
          description: A short message which explains the result of the API call.
    ServiceCreateApiResponse403Json1:
      type: object
      properties:
        resultCode:
          type: string
          description: The code which represents the result of the API call.
        resultMessage:
          type: string
          description: A short message which explains the result of the API call.
    ServiceCreateApiResponse500Json1:
      type: object
      properties:
        resultCode:
          type: string
          description: The code which represents the result of the API call.
        resultMessage:
          type: string
          description: A short message which explains the result of the API call.
    AccessTokenPropertiesItems1:
      type: object
      properties:
        key:
          type: string
          description: The key part.
        value:
          type: string
          description: The value part.
        hidden:
          type: boolean
          description: >
            The flag to indicate whether this property hidden from or visible to
            client applications.

            If `true`, this property is hidden from client applications.
            Otherwise, this property is visible to client applications.
    AuthorizationDetailsElementsItems1:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          description: >
            The type of this element.


            From _"OAuth 2.0 Rich Authorization Requests"_: _"The type of
            authorization data as a string.

            This field MAY define which other elements are allowed in the
            request. This element is REQUIRED."_


            This property is always NOT `null`.
        locations:
          type: array
          items:
            type: string
          description: >
            The resources and/or resource servers. This property may be `null`.


            From _"OAuth 2.0 Rich Authorization Requests"_: _"An array of
            strings representing the location of

            the resource or resource server. This is typically composed of
            URIs."_


            This property may be `null`.
        actions:
          type: array
          items:
            type: string
          description: >
            The actions.


            From _"OAuth 2.0 Rich Authorization Requests"_: _"An array of
            strings representing the kinds of actions

            to be taken at the resource. The values of the strings are
            determined by the API being protected."_


            This property may be `null`.
        dataTypes:
          type: array
          items:
            type: string
          description: >
            From _"OAuth 2.0 Rich Authorization Requests"_: _"An array of
            strings representing the kinds of data being requested

            from the resource."_


            This property may be `null`.
        identifier:
          type: string
          description: >
            The identifier of a specific resource.

            From _"OAuth 2.0 Rich Authorization Requests"_: _"A string
            identifier indicating a specific resource available at the API."_


            This property may be `null`.
        privileges:
          type: array
          items:
            type: string
          description: >
            The types or levels of privilege.

            From "OAuth 2.0 Rich Authorization Requests": _"An array of strings
            representing the types or

            levels of privilege being requested at the resource."_


            This property may be `null`.
        otherFields:
          type: string
          description: >
            The RAR request in the JSON format excluding the pre-defined
            attributes such as `type` and `locations`.

            The content and semantics are specific to the deployment and the use
            case implemented.
    ServiceGetApiResponse200JsonSupportedGrantTypesItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedGrantTypesItems.yaml
    ServiceGetApiResponse200JsonSupportedResponseTypesItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedResponseTypesItems.yaml
    ServiceGetApiResponse200JsonSupportedServiceProfilesItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedServiceProfilesItems.yaml
    ServiceGetApiResponse200JsonSupportedDisplaysItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedDisplaysItems.yaml
    ServiceGetApiResponse200JsonSupportedTokenAuthMethodsItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedTokenAuthMethodsItems.yaml
    ServiceGetApiResponse200JsonSupportedRevocationAuthMethodsItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedRevocationAuthMethodsItems.yaml
    ServiceGetApiResponse200JsonSupportedIntrospectionAuthMethodsItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedIntrospectionAuthMethodsItems.yaml
    ServiceGetApiResponse200JsonAccessTokenSignAlg:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonAccessTokenSignAlg.yaml
    ServiceGetApiResponse200JsonSupportedClaimTypesItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedClaimTypesItems.yaml
    ServiceGetApiResponse200JsonSupportedBackchannelTokenDeliveryModesItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedBackchannelTokenDeliveryModesItems.yaml
    ServiceGetApiResponse200JsonUserCodeCharset:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonUserCodeCharset.yaml
    ServiceGetApiResponse200JsonVerifiedClaimsValidationSchemaSet:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonVerifiedClaimsValidationSchemaSet.yaml
    ServiceGetApiResponse200JsonSupportedAttachmentsItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedAttachmentsItems.yaml
    ServiceGetApiResponse200JsonSupportedClientRegistrationTypesItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedClientRegistrationTypesItems.yaml
    ServiceGetApiResponse200JsonSupportedPromptValuesItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonSupportedPromptValuesItems.yaml
    ServiceGetApiResponse200JsonFapiModesItems:
      $ref: en/ServiceGetApiResponse200Json/ServiceGetApiResponse200JsonFapiModesItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedGrantTypesItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedGrantTypesItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedResponseTypesItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedResponseTypesItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedServiceProfilesItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedServiceProfilesItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedDisplaysItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedDisplaysItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedTokenAuthMethodsItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedTokenAuthMethodsItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedRevocationAuthMethodsItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedRevocationAuthMethodsItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedIntrospectionAuthMethodsItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedIntrospectionAuthMethodsItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsAccessTokenSignAlg:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsAccessTokenSignAlg.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedClaimTypesItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedClaimTypesItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedBackchannelTokenDeliveryModesItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedBackchannelTokenDeliveryModesItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsUserCodeCharset:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsUserCodeCharset.yaml
    ServiceGetListApiResponse200JsonServicesItemsVerifiedClaimsValidationSchemaSet:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsVerifiedClaimsValidationSchemaSet.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedAttachmentsItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedAttachmentsItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedClientRegistrationTypesItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedClientRegistrationTypesItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsSupportedPromptValuesItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsSupportedPromptValuesItems.yaml
    ServiceGetListApiResponse200JsonServicesItemsFapiModesItems:
      $ref: en/ServiceGetListApiResponse200Json/ServiceGetListApiResponse200JsonServicesItems/ServiceGetListApiResponse200JsonServicesItemsFapiModesItems.yaml
    ServiceCreateApiResponse200JsonSupportedGrantTypesItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedGrantTypesItems.yaml
    ServiceCreateApiResponse200JsonSupportedResponseTypesItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedResponseTypesItems.yaml
    ServiceCreateApiResponse200JsonSupportedServiceProfilesItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedServiceProfilesItems.yaml
    ServiceCreateApiResponse200JsonSupportedDisplaysItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedDisplaysItems.yaml
    ServiceCreateApiResponse200JsonSupportedTokenAuthMethodsItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedTokenAuthMethodsItems.yaml
    ServiceCreateApiResponse200JsonSupportedRevocationAuthMethodsItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedRevocationAuthMethodsItems.yaml
    ServiceCreateApiResponse200JsonSupportedIntrospectionAuthMethodsItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedIntrospectionAuthMethodsItems.yaml
    ServiceCreateApiResponse200JsonAccessTokenSignAlg:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonAccessTokenSignAlg.yaml
    ServiceCreateApiResponse200JsonSupportedClaimTypesItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedClaimTypesItems.yaml
    ServiceCreateApiResponse200JsonSupportedBackchannelTokenDeliveryModesItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedBackchannelTokenDeliveryModesItems.yaml
    ServiceCreateApiResponse200JsonUserCodeCharset:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonUserCodeCharset.yaml
    ServiceCreateApiResponse200JsonVerifiedClaimsValidationSchemaSet:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonVerifiedClaimsValidationSchemaSet.yaml
    ServiceCreateApiResponse200JsonSupportedAttachmentsItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedAttachmentsItems.yaml
    ServiceCreateApiResponse200JsonSupportedClientRegistrationTypesItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedClientRegistrationTypesItems.yaml
    ServiceCreateApiResponse200JsonSupportedPromptValuesItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonSupportedPromptValuesItems.yaml
    ServiceCreateApiResponse200JsonFapiModesItems:
      $ref: en/ServiceCreateApiResponse200Json/ServiceCreateApiResponse200JsonFapiModesItems.yaml
    ServiceCreateApiRequestBodyJsonSupportedGrantTypesItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedGrantTypesItems.yaml
    ServiceCreateApiRequestBodyJsonSupportedResponseTypesItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedResponseTypesItems.yaml
    ServiceCreateApiRequestBodyJsonSupportedServiceProfilesItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedServiceProfilesItems.yaml
    ServiceCreateApiRequestBodyJsonSupportedDisplaysItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedDisplaysItems.yaml
    ServiceCreateApiRequestBodyJsonSupportedTokenAuthMethodsItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedTokenAuthMethodsItems.yaml
    ServiceCreateApiRequestBodyJsonSupportedRevocationAuthMethodsItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedRevocationAuthMethodsItems.yaml
    ServiceCreateApiRequestBodyJsonSupportedIntrospectionAuthMethodsItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedIntrospectionAuthMethodsItems.yaml
    ServiceCreateApiRequestBodyJsonAccessTokenSignAlg:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonAccessTokenSignAlg.yaml
    ServiceCreateApiRequestBodyJsonSupportedClaimTypesItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedClaimTypesItems.yaml
    ServiceCreateApiRequestBodyJsonSupportedBackchannelTokenDeliveryModesItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedBackchannelTokenDeliveryModesItems.yaml
    ServiceCreateApiRequestBodyJsonUserCodeCharset:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonUserCodeCharset.yaml
    ServiceCreateApiRequestBodyJsonVerifiedClaimsValidationSchemaSet:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonVerifiedClaimsValidationSchemaSet.yaml
    ServiceCreateApiRequestBodyJsonSupportedAttachmentsItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedAttachmentsItems.yaml
    ServiceCreateApiRequestBodyJsonSupportedClientRegistrationTypesItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedClientRegistrationTypesItems.yaml
    ServiceCreateApiRequestBodyJsonSupportedPromptValuesItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonSupportedPromptValuesItems.yaml
    ServiceCreateApiRequestBodyJsonFapiModesItems:
      $ref: en/ServiceCreateApiRequestBodyJson/ServiceCreateApiRequestBodyJsonFapiModesItems.yaml
    ServiceCreateApiRequestBodySupportedGrantTypesItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedGrantTypesItems.yaml
    ServiceCreateApiRequestBodySupportedResponseTypesItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedResponseTypesItems.yaml
    ServiceCreateApiRequestBodySupportedServiceProfilesItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedServiceProfilesItems.yaml
    ServiceCreateApiRequestBodySupportedDisplaysItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedDisplaysItems.yaml
    ServiceCreateApiRequestBodySupportedTokenAuthMethodsItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedTokenAuthMethodsItems.yaml
    ServiceCreateApiRequestBodySupportedRevocationAuthMethodsItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedRevocationAuthMethodsItems.yaml
    ServiceCreateApiRequestBodySupportedIntrospectionAuthMethodsItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedIntrospectionAuthMethodsItems.yaml
    ServiceCreateApiRequestBodyAccessTokenSignAlg:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodyAccessTokenSignAlg.yaml
    ServiceCreateApiRequestBodySupportedClaimTypesItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedClaimTypesItems.yaml
    ServiceCreateApiRequestBodySupportedBackchannelTokenDeliveryModesItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedBackchannelTokenDeliveryModesItems.yaml
    ServiceCreateApiRequestBodyUserCodeCharset:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodyUserCodeCharset.yaml
    ServiceCreateApiRequestBodyVerifiedClaimsValidationSchemaSet:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodyVerifiedClaimsValidationSchemaSet.yaml
    ServiceCreateApiRequestBodySupportedAttachmentsItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedAttachmentsItems.yaml
    ServiceCreateApiRequestBodySupportedClientRegistrationTypesItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedClientRegistrationTypesItems.yaml
    ServiceCreateApiRequestBodySupportedPromptValuesItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodySupportedPromptValuesItems.yaml
    ServiceCreateApiRequestBodyFapiModesItems:
      $ref: en/ServiceCreateApiRequestBody/ServiceCreateApiRequestBodyFapiModesItems.yaml
    ServiceUpdateApiResponse200JsonSupportedGrantTypesItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedGrantTypesItems.yaml
    ServiceUpdateApiResponse200JsonSupportedResponseTypesItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedResponseTypesItems.yaml
    ServiceUpdateApiResponse200JsonSupportedServiceProfilesItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedServiceProfilesItems.yaml
    ServiceUpdateApiResponse200JsonSupportedDisplaysItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedDisplaysItems.yaml
    ServiceUpdateApiResponse200JsonSupportedTokenAuthMethodsItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedTokenAuthMethodsItems.yaml
    ServiceUpdateApiResponse200JsonSupportedRevocationAuthMethodsItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedRevocationAuthMethodsItems.yaml
    ServiceUpdateApiResponse200JsonSupportedIntrospectionAuthMethodsItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedIntrospectionAuthMethodsItems.yaml
    ServiceUpdateApiResponse200JsonAccessTokenSignAlg:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonAccessTokenSignAlg.yaml
    ServiceUpdateApiResponse200JsonSupportedClaimTypesItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedClaimTypesItems.yaml
    ServiceUpdateApiResponse200JsonSupportedBackchannelTokenDeliveryModesItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedBackchannelTokenDeliveryModesItems.yaml
    ServiceUpdateApiResponse200JsonUserCodeCharset:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonUserCodeCharset.yaml
    ServiceUpdateApiResponse200JsonVerifiedClaimsValidationSchemaSet:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonVerifiedClaimsValidationSchemaSet.yaml
    ServiceUpdateApiResponse200JsonSupportedAttachmentsItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedAttachmentsItems.yaml
    ServiceUpdateApiResponse200JsonSupportedClientRegistrationTypesItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedClientRegistrationTypesItems.yaml
    ServiceUpdateApiResponse200JsonSupportedPromptValuesItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonSupportedPromptValuesItems.yaml
    ServiceUpdateApiResponse200JsonFapiModesItems:
      $ref: en/ServiceUpdateApiResponse200Json/ServiceUpdateApiResponse200JsonFapiModesItems.yaml
    ServiceUpdateApiRequestBodyJsonSupportedGrantTypesItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedGrantTypesItems.yaml
    ServiceUpdateApiRequestBodyJsonSupportedResponseTypesItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedResponseTypesItems.yaml
    ServiceUpdateApiRequestBodyJsonSupportedServiceProfilesItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedServiceProfilesItems.yaml
    ServiceUpdateApiRequestBodyJsonSupportedDisplaysItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedDisplaysItems.yaml
    ServiceUpdateApiRequestBodyJsonSupportedTokenAuthMethodsItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedTokenAuthMethodsItems.yaml
    ServiceUpdateApiRequestBodyJsonSupportedRevocationAuthMethodsItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedRevocationAuthMethodsItems.yaml
    ServiceUpdateApiRequestBodyJsonSupportedIntrospectionAuthMethodsItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedIntrospectionAuthMethodsItems.yaml
    ServiceUpdateApiRequestBodyJsonAccessTokenSignAlg:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonAccessTokenSignAlg.yaml
    ServiceUpdateApiRequestBodyJsonSupportedClaimTypesItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedClaimTypesItems.yaml
    ServiceUpdateApiRequestBodyJsonSupportedBackchannelTokenDeliveryModesItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedBackchannelTokenDeliveryModesItems.yaml
    ServiceUpdateApiRequestBodyJsonUserCodeCharset:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonUserCodeCharset.yaml
    ServiceUpdateApiRequestBodyJsonVerifiedClaimsValidationSchemaSet:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonVerifiedClaimsValidationSchemaSet.yaml
    ServiceUpdateApiRequestBodyJsonSupportedAttachmentsItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedAttachmentsItems.yaml
    ServiceUpdateApiRequestBodyJsonSupportedClientRegistrationTypesItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedClientRegistrationTypesItems.yaml
    ServiceUpdateApiRequestBodyJsonSupportedPromptValuesItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonSupportedPromptValuesItems.yaml
    ServiceUpdateApiRequestBodyJsonFapiModesItems:
      $ref: en/ServiceUpdateApiRequestBodyJson/ServiceUpdateApiRequestBodyJsonFapiModesItems.yaml
    ServiceUpdateApiRequestBodySupportedGrantTypesItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedGrantTypesItems.yaml
    ServiceUpdateApiRequestBodySupportedResponseTypesItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedResponseTypesItems.yaml
    ServiceUpdateApiRequestBodySupportedServiceProfilesItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedServiceProfilesItems.yaml
    ServiceUpdateApiRequestBodySupportedDisplaysItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedDisplaysItems.yaml
    ServiceUpdateApiRequestBodySupportedTokenAuthMethodsItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedTokenAuthMethodsItems.yaml
    ServiceUpdateApiRequestBodySupportedRevocationAuthMethodsItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedRevocationAuthMethodsItems.yaml
    ServiceUpdateApiRequestBodySupportedIntrospectionAuthMethodsItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedIntrospectionAuthMethodsItems.yaml
    ServiceUpdateApiRequestBodyAccessTokenSignAlg:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodyAccessTokenSignAlg.yaml
    ServiceUpdateApiRequestBodySupportedClaimTypesItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedClaimTypesItems.yaml
    ServiceUpdateApiRequestBodySupportedBackchannelTokenDeliveryModesItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedBackchannelTokenDeliveryModesItems.yaml
    ServiceUpdateApiRequestBodyUserCodeCharset:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodyUserCodeCharset.yaml
    ServiceUpdateApiRequestBodyVerifiedClaimsValidationSchemaSet:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodyVerifiedClaimsValidationSchemaSet.yaml
    ServiceUpdateApiRequestBodySupportedAttachmentsItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedAttachmentsItems.yaml
    ServiceUpdateApiRequestBodySupportedClientRegistrationTypesItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedClientRegistrationTypesItems.yaml
    ServiceUpdateApiRequestBodySupportedPromptValuesItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodySupportedPromptValuesItems.yaml
    ServiceUpdateApiRequestBodyFapiModesItems:
      $ref: en/ServiceUpdateApiRequestBody/ServiceUpdateApiRequestBodyFapiModesItems.yaml
    ClientGetApiResponse200JsonClientType:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonClientType.yaml
    ClientGetApiResponse200JsonApplicationType:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonApplicationType.yaml
    ClientGetApiResponse200JsonGrantTypesItems:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonGrantTypesItems.yaml
    ClientGetApiResponse200JsonResponseTypesItems:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonResponseTypesItems.yaml
    ClientGetApiResponse200JsonAuthorizationSignAlg:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonAuthorizationSignAlg.yaml
    ClientGetApiResponse200JsonAuthorizationEncryptionAlg:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonAuthorizationEncryptionAlg.yaml
    ClientGetApiResponse200JsonAuthorizationEncryptionEnc:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonAuthorizationEncryptionEnc.yaml
    ClientGetApiResponse200JsonTokenAuthMethod:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonTokenAuthMethod.yaml
    ClientGetApiResponse200JsonTokenAuthSignAlg:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonTokenAuthSignAlg.yaml
    ClientGetApiResponse200JsonRequestSignAlg:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonRequestSignAlg.yaml
    ClientGetApiResponse200JsonRequestEncryptionAlg:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonRequestEncryptionAlg.yaml
    ClientGetApiResponse200JsonRequestEncryptionEnc:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonRequestEncryptionEnc.yaml
    ClientGetApiResponse200JsonIdTokenSignAlg:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonIdTokenSignAlg.yaml
    ClientGetApiResponse200JsonIdTokenEncryptionAlg:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonIdTokenEncryptionAlg.yaml
    ClientGetApiResponse200JsonIdTokenEncryptionEnc:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonIdTokenEncryptionEnc.yaml
    ClientGetApiResponse200JsonSubjectType:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonSubjectType.yaml
    ClientGetApiResponse200JsonUserInfoSignAlg:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonUserInfoSignAlg.yaml
    ClientGetApiResponse200JsonUserInfoEncryptionAlg:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonUserInfoEncryptionAlg.yaml
    ClientGetApiResponse200JsonUserInfoEncryptionEnc:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonUserInfoEncryptionEnc.yaml
    ClientGetApiResponse200JsonBcRequestSignAlg:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonBcRequestSignAlg.yaml
    ClientGetApiResponse200JsonClientRegistrationTypesItems:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonClientRegistrationTypesItems.yaml
    ClientGetApiResponse200JsonFapiModesItems:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonFapiModesItems.yaml
    ClientGetApiResponse200JsonResponseModesItems:
      $ref: en/ClientGetApiResponse200Json/ClientGetApiResponse200JsonResponseModesItems.yaml
    ClientGetListApiResponse200JsonClientsItemsClientType:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsClientType.yaml
    ClientGetListApiResponse200JsonClientsItemsApplicationType:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsApplicationType.yaml
    ClientGetListApiResponse200JsonClientsItemsGrantTypesItems:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsGrantTypesItems.yaml
    ClientGetListApiResponse200JsonClientsItemsResponseTypesItems:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsResponseTypesItems.yaml
    ClientGetListApiResponse200JsonClientsItemsAuthorizationSignAlg:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsAuthorizationSignAlg.yaml
    ClientGetListApiResponse200JsonClientsItemsAuthorizationEncryptionAlg:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsAuthorizationEncryptionAlg.yaml
    ClientGetListApiResponse200JsonClientsItemsAuthorizationEncryptionEnc:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsAuthorizationEncryptionEnc.yaml
    ClientGetListApiResponse200JsonClientsItemsTokenAuthMethod:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsTokenAuthMethod.yaml
    ClientGetListApiResponse200JsonClientsItemsTokenAuthSignAlg:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsTokenAuthSignAlg.yaml
    ClientGetListApiResponse200JsonClientsItemsRequestSignAlg:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsRequestSignAlg.yaml
    ClientGetListApiResponse200JsonClientsItemsRequestEncryptionAlg:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsRequestEncryptionAlg.yaml
    ClientGetListApiResponse200JsonClientsItemsRequestEncryptionEnc:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsRequestEncryptionEnc.yaml
    ClientGetListApiResponse200JsonClientsItemsIdTokenSignAlg:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsIdTokenSignAlg.yaml
    ClientGetListApiResponse200JsonClientsItemsIdTokenEncryptionAlg:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsIdTokenEncryptionAlg.yaml
    ClientGetListApiResponse200JsonClientsItemsIdTokenEncryptionEnc:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsIdTokenEncryptionEnc.yaml
    ClientGetListApiResponse200JsonClientsItemsSubjectType:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsSubjectType.yaml
    ClientGetListApiResponse200JsonClientsItemsUserInfoSignAlg:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsUserInfoSignAlg.yaml
    ClientGetListApiResponse200JsonClientsItemsUserInfoEncryptionAlg:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsUserInfoEncryptionAlg.yaml
    ClientGetListApiResponse200JsonClientsItemsUserInfoEncryptionEnc:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsUserInfoEncryptionEnc.yaml
    ClientGetListApiResponse200JsonClientsItemsBcRequestSignAlg:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsBcRequestSignAlg.yaml
    ClientGetListApiResponse200JsonClientsItemsClientRegistrationTypesItems:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsClientRegistrationTypesItems.yaml
    ClientGetListApiResponse200JsonClientsItemsFapiModesItems:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsFapiModesItems.yaml
    ClientGetListApiResponse200JsonClientsItemsResponseModesItems:
      $ref: en/ClientGetListApiResponse200Json/ClientGetListApiResponse200JsonClientsItems/ClientGetListApiResponse200JsonClientsItemsResponseModesItems.yaml
    ClientCreateApiResponse200JsonClientType:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonClientType.yaml
    ClientCreateApiResponse200JsonApplicationType:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonApplicationType.yaml
    ClientCreateApiResponse200JsonGrantTypesItems:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonGrantTypesItems.yaml
    ClientCreateApiResponse200JsonResponseTypesItems:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonResponseTypesItems.yaml
    ClientCreateApiResponse200JsonAuthorizationSignAlg:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonAuthorizationSignAlg.yaml
    ClientCreateApiResponse200JsonAuthorizationEncryptionAlg:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonAuthorizationEncryptionAlg.yaml
    ClientCreateApiResponse200JsonAuthorizationEncryptionEnc:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonAuthorizationEncryptionEnc.yaml
    ClientCreateApiResponse200JsonTokenAuthMethod:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonTokenAuthMethod.yaml
    ClientCreateApiResponse200JsonTokenAuthSignAlg:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonTokenAuthSignAlg.yaml
    ClientCreateApiResponse200JsonRequestSignAlg:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonRequestSignAlg.yaml
    ClientCreateApiResponse200JsonRequestEncryptionAlg:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonRequestEncryptionAlg.yaml
    ClientCreateApiResponse200JsonRequestEncryptionEnc:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonRequestEncryptionEnc.yaml
    ClientCreateApiResponse200JsonIdTokenSignAlg:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonIdTokenSignAlg.yaml
    ClientCreateApiResponse200JsonIdTokenEncryptionAlg:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonIdTokenEncryptionAlg.yaml
    ClientCreateApiResponse200JsonIdTokenEncryptionEnc:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonIdTokenEncryptionEnc.yaml
    ClientCreateApiResponse200JsonSubjectType:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonSubjectType.yaml
    ClientCreateApiResponse200JsonUserInfoSignAlg:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonUserInfoSignAlg.yaml
    ClientCreateApiResponse200JsonUserInfoEncryptionAlg:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonUserInfoEncryptionAlg.yaml
    ClientCreateApiResponse200JsonUserInfoEncryptionEnc:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonUserInfoEncryptionEnc.yaml
    ClientCreateApiResponse200JsonBcRequestSignAlg:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonBcRequestSignAlg.yaml
    ClientCreateApiResponse200JsonClientRegistrationTypesItems:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonClientRegistrationTypesItems.yaml
    ClientCreateApiResponse200JsonFapiModesItems:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonFapiModesItems.yaml
    ClientCreateApiResponse200JsonResponseModesItems:
      $ref: en/ClientCreateApiResponse200Json/ClientCreateApiResponse200JsonResponseModesItems.yaml
    ClientCreateApiRequestBodyJsonClientType:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonClientType.yaml
    ClientCreateApiRequestBodyJsonApplicationType:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonApplicationType.yaml
    ClientCreateApiRequestBodyJsonGrantTypesItems:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonGrantTypesItems.yaml
    ClientCreateApiRequestBodyJsonResponseTypesItems:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonResponseTypesItems.yaml
    ClientCreateApiRequestBodyJsonAuthorizationSignAlg:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonAuthorizationSignAlg.yaml
    ClientCreateApiRequestBodyJsonAuthorizationEncryptionAlg:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonAuthorizationEncryptionAlg.yaml
    ClientCreateApiRequestBodyJsonAuthorizationEncryptionEnc:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonAuthorizationEncryptionEnc.yaml
    ClientCreateApiRequestBodyJsonTokenAuthMethod:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonTokenAuthMethod.yaml
    ClientCreateApiRequestBodyJsonTokenAuthSignAlg:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonTokenAuthSignAlg.yaml
    ClientCreateApiRequestBodyJsonRequestSignAlg:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonRequestSignAlg.yaml
    ClientCreateApiRequestBodyJsonRequestEncryptionAlg:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonRequestEncryptionAlg.yaml
    ClientCreateApiRequestBodyJsonRequestEncryptionEnc:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonRequestEncryptionEnc.yaml
    ClientCreateApiRequestBodyJsonIdTokenSignAlg:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonIdTokenSignAlg.yaml
    ClientCreateApiRequestBodyJsonIdTokenEncryptionAlg:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonIdTokenEncryptionAlg.yaml
    ClientCreateApiRequestBodyJsonIdTokenEncryptionEnc:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonIdTokenEncryptionEnc.yaml
    ClientCreateApiRequestBodyJsonSubjectType:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonSubjectType.yaml
    ClientCreateApiRequestBodyJsonUserInfoSignAlg:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonUserInfoSignAlg.yaml
    ClientCreateApiRequestBodyJsonUserInfoEncryptionAlg:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonUserInfoEncryptionAlg.yaml
    ClientCreateApiRequestBodyJsonUserInfoEncryptionEnc:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonUserInfoEncryptionEnc.yaml
    ClientCreateApiRequestBodyJsonBcRequestSignAlg:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonBcRequestSignAlg.yaml
    ClientCreateApiRequestBodyJsonClientRegistrationTypesItems:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonClientRegistrationTypesItems.yaml
    ClientCreateApiRequestBodyJsonFapiModesItems:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonFapiModesItems.yaml
    ClientCreateApiRequestBodyJsonResponseModesItems:
      $ref: en/ClientCreateApiRequestBodyJson/ClientCreateApiRequestBodyJsonResponseModesItems.yaml
    ClientUpdateApiResponse200JsonClientType:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonClientType.yaml
    ClientUpdateApiResponse200JsonApplicationType:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonApplicationType.yaml
    ClientUpdateApiResponse200JsonGrantTypesItems:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonGrantTypesItems.yaml
    ClientUpdateApiResponse200JsonResponseTypesItems:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonResponseTypesItems.yaml
    ClientUpdateApiResponse200JsonAuthorizationSignAlg:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonAuthorizationSignAlg.yaml
    ClientUpdateApiResponse200JsonAuthorizationEncryptionAlg:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonAuthorizationEncryptionAlg.yaml
    ClientUpdateApiResponse200JsonAuthorizationEncryptionEnc:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonAuthorizationEncryptionEnc.yaml
    ClientUpdateApiResponse200JsonTokenAuthMethod:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonTokenAuthMethod.yaml
    ClientUpdateApiResponse200JsonTokenAuthSignAlg:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonTokenAuthSignAlg.yaml
    ClientUpdateApiResponse200JsonRequestSignAlg:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonRequestSignAlg.yaml
    ClientUpdateApiResponse200JsonRequestEncryptionAlg:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonRequestEncryptionAlg.yaml
    ClientUpdateApiResponse200JsonRequestEncryptionEnc:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonRequestEncryptionEnc.yaml
    ClientUpdateApiResponse200JsonIdTokenSignAlg:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonIdTokenSignAlg.yaml
    ClientUpdateApiResponse200JsonIdTokenEncryptionAlg:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonIdTokenEncryptionAlg.yaml
    ClientUpdateApiResponse200JsonIdTokenEncryptionEnc:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonIdTokenEncryptionEnc.yaml
    ClientUpdateApiResponse200JsonSubjectType:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonSubjectType.yaml
    ClientUpdateApiResponse200JsonUserInfoSignAlg:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonUserInfoSignAlg.yaml
    ClientUpdateApiResponse200JsonUserInfoEncryptionAlg:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonUserInfoEncryptionAlg.yaml
    ClientUpdateApiResponse200JsonUserInfoEncryptionEnc:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonUserInfoEncryptionEnc.yaml
    ClientUpdateApiResponse200JsonBcRequestSignAlg:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonBcRequestSignAlg.yaml
    ClientUpdateApiResponse200JsonClientRegistrationTypesItems:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonClientRegistrationTypesItems.yaml
    ClientUpdateApiResponse200JsonFapiModesItems:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonFapiModesItems.yaml
    ClientUpdateApiResponse200JsonResponseModesItems:
      $ref: en/ClientUpdateApiResponse200Json/ClientUpdateApiResponse200JsonResponseModesItems.yaml
    ClientUpdateApiRequestBodyJsonClientType:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonClientType.yaml
    ClientUpdateApiRequestBodyJsonApplicationType:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonApplicationType.yaml
    ClientUpdateApiRequestBodyJsonGrantTypesItems:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonGrantTypesItems.yaml
    ClientUpdateApiRequestBodyJsonResponseTypesItems:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonResponseTypesItems.yaml
    ClientUpdateApiRequestBodyJsonAuthorizationSignAlg:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonAuthorizationSignAlg.yaml
    ClientUpdateApiRequestBodyJsonAuthorizationEncryptionAlg:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonAuthorizationEncryptionAlg.yaml
    ClientUpdateApiRequestBodyJsonAuthorizationEncryptionEnc:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonAuthorizationEncryptionEnc.yaml
    ClientUpdateApiRequestBodyJsonTokenAuthMethod:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonTokenAuthMethod.yaml
    ClientUpdateApiRequestBodyJsonTokenAuthSignAlg:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonTokenAuthSignAlg.yaml
    ClientUpdateApiRequestBodyJsonRequestSignAlg:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonRequestSignAlg.yaml
    ClientUpdateApiRequestBodyJsonRequestEncryptionAlg:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonRequestEncryptionAlg.yaml
    ClientUpdateApiRequestBodyJsonRequestEncryptionEnc:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonRequestEncryptionEnc.yaml
    ClientUpdateApiRequestBodyJsonIdTokenSignAlg:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonIdTokenSignAlg.yaml
    ClientUpdateApiRequestBodyJsonIdTokenEncryptionAlg:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonIdTokenEncryptionAlg.yaml
    ClientUpdateApiRequestBodyJsonIdTokenEncryptionEnc:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonIdTokenEncryptionEnc.yaml
    ClientUpdateApiRequestBodyJsonSubjectType:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonSubjectType.yaml
    ClientUpdateApiRequestBodyJsonUserInfoSignAlg:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonUserInfoSignAlg.yaml
    ClientUpdateApiRequestBodyJsonUserInfoEncryptionAlg:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonUserInfoEncryptionAlg.yaml
    ClientUpdateApiRequestBodyJsonUserInfoEncryptionEnc:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonUserInfoEncryptionEnc.yaml
    ClientUpdateApiRequestBodyJsonBcRequestSignAlg:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonBcRequestSignAlg.yaml
    ClientUpdateApiRequestBodyJsonClientRegistrationTypesItems:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonClientRegistrationTypesItems.yaml
    ClientUpdateApiRequestBodyJsonFapiModesItems:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonFapiModesItems.yaml
    ClientUpdateApiRequestBodyJsonResponseModesItems:
      $ref: en/ClientUpdateApiRequestBodyJson/ClientUpdateApiRequestBodyJsonResponseModesItems.yaml
    ClientUpdateApiRequestBodyClientType:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyClientType.yaml
    ClientUpdateApiRequestBodyApplicationType:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyApplicationType.yaml
    ClientUpdateApiRequestBodyGrantTypesItems:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyGrantTypesItems.yaml
    ClientUpdateApiRequestBodyResponseTypesItems:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyResponseTypesItems.yaml
    ClientUpdateApiRequestBodyAuthorizationSignAlg:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyAuthorizationSignAlg.yaml
    ClientUpdateApiRequestBodyAuthorizationEncryptionAlg:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyAuthorizationEncryptionAlg.yaml
    ClientUpdateApiRequestBodyAuthorizationEncryptionEnc:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyAuthorizationEncryptionEnc.yaml
    ClientUpdateApiRequestBodyTokenAuthMethod:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyTokenAuthMethod.yaml
    ClientUpdateApiRequestBodyTokenAuthSignAlg:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyTokenAuthSignAlg.yaml
    ClientUpdateApiRequestBodyRequestSignAlg:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyRequestSignAlg.yaml
    ClientUpdateApiRequestBodyRequestEncryptionAlg:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyRequestEncryptionAlg.yaml
    ClientUpdateApiRequestBodyRequestEncryptionEnc:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyRequestEncryptionEnc.yaml
    ClientUpdateApiRequestBodyIdTokenSignAlg:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyIdTokenSignAlg.yaml
    ClientUpdateApiRequestBodyIdTokenEncryptionAlg:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyIdTokenEncryptionAlg.yaml
    ClientUpdateApiRequestBodyIdTokenEncryptionEnc:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyIdTokenEncryptionEnc.yaml
    ClientUpdateApiRequestBodySubjectType:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodySubjectType.yaml
    ClientUpdateApiRequestBodyUserInfoSignAlg:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyUserInfoSignAlg.yaml
    ClientUpdateApiRequestBodyUserInfoEncryptionAlg:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyUserInfoEncryptionAlg.yaml
    ClientUpdateApiRequestBodyUserInfoEncryptionEnc:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyUserInfoEncryptionEnc.yaml
    ClientUpdateApiRequestBodyBcRequestSignAlg:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyBcRequestSignAlg.yaml
    ClientUpdateApiRequestBodyClientRegistrationTypesItems:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyClientRegistrationTypesItems.yaml
    ClientUpdateApiRequestBodyFapiModesItems:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyFapiModesItems.yaml
    ClientUpdateApiRequestBodyResponseModesItems:
      $ref: en/ClientUpdateApiRequestBody/ClientUpdateApiRequestBodyResponseModesItems.yaml
    ClientAuthorizationGetListApiResponse200JsonClientsItemsClientType:
      $ref: en/ClientAuthorizationGetListApiResponse200Json/ClientAuthorizationGetListApiResponse200JsonClientsItems/ClientAuthorizationGetListApiResponse200JsonClientsItemsClientType.yaml
    AuthAuthorizationApiResponse200JsonAction:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonAction.yaml
    AuthAuthorizationApiResponse200JsonDisplay:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonDisplay.yaml
    AuthAuthorizationApiResponse200JsonPromptsItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonPromptsItems.yaml
    AuthAuthorizationApiResponse200JsonLowestPrompt:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonLowestPrompt.yaml
    AuthAuthorizationApiResponse200JsonGmAction:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonGmAction.yaml
    AuthAuthorizationApiResponse200JsonClientClientType:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonClient/AuthAuthorizationApiResponse200JsonClientClientType.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedGrantTypesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedGrantTypesItems.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedResponseTypesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedResponseTypesItems.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedServiceProfilesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedServiceProfilesItems.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedDisplaysItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedDisplaysItems.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedTokenAuthMethodsItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedTokenAuthMethodsItems.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedRevocationAuthMethodsItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedRevocationAuthMethodsItems.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedIntrospectionAuthMethodsItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedIntrospectionAuthMethodsItems.yaml
    AuthAuthorizationApiResponse200JsonServiceAccessTokenSignAlg:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceAccessTokenSignAlg.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedClaimTypesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedClaimTypesItems.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedBackchannelTokenDeliveryModesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedBackchannelTokenDeliveryModesItems.yaml
    AuthAuthorizationApiResponse200JsonServiceUserCodeCharset:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceUserCodeCharset.yaml
    AuthAuthorizationApiResponse200JsonServiceVerifiedClaimsValidationSchemaSet:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceVerifiedClaimsValidationSchemaSet.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedAttachmentsItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedAttachmentsItems.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedClientRegistrationTypesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedClientRegistrationTypesItems.yaml
    AuthAuthorizationApiResponse200JsonServiceSupportedPromptValuesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceSupportedPromptValuesItems.yaml
    AuthAuthorizationApiResponse200JsonServiceFapiModesItems:
      $ref: en/AuthAuthorizationApiResponse200Json/AuthAuthorizationApiResponse200JsonService/AuthAuthorizationApiResponse200JsonServiceFapiModesItems.yaml
    AuthAuthorizationFailApiResponse200JsonAction:
      $ref: en/AuthAuthorizationFailApiResponse200Json/AuthAuthorizationFailApiResponse200JsonAction.yaml
    AuthAuthorizationFailApiRequestBodyJsonReason:
      $ref: en/AuthAuthorizationFailApiRequestBodyJson/AuthAuthorizationFailApiRequestBodyJsonReason.yaml
    AuthAuthorizationFailApiRequestBodyReason:
      $ref: en/AuthAuthorizationFailApiRequestBody/AuthAuthorizationFailApiRequestBodyReason.yaml
    AuthAuthorizationIssueApiResponse200JsonAction:
      $ref: en/AuthAuthorizationIssueApiResponse200Json/AuthAuthorizationIssueApiResponse200JsonAction.yaml
    PushedAuthReqApiResponse200JsonAction:
      $ref: en/PushedAuthReqApiResponse200Json/PushedAuthReqApiResponse200JsonAction.yaml
    PushedAuthReqApiResponse200JsonClientAuthMethod:
      $ref: en/PushedAuthReqApiResponse200Json/PushedAuthReqApiResponse200JsonClientAuthMethod.yaml
    AuthTokenApiResponse200JsonAction:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonAction.yaml
    AuthTokenApiResponse200JsonRequestedTokenType:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonRequestedTokenType.yaml
    AuthTokenApiResponse200JsonSubjectTokenType:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonSubjectTokenType.yaml
    AuthTokenApiResponse200JsonActorTokenType:
      $ref: en/AuthTokenApiResponse200Json/AuthTokenApiResponse200JsonActorTokenType.yaml
    AuthTokenFailApiResponse200JsonAction:
      $ref: en/AuthTokenFailApiResponse200Json/AuthTokenFailApiResponse200JsonAction.yaml
    AuthTokenFailApiRequestBodyJsonReason:
      $ref: en/AuthTokenFailApiRequestBodyJson/AuthTokenFailApiRequestBodyJsonReason.yaml
    AuthTokenFailApiRequestBodyReason:
      $ref: en/AuthTokenFailApiRequestBody/AuthTokenFailApiRequestBodyReason.yaml
    AuthTokenIssueApiResponse200JsonAction:
      $ref: en/AuthTokenIssueApiResponse200Json/AuthTokenIssueApiResponse200JsonAction.yaml
    AuthIntrospectionApiResponse200JsonAction:
      $ref: en/AuthIntrospectionApiResponse200Json/AuthIntrospectionApiResponse200JsonAction.yaml
    AuthIntrospectionApiResponse200JsonGrantType:
      $ref: en/AuthIntrospectionApiResponse200Json/AuthIntrospectionApiResponse200JsonGrantType.yaml
    AuthIntrospectionStandardApiResponse200JsonAction:
      $ref: en/AuthIntrospectionStandardApiResponse200Json/AuthIntrospectionStandardApiResponse200JsonAction.yaml
    AuthRevocationApiResponse200JsonAction:
      $ref: en/AuthRevocationApiResponse200Json/AuthRevocationApiResponse200JsonAction.yaml
    AuthUserinfoApiResponse200JsonAction:
      $ref: en/AuthUserinfoApiResponse200Json/AuthUserinfoApiResponse200JsonAction.yaml
    AuthUserinfoIssueApiResponse200JsonAction:
      $ref: en/AuthUserinfoIssueApiResponse200Json/AuthUserinfoIssueApiResponse200JsonAction.yaml
    IdtokenReissueApiResponse200JsonAction:
      $ref: en/IdtokenReissueApiResponse200Json/IdtokenReissueApiResponse200JsonAction.yaml
    GrantMApiResponse200JsonAction:
      $ref: en/GrantMApiResponse200Json/GrantMApiResponse200JsonAction.yaml
    GrantMApiRequestBodyJsonGmAction:
      $ref: en/GrantMApiRequestBodyJson/GrantMApiRequestBodyJsonGmAction.yaml
    ClientRegistrationApiResponse200JsonAction:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonAction.yaml
    ClientRegistrationApiResponse200JsonClientClientType:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientClientType.yaml
    ClientRegistrationApiResponse200JsonClientApplicationType:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientApplicationType.yaml
    ClientRegistrationApiResponse200JsonClientGrantTypesItems:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientGrantTypesItems.yaml
    ClientRegistrationApiResponse200JsonClientResponseTypesItems:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientResponseTypesItems.yaml
    ClientRegistrationApiResponse200JsonClientAuthorizationSignAlg:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientAuthorizationSignAlg.yaml
    ClientRegistrationApiResponse200JsonClientAuthorizationEncryptionAlg:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientAuthorizationEncryptionAlg.yaml
    ClientRegistrationApiResponse200JsonClientAuthorizationEncryptionEnc:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientAuthorizationEncryptionEnc.yaml
    ClientRegistrationApiResponse200JsonClientTokenAuthMethod:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientTokenAuthMethod.yaml
    ClientRegistrationApiResponse200JsonClientTokenAuthSignAlg:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientTokenAuthSignAlg.yaml
    ClientRegistrationApiResponse200JsonClientRequestSignAlg:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientRequestSignAlg.yaml
    ClientRegistrationApiResponse200JsonClientRequestEncryptionAlg:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientRequestEncryptionAlg.yaml
    ClientRegistrationApiResponse200JsonClientRequestEncryptionEnc:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientRequestEncryptionEnc.yaml
    ClientRegistrationApiResponse200JsonClientIdTokenSignAlg:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientIdTokenSignAlg.yaml
    ClientRegistrationApiResponse200JsonClientIdTokenEncryptionAlg:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientIdTokenEncryptionAlg.yaml
    ClientRegistrationApiResponse200JsonClientIdTokenEncryptionEnc:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientIdTokenEncryptionEnc.yaml
    ClientRegistrationApiResponse200JsonClientSubjectType:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientSubjectType.yaml
    ClientRegistrationApiResponse200JsonClientUserInfoSignAlg:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientUserInfoSignAlg.yaml
    ClientRegistrationApiResponse200JsonClientUserInfoEncryptionAlg:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientUserInfoEncryptionAlg.yaml
    ClientRegistrationApiResponse200JsonClientUserInfoEncryptionEnc:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientUserInfoEncryptionEnc.yaml
    ClientRegistrationApiResponse200JsonClientBcRequestSignAlg:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientBcRequestSignAlg.yaml
    ClientRegistrationApiResponse200JsonClientClientRegistrationTypesItems:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientClientRegistrationTypesItems.yaml
    ClientRegistrationApiResponse200JsonClientFapiModesItems:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientFapiModesItems.yaml
    ClientRegistrationApiResponse200JsonClientResponseModesItems:
      $ref: en/ClientRegistrationApiResponse200Json/ClientRegistrationApiResponse200JsonClient/ClientRegistrationApiResponse200JsonClientResponseModesItems.yaml
    ClientRegistrationGetApiResponse200JsonAction:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonAction.yaml
    ClientRegistrationGetApiResponse200JsonClientClientType:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientClientType.yaml
    ClientRegistrationGetApiResponse200JsonClientApplicationType:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientApplicationType.yaml
    ClientRegistrationGetApiResponse200JsonClientGrantTypesItems:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientGrantTypesItems.yaml
    ClientRegistrationGetApiResponse200JsonClientResponseTypesItems:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientResponseTypesItems.yaml
    ClientRegistrationGetApiResponse200JsonClientAuthorizationSignAlg:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientAuthorizationSignAlg.yaml
    ClientRegistrationGetApiResponse200JsonClientAuthorizationEncryptionAlg:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientAuthorizationEncryptionAlg.yaml
    ClientRegistrationGetApiResponse200JsonClientAuthorizationEncryptionEnc:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientAuthorizationEncryptionEnc.yaml
    ClientRegistrationGetApiResponse200JsonClientTokenAuthMethod:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientTokenAuthMethod.yaml
    ClientRegistrationGetApiResponse200JsonClientTokenAuthSignAlg:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientTokenAuthSignAlg.yaml
    ClientRegistrationGetApiResponse200JsonClientRequestSignAlg:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientRequestSignAlg.yaml
    ClientRegistrationGetApiResponse200JsonClientRequestEncryptionAlg:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientRequestEncryptionAlg.yaml
    ClientRegistrationGetApiResponse200JsonClientRequestEncryptionEnc:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientRequestEncryptionEnc.yaml
    ClientRegistrationGetApiResponse200JsonClientIdTokenSignAlg:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientIdTokenSignAlg.yaml
    ClientRegistrationGetApiResponse200JsonClientIdTokenEncryptionAlg:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientIdTokenEncryptionAlg.yaml
    ClientRegistrationGetApiResponse200JsonClientIdTokenEncryptionEnc:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientIdTokenEncryptionEnc.yaml
    ClientRegistrationGetApiResponse200JsonClientSubjectType:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientSubjectType.yaml
    ClientRegistrationGetApiResponse200JsonClientUserInfoSignAlg:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientUserInfoSignAlg.yaml
    ClientRegistrationGetApiResponse200JsonClientUserInfoEncryptionAlg:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientUserInfoEncryptionAlg.yaml
    ClientRegistrationGetApiResponse200JsonClientUserInfoEncryptionEnc:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientUserInfoEncryptionEnc.yaml
    ClientRegistrationGetApiResponse200JsonClientBcRequestSignAlg:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientBcRequestSignAlg.yaml
    ClientRegistrationGetApiResponse200JsonClientClientRegistrationTypesItems:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientClientRegistrationTypesItems.yaml
    ClientRegistrationGetApiResponse200JsonClientFapiModesItems:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientFapiModesItems.yaml
    ClientRegistrationGetApiResponse200JsonClientResponseModesItems:
      $ref: en/ClientRegistrationGetApiResponse200Json/ClientRegistrationGetApiResponse200JsonClient/ClientRegistrationGetApiResponse200JsonClientResponseModesItems.yaml
    ClientRegistrationUpdateApiResponse200JsonAction:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonAction.yaml
    ClientRegistrationUpdateApiResponse200JsonClientClientType:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientClientType.yaml
    ClientRegistrationUpdateApiResponse200JsonClientApplicationType:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientApplicationType.yaml
    ClientRegistrationUpdateApiResponse200JsonClientGrantTypesItems:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientGrantTypesItems.yaml
    ClientRegistrationUpdateApiResponse200JsonClientResponseTypesItems:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientResponseTypesItems.yaml
    ClientRegistrationUpdateApiResponse200JsonClientAuthorizationSignAlg:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientAuthorizationSignAlg.yaml
    ClientRegistrationUpdateApiResponse200JsonClientAuthorizationEncryptionAlg:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientAuthorizationEncryptionAlg.yaml
    ClientRegistrationUpdateApiResponse200JsonClientAuthorizationEncryptionEnc:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientAuthorizationEncryptionEnc.yaml
    ClientRegistrationUpdateApiResponse200JsonClientTokenAuthMethod:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientTokenAuthMethod.yaml
    ClientRegistrationUpdateApiResponse200JsonClientTokenAuthSignAlg:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientTokenAuthSignAlg.yaml
    ClientRegistrationUpdateApiResponse200JsonClientRequestSignAlg:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientRequestSignAlg.yaml
    ClientRegistrationUpdateApiResponse200JsonClientRequestEncryptionAlg:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientRequestEncryptionAlg.yaml
    ClientRegistrationUpdateApiResponse200JsonClientRequestEncryptionEnc:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientRequestEncryptionEnc.yaml
    ClientRegistrationUpdateApiResponse200JsonClientIdTokenSignAlg:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientIdTokenSignAlg.yaml
    ClientRegistrationUpdateApiResponse200JsonClientIdTokenEncryptionAlg:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientIdTokenEncryptionAlg.yaml
    ClientRegistrationUpdateApiResponse200JsonClientIdTokenEncryptionEnc:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientIdTokenEncryptionEnc.yaml
    ClientRegistrationUpdateApiResponse200JsonClientSubjectType:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientSubjectType.yaml
    ClientRegistrationUpdateApiResponse200JsonClientUserInfoSignAlg:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientUserInfoSignAlg.yaml
    ClientRegistrationUpdateApiResponse200JsonClientUserInfoEncryptionAlg:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientUserInfoEncryptionAlg.yaml
    ClientRegistrationUpdateApiResponse200JsonClientUserInfoEncryptionEnc:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientUserInfoEncryptionEnc.yaml
    ClientRegistrationUpdateApiResponse200JsonClientBcRequestSignAlg:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientBcRequestSignAlg.yaml
    ClientRegistrationUpdateApiResponse200JsonClientClientRegistrationTypesItems:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientClientRegistrationTypesItems.yaml
    ClientRegistrationUpdateApiResponse200JsonClientFapiModesItems:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientFapiModesItems.yaml
    ClientRegistrationUpdateApiResponse200JsonClientResponseModesItems:
      $ref: en/ClientRegistrationUpdateApiResponse200Json/ClientRegistrationUpdateApiResponse200JsonClient/ClientRegistrationUpdateApiResponse200JsonClientResponseModesItems.yaml
    ClientRegistrationDeleteApiResponse200JsonAction:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonAction.yaml
    ClientRegistrationDeleteApiResponse200JsonClientClientType:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientClientType.yaml
    ClientRegistrationDeleteApiResponse200JsonClientApplicationType:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientApplicationType.yaml
    ClientRegistrationDeleteApiResponse200JsonClientGrantTypesItems:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientGrantTypesItems.yaml
    ClientRegistrationDeleteApiResponse200JsonClientResponseTypesItems:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientResponseTypesItems.yaml
    ClientRegistrationDeleteApiResponse200JsonClientAuthorizationSignAlg:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientAuthorizationSignAlg.yaml
    ClientRegistrationDeleteApiResponse200JsonClientAuthorizationEncryptionAlg:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientAuthorizationEncryptionAlg.yaml
    ClientRegistrationDeleteApiResponse200JsonClientAuthorizationEncryptionEnc:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientAuthorizationEncryptionEnc.yaml
    ClientRegistrationDeleteApiResponse200JsonClientTokenAuthMethod:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientTokenAuthMethod.yaml
    ClientRegistrationDeleteApiResponse200JsonClientTokenAuthSignAlg:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientTokenAuthSignAlg.yaml
    ClientRegistrationDeleteApiResponse200JsonClientRequestSignAlg:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientRequestSignAlg.yaml
    ClientRegistrationDeleteApiResponse200JsonClientRequestEncryptionAlg:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientRequestEncryptionAlg.yaml
    ClientRegistrationDeleteApiResponse200JsonClientRequestEncryptionEnc:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientRequestEncryptionEnc.yaml
    ClientRegistrationDeleteApiResponse200JsonClientIdTokenSignAlg:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientIdTokenSignAlg.yaml
    ClientRegistrationDeleteApiResponse200JsonClientIdTokenEncryptionAlg:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientIdTokenEncryptionAlg.yaml
    ClientRegistrationDeleteApiResponse200JsonClientIdTokenEncryptionEnc:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientIdTokenEncryptionEnc.yaml
    ClientRegistrationDeleteApiResponse200JsonClientSubjectType:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientSubjectType.yaml
    ClientRegistrationDeleteApiResponse200JsonClientUserInfoSignAlg:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientUserInfoSignAlg.yaml
    ClientRegistrationDeleteApiResponse200JsonClientUserInfoEncryptionAlg:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientUserInfoEncryptionAlg.yaml
    ClientRegistrationDeleteApiResponse200JsonClientUserInfoEncryptionEnc:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientUserInfoEncryptionEnc.yaml
    ClientRegistrationDeleteApiResponse200JsonClientBcRequestSignAlg:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientBcRequestSignAlg.yaml
    ClientRegistrationDeleteApiResponse200JsonClientClientRegistrationTypesItems:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientClientRegistrationTypesItems.yaml
    ClientRegistrationDeleteApiResponse200JsonClientFapiModesItems:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientFapiModesItems.yaml
    ClientRegistrationDeleteApiResponse200JsonClientResponseModesItems:
      $ref: en/ClientRegistrationDeleteApiResponse200Json/ClientRegistrationDeleteApiResponse200JsonClient/ClientRegistrationDeleteApiResponse200JsonClientResponseModesItems.yaml
    BackchannelAuthenticationApiResponse200JsonAction:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonAction.yaml
    BackchannelAuthenticationApiResponse200JsonDeliveryMode:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonDeliveryMode.yaml
    BackchannelAuthenticationApiResponse200JsonGmAction:
      $ref: en/BackchannelAuthenticationApiResponse200Json/BackchannelAuthenticationApiResponse200JsonGmAction.yaml
    BackchannelAuthenticationIssueApiResponse200JsonAction:
      $ref: en/BackchannelAuthenticationIssueApiResponse200Json/BackchannelAuthenticationIssueApiResponse200JsonAction.yaml
    BackchannelAuthenticationFailApiResponse200JsonAction:
      $ref: en/BackchannelAuthenticationFailApiResponse200Json/BackchannelAuthenticationFailApiResponse200JsonAction.yaml
    BackchannelAuthenticationFailApiRequestBodyJsonReason:
      $ref: en/BackchannelAuthenticationFailApiRequestBodyJson/BackchannelAuthenticationFailApiRequestBodyJsonReason.yaml
    BackchannelAuthenticationFailApiRequestBodyReason:
      $ref: en/BackchannelAuthenticationFailApiRequestBody/BackchannelAuthenticationFailApiRequestBodyReason.yaml
    BackchannelAuthenticationCompleteApiResponse200JsonAction:
      $ref: en/BackchannelAuthenticationCompleteApiResponse200Json/BackchannelAuthenticationCompleteApiResponse200JsonAction.yaml
    BackchannelAuthenticationCompleteApiResponse200JsonDeliveryMode:
      $ref: en/BackchannelAuthenticationCompleteApiResponse200Json/BackchannelAuthenticationCompleteApiResponse200JsonDeliveryMode.yaml
    BackchannelAuthenticationCompleteApiRequestBodyJsonResult:
      $ref: en/BackchannelAuthenticationCompleteApiRequestBodyJson/BackchannelAuthenticationCompleteApiRequestBodyJsonResult.yaml
    BackchannelAuthenticationCompleteApiRequestBodyResult:
      $ref: en/BackchannelAuthenticationCompleteApiRequestBody/BackchannelAuthenticationCompleteApiRequestBodyResult.yaml
    DeviceAuthorizationApiResponse200JsonAction:
      $ref: en/DeviceAuthorizationApiResponse200Json/DeviceAuthorizationApiResponse200JsonAction.yaml
    DeviceAuthorizationApiResponse200JsonGmAction:
      $ref: en/DeviceAuthorizationApiResponse200Json/DeviceAuthorizationApiResponse200JsonGmAction.yaml
    DeviceVerificationApiResponse200JsonAction:
      $ref: en/DeviceVerificationApiResponse200Json/DeviceVerificationApiResponse200JsonAction.yaml
    DeviceVerificationApiResponse200JsonGmAction:
      $ref: en/DeviceVerificationApiResponse200Json/DeviceVerificationApiResponse200JsonGmAction.yaml
    DeviceCompleteApiResponse200JsonAction:
      $ref: en/DeviceCompleteApiResponse200Json/DeviceCompleteApiResponse200JsonAction.yaml
    DeviceCompleteApiRequestBodyJsonResult:
      $ref: en/DeviceCompleteApiRequestBodyJson/DeviceCompleteApiRequestBodyJsonResult.yaml
    DeviceCompleteApiRequestBodyResult:
      $ref: en/DeviceCompleteApiRequestBody/DeviceCompleteApiRequestBodyResult.yaml
    AuthTokenGetListApiResponse200JsonClientClientType:
      $ref: en/AuthTokenGetListApiResponse200Json/AuthTokenGetListApiResponse200JsonClient/AuthTokenGetListApiResponse200JsonClientClientType.yaml
    AuthTokenGetListApiResponse200JsonAccessTokensItemsGrantType:
      $ref: en/AuthTokenGetListApiResponse200Json/AuthTokenGetListApiResponse200JsonAccessTokensItems/AuthTokenGetListApiResponse200JsonAccessTokensItemsGrantType.yaml
    AuthTokenCreateApiResponse200JsonAction:
      $ref: en/AuthTokenCreateApiResponse200Json/AuthTokenCreateApiResponse200JsonAction.yaml
    AuthTokenCreateApiRequestBodyJsonGrantType:
      $ref: en/AuthTokenCreateApiRequestBodyJson/AuthTokenCreateApiRequestBodyJsonGrantType.yaml
    AuthTokenCreateApiRequestBodyGrantType:
      $ref: en/AuthTokenCreateApiRequestBody/AuthTokenCreateApiRequestBodyGrantType.yaml
    AuthTokenUpdateApiResponse200JsonAction:
      $ref: en/AuthTokenUpdateApiResponse200Json/AuthTokenUpdateApiResponse200JsonAction.yaml
    FederationConfigurationApiResponse200JsonAction:
      $ref: en/FederationConfigurationApiResponse200Json/FederationConfigurationApiResponse200JsonAction.yaml
    FederationRegistrationApiResponse200JsonAction:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonAction.yaml
    FederationRegistrationApiResponse200JsonClientClientType:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientClientType.yaml
    FederationRegistrationApiResponse200JsonClientApplicationType:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientApplicationType.yaml
    FederationRegistrationApiResponse200JsonClientGrantTypesItems:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientGrantTypesItems.yaml
    FederationRegistrationApiResponse200JsonClientResponseTypesItems:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientResponseTypesItems.yaml
    FederationRegistrationApiResponse200JsonClientAuthorizationSignAlg:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientAuthorizationSignAlg.yaml
    FederationRegistrationApiResponse200JsonClientAuthorizationEncryptionAlg:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientAuthorizationEncryptionAlg.yaml
    FederationRegistrationApiResponse200JsonClientAuthorizationEncryptionEnc:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientAuthorizationEncryptionEnc.yaml
    FederationRegistrationApiResponse200JsonClientTokenAuthMethod:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientTokenAuthMethod.yaml
    FederationRegistrationApiResponse200JsonClientTokenAuthSignAlg:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientTokenAuthSignAlg.yaml
    FederationRegistrationApiResponse200JsonClientRequestSignAlg:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientRequestSignAlg.yaml
    FederationRegistrationApiResponse200JsonClientRequestEncryptionAlg:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientRequestEncryptionAlg.yaml
    FederationRegistrationApiResponse200JsonClientRequestEncryptionEnc:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientRequestEncryptionEnc.yaml
    FederationRegistrationApiResponse200JsonClientIdTokenSignAlg:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientIdTokenSignAlg.yaml
    FederationRegistrationApiResponse200JsonClientIdTokenEncryptionAlg:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientIdTokenEncryptionAlg.yaml
    FederationRegistrationApiResponse200JsonClientIdTokenEncryptionEnc:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientIdTokenEncryptionEnc.yaml
    FederationRegistrationApiResponse200JsonClientSubjectType:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientSubjectType.yaml
    FederationRegistrationApiResponse200JsonClientUserInfoSignAlg:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientUserInfoSignAlg.yaml
    FederationRegistrationApiResponse200JsonClientUserInfoEncryptionAlg:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientUserInfoEncryptionAlg.yaml
    FederationRegistrationApiResponse200JsonClientUserInfoEncryptionEnc:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientUserInfoEncryptionEnc.yaml
    FederationRegistrationApiResponse200JsonClientBcRequestSignAlg:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientBcRequestSignAlg.yaml
    FederationRegistrationApiResponse200JsonClientClientRegistrationTypesItems:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientClientRegistrationTypesItems.yaml
    FederationRegistrationApiResponse200JsonClientFapiModesItems:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientFapiModesItems.yaml
    FederationRegistrationApiResponse200JsonClientResponseModesItems:
      $ref: en/FederationRegistrationApiResponse200Json/FederationRegistrationApiResponse200JsonClient/FederationRegistrationApiResponse200JsonClientResponseModesItems.yaml
    HskCreateApiResponse200JsonAction:
      $ref: en/HskCreateApiResponse200Json/HskCreateApiResponse200JsonAction.yaml
    HskDeleteApiResponse204JsonAction:
      $ref: en/HskDeleteApiResponse204Json/HskDeleteApiResponse204JsonAction.yaml
    HskGetApiResponse200JsonAction:
      $ref: en/HskGetApiResponse200Json/HskGetApiResponse200JsonAction.yaml
    HskGetListApiResponse200JsonAction:
      $ref: en/HskGetListApiResponse200Json/HskGetListApiResponse200JsonAction.yaml
    VciMetadataApiResponse200JsonAction:
      $ref: en/VciMetadataApiResponse200Json/VciMetadataApiResponse200JsonAction.yaml
    VciJwtissuerApiResponse200JsonAction:
      $ref: en/VciJwtissuerApiResponse200Json/VciJwtissuerApiResponse200JsonAction.yaml
    VciJwksApiResponse200JsonAction:
      $ref: en/VciJwksApiResponse200Json/VciJwksApiResponse200JsonAction.yaml
    VciOfferCreateApiResponse200JsonAction:
      $ref: en/VciOfferCreateApiResponse200Json/VciOfferCreateApiResponse200JsonAction.yaml
    VciOfferInfoApiResponse200JsonAction:
      $ref: en/VciOfferInfoApiResponse200Json/VciOfferInfoApiResponse200JsonAction.yaml
    VciSingleParseApiResponse200JsonAction:
      $ref: en/VciSingleParseApiResponse200Json/VciSingleParseApiResponse200JsonAction.yaml
    VciSingleIssueApiResponse200JsonAction:
      $ref: en/VciSingleIssueApiResponse200Json/VciSingleIssueApiResponse200JsonAction.yaml
    VciBatchParseApiResponse200JsonAction:
      $ref: en/VciBatchParseApiResponse200Json/VciBatchParseApiResponse200JsonAction.yaml
    VciBatchIssueApiResponse200JsonAction:
      $ref: en/VciBatchIssueApiResponse200Json/VciBatchIssueApiResponse200JsonAction.yaml
    VciDeferredParseApiResponse200JsonAction:
      $ref: en/VciDeferredParseApiResponse200Json/VciDeferredParseApiResponse200JsonAction.yaml
    VciDeferredIssueApiResponse200JsonAction:
      $ref: en/VciDeferredIssueApiResponse200Json/VciDeferredIssueApiResponse200JsonAction.yaml
    AuthAuthorizationTicketInfoApiResponse200JsonAction:
      $ref: en/AuthAuthorizationTicketInfoApiResponse200Json/AuthAuthorizationTicketInfoApiResponse200JsonAction.yaml
    AuthAuthorizationTicketUpdateApiResponse200JsonAction:
      $ref: en/AuthAuthorizationTicketUpdateApiResponse200Json/AuthAuthorizationTicketUpdateApiResponse200JsonAction.yaml
    NativeSsoApiResponse200JsonAction:
      $ref: en/NativeSsoApiResponse200Json/NativeSsoApiResponse200JsonAction.yaml
    NativeSsoLogoutApiResponse200JsonAction:
      $ref: en/NativeSsoLogoutApiResponse200Json/NativeSsoLogoutApiResponse200JsonAction.yaml
    AccessTokenGrantType:
      $ref: en/AccessTokenGrantType.yaml
    ClientClientType:
      $ref: en/ClientClientType.yaml
    ClientApplicationType:
      $ref: en/ClientApplicationType.yaml
    ClientGrantTypesItems:
      $ref: en/ClientGrantTypesItems.yaml
    ClientResponseTypesItems:
      $ref: en/ClientResponseTypesItems.yaml
    ClientAuthorizationSignAlg:
      $ref: en/ClientAuthorizationSignAlg.yaml
    ClientAuthorizationEncryptionAlg:
      $ref: en/ClientAuthorizationEncryptionAlg.yaml
    ClientAuthorizationEncryptionEnc:
      $ref: en/ClientAuthorizationEncryptionEnc.yaml
    ClientTokenAuthMethod:
      $ref: en/ClientTokenAuthMethod.yaml
    ClientTokenAuthSignAlg:
      $ref: en/ClientTokenAuthSignAlg.yaml
    ClientRequestSignAlg:
      $ref: en/ClientRequestSignAlg.yaml
    ClientRequestEncryptionAlg:
      $ref: en/ClientRequestEncryptionAlg.yaml
    ClientRequestEncryptionEnc:
      $ref: en/ClientRequestEncryptionEnc.yaml
    ClientIdTokenSignAlg:
      $ref: en/ClientIdTokenSignAlg.yaml
    ClientIdTokenEncryptionAlg:
      $ref: en/ClientIdTokenEncryptionAlg.yaml
    ClientIdTokenEncryptionEnc:
      $ref: en/ClientIdTokenEncryptionEnc.yaml
    ClientSubjectType:
      $ref: en/ClientSubjectType.yaml
    ClientUserInfoSignAlg:
      $ref: en/ClientUserInfoSignAlg.yaml
    ClientUserInfoEncryptionAlg:
      $ref: en/ClientUserInfoEncryptionAlg.yaml
    ClientUserInfoEncryptionEnc:
      $ref: en/ClientUserInfoEncryptionEnc.yaml
    ClientBcRequestSignAlg:
      $ref: en/ClientBcRequestSignAlg.yaml
    ClientClientRegistrationTypesItems:
      $ref: en/ClientClientRegistrationTypesItems.yaml
    ClientFapiModesItems:
      $ref: en/ClientFapiModesItems.yaml
    ClientResponseModesItems:
      $ref: en/ClientResponseModesItems.yaml
    ServiceSupportedGrantTypesItems:
      $ref: en/ServiceSupportedGrantTypesItems.yaml
    ServiceSupportedResponseTypesItems:
      $ref: en/ServiceSupportedResponseTypesItems.yaml
    ServiceSupportedServiceProfilesItems:
      $ref: en/ServiceSupportedServiceProfilesItems.yaml
    ServiceSupportedDisplaysItems:
      $ref: en/ServiceSupportedDisplaysItems.yaml
    ServiceSupportedTokenAuthMethodsItems:
      $ref: en/ServiceSupportedTokenAuthMethodsItems.yaml
    ServiceSupportedRevocationAuthMethodsItems:
      $ref: en/ServiceSupportedRevocationAuthMethodsItems.yaml
    ServiceSupportedIntrospectionAuthMethodsItems:
      $ref: en/ServiceSupportedIntrospectionAuthMethodsItems.yaml
    ServiceAccessTokenSignAlg:
      $ref: en/ServiceAccessTokenSignAlg.yaml
    ServiceSupportedClaimTypesItems:
      $ref: en/ServiceSupportedClaimTypesItems.yaml
    ServiceSupportedBackchannelTokenDeliveryModesItems:
      $ref: en/ServiceSupportedBackchannelTokenDeliveryModesItems.yaml
    ServiceUserCodeCharset:
      $ref: en/ServiceUserCodeCharset.yaml
    ServiceVerifiedClaimsValidationSchemaSet:
      $ref: en/ServiceVerifiedClaimsValidationSchemaSet.yaml
    ServiceSupportedAttachmentsItems:
      $ref: en/ServiceSupportedAttachmentsItems.yaml
    ServiceSupportedClientRegistrationTypesItems:
      $ref: en/ServiceSupportedClientRegistrationTypesItems.yaml
    ServiceSupportedPromptValuesItems:
      $ref: en/ServiceSupportedPromptValuesItems.yaml
    ServiceFapiModesItems:
      $ref: en/ServiceFapiModesItems.yaml
    AccessTokenGrantType1:
      type: string
      description: |
        The grant type of the access token when the access token was created.
      enum:
        - AUTHORIZATION_CODE
        - IMPLICIT
        - PASSWORD
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        - CIBA
        - DEVICE_CODE
        - TOKEN_EXCHANGE
        - JWT_BEARER
    ServiceGetApiResponse200Json1SupportedGrantTypesItems:
      type: string
      description: |
        The grant type of the access token when the access token was created.
      enum:
        - AUTHORIZATION_CODE
        - IMPLICIT
        - PASSWORD
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        - CIBA
        - DEVICE_CODE
        - TOKEN_EXCHANGE
        - JWT_BEARER
    ServiceGetApiResponse200Json1SupportedResponseTypesItems:
      type: string
      enum:
        - NONE
        - CODE
        - TOKEN
        - ID_TOKEN
        - CODE_TOKEN
        - CODE_ID_TOKEN
        - ID_TOKEN_TOKEN
        - CODE_ID_TOKEN_TOKEN
    ServiceGetApiResponse200Json1SupportedServiceProfilesItems:
      type: string
      enum:
        - FAPI
        - OPEN_BANKING
    ServiceGetApiResponse200Json1SupportedDisplaysItems:
      type: string
      description: >
        The display mode which the client application requests by `display`
        request parameter.

        When the authorization request does not have `display` request
        parameter, `PAGE` is set as the default value.


        It is ensured that the value of `display` is one of the supported
        display modes which are specified

        by `supportedDisplays` configuration parameter of the service. If the
        display mode specified by the

        authorization request is not supported, an error is raised.


        Values for this property correspond to the values listed in

        "[OpenID Connect Core 1.0, 3.1.2.1. Authentication
        Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest),
        display".
      enum:
        - PAGE
        - POPUP
        - TOUCH
        - WAP
    ServiceGetApiResponse200Json1SupportedTokenAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceGetApiResponse200Json1SupportedRevocationAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceGetApiResponse200Json1SupportedIntrospectionAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceGetApiResponse200Json1AccessTokenSignAlg:
      type: string
      description: >
        The signature algorithm for JWT. This value is represented on 'alg'
        attribute

        of the header of JWT.


        it's semantics depends upon where is this defined, for instance:
          - as service accessTokenSignAlg value, it defines that access token are JWT and the algorithm used to sign it. Check your [KB article](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/jwt-based-access-token).
          - as client authorizationSignAlg value, it represents the signature algorithm used when [creating a JARM response](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/enabling-jarm).
          - or as client requestSignAlg value, it specifies which is the expected signature used by [client on a Request Object](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/request-objects).
      enum:
        - NONE
        - HS256
        - HS384
        - HS512
        - RS256
        - RS384
        - RS512
        - ES256
        - ES384
        - ES512
        - PS256
        - PS384
        - PS512
        - ES256K
        - EdDSA
    ServiceGetApiResponse200Json1SupportedClaimTypesItems:
      type: string
      enum:
        - NORMAL
        - AGGREGATED
        - DISTRIBUTED
    ServiceGetApiResponse200Json1SupportedBackchannelTokenDeliveryModesItems:
      type: string
      enum:
        - PING
        - POLL
        - PUSH
    ServiceGetApiResponse200Json1UserCodeCharset:
      type: string
      description: >
        The character set for end-user verification codes (`user_code`) for
        Device Flow.
      enum:
        - BASE20
        - NUMERIC
    ServiceGetApiResponse200Json1VerifiedClaimsValidationSchemaSet:
      type: string
      description: |
        OIDC4IDA / verifiedClaimsValidationSchemaSet
      enum:
        - standard
        - standard+id_document
    ServiceGetApiResponse200Json1SupportedAttachmentsItems:
      type: string
      description: >
        Supported attachment types. This property corresponds to the
        `attachments_supported`
         server metadata which was added by the third implementer's draft of OpenID Connect
         for Identity Assurance 1.0.
      enum:
        - EMBEDDED
        - EXTERNAL
    ServiceGetApiResponse200Json1SupportedClientRegistrationTypesItems:
      type: string
      description: >
        Values for the `client_registration_types` RP metadata and the
         `client_registration_types_supported` OP metadata that are defined in
         [OpenID Connect Federation 1.0](https://openid.net/specs/openid-connect-federation-1_0.html).
      enum:
        - AUTOMATIC
        - EXPLICIT
    ServiceGetApiResponse200Json1SupportedPromptValuesItems:
      type: string
      description: >
        The prompt that the UI displayed to the end-user must satisfy as the
        minimum level. This value comes from `prompt` request parameter.


        When the authorization request does not contain `prompt` request
        parameter, `CONSENT` is used as the default value.


        See "[OpenID Connect Core 1.0, 3.1.2.1. Authentication
        Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest),
        prompt" for `prompt` request parameter.
      enum:
        - NONE
        - LOGIN
        - CONSENT
        - SELECT_ACCOUNT
    ServiceGetApiResponse200Json1FapiModesItems:
      type: string
      enum:
        - FAPI1_ADVANCED
        - FAPI1_BASELINE
        - FAPI2_MESSAGE_SIGNING_AUTH_REQ
        - FAPI2_MESSAGE_SIGNING_AUTH_RES
        - FAPI2_MESSAGE_SIGNING_INTROSPECTION_RES
        - FAPI2_SECURITY
    ServiceGetListApiResponse200Json1ServicesItemsSupportedGrantTypesItems:
      type: string
      description: |
        The grant type of the access token when the access token was created.
      enum:
        - AUTHORIZATION_CODE
        - IMPLICIT
        - PASSWORD
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        - CIBA
        - DEVICE_CODE
        - TOKEN_EXCHANGE
        - JWT_BEARER
    ServiceGetListApiResponse200Json1ServicesItemsSupportedResponseTypesItems:
      type: string
      enum:
        - NONE
        - CODE
        - TOKEN
        - ID_TOKEN
        - CODE_TOKEN
        - CODE_ID_TOKEN
        - ID_TOKEN_TOKEN
        - CODE_ID_TOKEN_TOKEN
    ServiceGetListApiResponse200Json1ServicesItemsSupportedServiceProfilesItems:
      type: string
      enum:
        - FAPI
        - OPEN_BANKING
    ServiceGetListApiResponse200Json1ServicesItemsSupportedDisplaysItems:
      type: string
      description: >
        The display mode which the client application requests by `display`
        request parameter.

        When the authorization request does not have `display` request
        parameter, `PAGE` is set as the default value.


        It is ensured that the value of `display` is one of the supported
        display modes which are specified

        by `supportedDisplays` configuration parameter of the service. If the
        display mode specified by the

        authorization request is not supported, an error is raised.


        Values for this property correspond to the values listed in

        "[OpenID Connect Core 1.0, 3.1.2.1. Authentication
        Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest),
        display".
      enum:
        - PAGE
        - POPUP
        - TOUCH
        - WAP
    ServiceGetListApiResponse200Json1ServicesItemsSupportedTokenAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceGetListApiResponse200Json1ServicesItemsSupportedRevocationAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceGetListApiResponse200Json1ServicesItemsSupportedIntrospectionAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceGetListApiResponse200Json1ServicesItemsAccessTokenSignAlg:
      type: string
      description: >
        The signature algorithm for JWT. This value is represented on 'alg'
        attribute

        of the header of JWT.


        it's semantics depends upon where is this defined, for instance:
          - as service accessTokenSignAlg value, it defines that access token are JWT and the algorithm used to sign it. Check your [KB article](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/jwt-based-access-token).
          - as client authorizationSignAlg value, it represents the signature algorithm used when [creating a JARM response](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/enabling-jarm).
          - or as client requestSignAlg value, it specifies which is the expected signature used by [client on a Request Object](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/request-objects).
      enum:
        - NONE
        - HS256
        - HS384
        - HS512
        - RS256
        - RS384
        - RS512
        - ES256
        - ES384
        - ES512
        - PS256
        - PS384
        - PS512
        - ES256K
        - EdDSA
    ServiceGetListApiResponse200Json1ServicesItemsSupportedClaimTypesItems:
      type: string
      enum:
        - NORMAL
        - AGGREGATED
        - DISTRIBUTED
    ServiceGetListApiResponse200Json1ServicesItemsSupportedBackchannelTokenDeliveryModesItems:
      type: string
      enum:
        - PING
        - POLL
        - PUSH
    ServiceGetListApiResponse200Json1ServicesItemsUserCodeCharset:
      type: string
      description: >
        The character set for end-user verification codes (`user_code`) for
        Device Flow.
      enum:
        - BASE20
        - NUMERIC
    ServiceGetListApiResponse200Json1ServicesItemsVerifiedClaimsValidationSchemaSet:
      type: string
      description: |
        OIDC4IDA / verifiedClaimsValidationSchemaSet
      enum:
        - standard
        - standard+id_document
    ServiceGetListApiResponse200Json1ServicesItemsSupportedAttachmentsItems:
      type: string
      description: >
        Supported attachment types. This property corresponds to the
        `attachments_supported`
         server metadata which was added by the third implementer's draft of OpenID Connect
         for Identity Assurance 1.0.
      enum:
        - EMBEDDED
        - EXTERNAL
    ServiceGetListApiResponse200Json1ServicesItemsSupportedClientRegistrationTypesItems:
      type: string
      description: >
        Values for the `client_registration_types` RP metadata and the
         `client_registration_types_supported` OP metadata that are defined in
         [OpenID Connect Federation 1.0](https://openid.net/specs/openid-connect-federation-1_0.html).
      enum:
        - AUTOMATIC
        - EXPLICIT
    ServiceGetListApiResponse200Json1ServicesItemsSupportedPromptValuesItems:
      type: string
      description: >
        The prompt that the UI displayed to the end-user must satisfy as the
        minimum level. This value comes from `prompt` request parameter.


        When the authorization request does not contain `prompt` request
        parameter, `CONSENT` is used as the default value.


        See "[OpenID Connect Core 1.0, 3.1.2.1. Authentication
        Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest),
        prompt" for `prompt` request parameter.
      enum:
        - NONE
        - LOGIN
        - CONSENT
        - SELECT_ACCOUNT
    ServiceGetListApiResponse200Json1ServicesItemsFapiModesItems:
      type: string
      enum:
        - FAPI1_ADVANCED
        - FAPI1_BASELINE
        - FAPI2_MESSAGE_SIGNING_AUTH_REQ
        - FAPI2_MESSAGE_SIGNING_AUTH_RES
        - FAPI2_MESSAGE_SIGNING_INTROSPECTION_RES
        - FAPI2_SECURITY
    ServiceCreateApiRequestBodyJson1SupportedGrantTypesItems:
      type: string
      description: |
        The grant type of the access token when the access token was created.
      enum:
        - AUTHORIZATION_CODE
        - IMPLICIT
        - PASSWORD
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        - CIBA
        - DEVICE_CODE
        - TOKEN_EXCHANGE
        - JWT_BEARER
    ServiceCreateApiRequestBodyJson1SupportedResponseTypesItems:
      type: string
      enum:
        - NONE
        - CODE
        - TOKEN
        - ID_TOKEN
        - CODE_TOKEN
        - CODE_ID_TOKEN
        - ID_TOKEN_TOKEN
        - CODE_ID_TOKEN_TOKEN
    ServiceCreateApiRequestBodyJson1SupportedServiceProfilesItems:
      type: string
      enum:
        - FAPI
        - OPEN_BANKING
    ServiceCreateApiRequestBodyJson1SupportedDisplaysItems:
      type: string
      description: >
        The display mode which the client application requests by `display`
        request parameter.

        When the authorization request does not have `display` request
        parameter, `PAGE` is set as the default value.


        It is ensured that the value of `display` is one of the supported
        display modes which are specified

        by `supportedDisplays` configuration parameter of the service. If the
        display mode specified by the

        authorization request is not supported, an error is raised.


        Values for this property correspond to the values listed in

        "[OpenID Connect Core 1.0, 3.1.2.1. Authentication
        Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest),
        display".
      enum:
        - PAGE
        - POPUP
        - TOUCH
        - WAP
    ServiceCreateApiRequestBodyJson1SupportedTokenAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceCreateApiRequestBodyJson1SupportedRevocationAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceCreateApiRequestBodyJson1SupportedIntrospectionAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceCreateApiRequestBodyJson1AccessTokenSignAlg:
      type: string
      description: >
        The signature algorithm for JWT. This value is represented on 'alg'
        attribute

        of the header of JWT.


        it's semantics depends upon where is this defined, for instance:
          - as service accessTokenSignAlg value, it defines that access token are JWT and the algorithm used to sign it. Check your [KB article](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/jwt-based-access-token).
          - as client authorizationSignAlg value, it represents the signature algorithm used when [creating a JARM response](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/enabling-jarm).
          - or as client requestSignAlg value, it specifies which is the expected signature used by [client on a Request Object](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/request-objects).
      enum:
        - NONE
        - HS256
        - HS384
        - HS512
        - RS256
        - RS384
        - RS512
        - ES256
        - ES384
        - ES512
        - PS256
        - PS384
        - PS512
        - ES256K
        - EdDSA
    ServiceCreateApiRequestBodyJson1SupportedClaimTypesItems:
      type: string
      enum:
        - NORMAL
        - AGGREGATED
        - DISTRIBUTED
    ServiceCreateApiRequestBodyJson1SupportedBackchannelTokenDeliveryModesItems:
      type: string
      enum:
        - PING
        - POLL
        - PUSH
    ServiceCreateApiRequestBodyJson1UserCodeCharset:
      type: string
      description: >
        The character set for end-user verification codes (`user_code`) for
        Device Flow.
      enum:
        - BASE20
        - NUMERIC
    ServiceCreateApiRequestBodyJson1VerifiedClaimsValidationSchemaSet:
      type: string
      description: |
        OIDC4IDA / verifiedClaimsValidationSchemaSet
      enum:
        - standard
        - standard+id_document
    ServiceCreateApiRequestBodyJson1SupportedAttachmentsItems:
      type: string
      description: >
        Supported attachment types. This property corresponds to the
        `attachments_supported`
         server metadata which was added by the third implementer's draft of OpenID Connect
         for Identity Assurance 1.0.
      enum:
        - EMBEDDED
        - EXTERNAL
    ServiceCreateApiRequestBodyJson1SupportedClientRegistrationTypesItems:
      type: string
      description: >
        Values for the `client_registration_types` RP metadata and the
         `client_registration_types_supported` OP metadata that are defined in
         [OpenID Connect Federation 1.0](https://openid.net/specs/openid-connect-federation-1_0.html).
      enum:
        - AUTOMATIC
        - EXPLICIT
    ServiceCreateApiRequestBodyJson1SupportedPromptValuesItems:
      type: string
      description: >
        The prompt that the UI displayed to the end-user must satisfy as the
        minimum level. This value comes from `prompt` request parameter.


        When the authorization request does not contain `prompt` request
        parameter, `CONSENT` is used as the default value.


        See "[OpenID Connect Core 1.0, 3.1.2.1. Authentication
        Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest),
        prompt" for `prompt` request parameter.
      enum:
        - NONE
        - LOGIN
        - CONSENT
        - SELECT_ACCOUNT
    ServiceCreateApiRequestBodyJson1FapiModesItems:
      type: string
      enum:
        - FAPI1_ADVANCED
        - FAPI1_BASELINE
        - FAPI2_MESSAGE_SIGNING_AUTH_REQ
        - FAPI2_MESSAGE_SIGNING_AUTH_RES
        - FAPI2_MESSAGE_SIGNING_INTROSPECTION_RES
        - FAPI2_SECURITY
    ServiceCreateApiRequestBody1SupportedGrantTypesItems:
      type: string
      description: |
        The grant type of the access token when the access token was created.
      enum:
        - AUTHORIZATION_CODE
        - IMPLICIT
        - PASSWORD
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        - CIBA
        - DEVICE_CODE
        - TOKEN_EXCHANGE
        - JWT_BEARER
    ServiceCreateApiRequestBody1SupportedResponseTypesItems:
      type: string
      enum:
        - NONE
        - CODE
        - TOKEN
        - ID_TOKEN
        - CODE_TOKEN
        - CODE_ID_TOKEN
        - ID_TOKEN_TOKEN
        - CODE_ID_TOKEN_TOKEN
    ServiceCreateApiRequestBody1SupportedServiceProfilesItems:
      type: string
      enum:
        - FAPI
        - OPEN_BANKING
    ServiceCreateApiRequestBody1SupportedDisplaysItems:
      type: string
      description: >
        The display mode which the client application requests by `display`
        request parameter.

        When the authorization request does not have `display` request
        parameter, `PAGE` is set as the default value.


        It is ensured that the value of `display` is one of the supported
        display modes which are specified

        by `supportedDisplays` configuration parameter of the service. If the
        display mode specified by the

        authorization request is not supported, an error is raised.


        Values for this property correspond to the values listed in

        "[OpenID Connect Core 1.0, 3.1.2.1. Authentication
        Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest),
        display".
      enum:
        - PAGE
        - POPUP
        - TOUCH
        - WAP
    ServiceCreateApiRequestBody1SupportedTokenAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceCreateApiRequestBody1SupportedRevocationAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceCreateApiRequestBody1SupportedIntrospectionAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceCreateApiRequestBody1AccessTokenSignAlg:
      type: string
      description: >
        The signature algorithm for JWT. This value is represented on 'alg'
        attribute

        of the header of JWT.


        it's semantics depends upon where is this defined, for instance:
          - as service accessTokenSignAlg value, it defines that access token are JWT and the algorithm used to sign it. Check your [KB article](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/jwt-based-access-token).
          - as client authorizationSignAlg value, it represents the signature algorithm used when [creating a JARM response](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/enabling-jarm).
          - or as client requestSignAlg value, it specifies which is the expected signature used by [client on a Request Object](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/request-objects).
      enum:
        - NONE
        - HS256
        - HS384
        - HS512
        - RS256
        - RS384
        - RS512
        - ES256
        - ES384
        - ES512
        - PS256
        - PS384
        - PS512
        - ES256K
        - EdDSA
    ServiceCreateApiRequestBody1SupportedClaimTypesItems:
      type: string
      enum:
        - NORMAL
        - AGGREGATED
        - DISTRIBUTED
    ServiceCreateApiRequestBody1SupportedBackchannelTokenDeliveryModesItems:
      type: string
      enum:
        - PING
        - POLL
        - PUSH
    ServiceCreateApiRequestBody1UserCodeCharset:
      type: string
      description: >
        The character set for end-user verification codes (`user_code`) for
        Device Flow.
      enum:
        - BASE20
        - NUMERIC
    ServiceCreateApiRequestBody1VerifiedClaimsValidationSchemaSet:
      type: string
      description: |
        OIDC4IDA / verifiedClaimsValidationSchemaSet
      enum:
        - standard
        - standard+id_document
    ServiceCreateApiRequestBody1SupportedAttachmentsItems:
      type: string
      description: >
        Supported attachment types. This property corresponds to the
        `attachments_supported`
         server metadata which was added by the third implementer's draft of OpenID Connect
         for Identity Assurance 1.0.
      enum:
        - EMBEDDED
        - EXTERNAL
    ServiceCreateApiRequestBody1SupportedClientRegistrationTypesItems:
      type: string
      description: >
        Values for the `client_registration_types` RP metadata and the
         `client_registration_types_supported` OP metadata that are defined in
         [OpenID Connect Federation 1.0](https://openid.net/specs/openid-connect-federation-1_0.html).
      enum:
        - AUTOMATIC
        - EXPLICIT
    ServiceCreateApiRequestBody1SupportedPromptValuesItems:
      type: string
      description: >
        The prompt that the UI displayed to the end-user must satisfy as the
        minimum level. This value comes from `prompt` request parameter.


        When the authorization request does not contain `prompt` request
        parameter, `CONSENT` is used as the default value.


        See "[OpenID Connect Core 1.0, 3.1.2.1. Authentication
        Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest),
        prompt" for `prompt` request parameter.
      enum:
        - NONE
        - LOGIN
        - CONSENT
        - SELECT_ACCOUNT
    ServiceCreateApiRequestBody1FapiModesItems:
      type: string
      enum:
        - FAPI1_ADVANCED
        - FAPI1_BASELINE
        - FAPI2_MESSAGE_SIGNING_AUTH_REQ
        - FAPI2_MESSAGE_SIGNING_AUTH_RES
        - FAPI2_MESSAGE_SIGNING_INTROSPECTION_RES
        - FAPI2_SECURITY
    ServiceCreateApiResponse200Json1SupportedGrantTypesItems:
      type: string
      description: |
        The grant type of the access token when the access token was created.
      enum:
        - AUTHORIZATION_CODE
        - IMPLICIT
        - PASSWORD
        - CLIENT_CREDENTIALS
        - REFRESH_TOKEN
        - CIBA
        - DEVICE_CODE
        - TOKEN_EXCHANGE
        - JWT_BEARER
    ServiceCreateApiResponse200Json1SupportedResponseTypesItems:
      type: string
      enum:
        - NONE
        - CODE
        - TOKEN
        - ID_TOKEN
        - CODE_TOKEN
        - CODE_ID_TOKEN
        - ID_TOKEN_TOKEN
        - CODE_ID_TOKEN_TOKEN
    ServiceCreateApiResponse200Json1SupportedServiceProfilesItems:
      type: string
      enum:
        - FAPI
        - OPEN_BANKING
    ServiceCreateApiResponse200Json1SupportedDisplaysItems:
      type: string
      description: >
        The display mode which the client application requests by `display`
        request parameter.

        When the authorization request does not have `display` request
        parameter, `PAGE` is set as the default value.


        It is ensured that the value of `display` is one of the supported
        display modes which are specified

        by `supportedDisplays` configuration parameter of the service. If the
        display mode specified by the

        authorization request is not supported, an error is raised.


        Values for this property correspond to the values listed in

        "[OpenID Connect Core 1.0, 3.1.2.1. Authentication
        Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest),
        display".
      enum:
        - PAGE
        - POPUP
        - TOUCH
        - WAP
    ServiceCreateApiResponse200Json1SupportedTokenAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceCreateApiResponse200Json1SupportedRevocationAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceCreateApiResponse200Json1SupportedIntrospectionAuthMethodsItems:
      type: string
      description: >
        The client authentication method that the client application declares
        that it uses at the token

        endpoint. This property corresponds to `token_endpoint_auth_method` in
        [OpenID Connect Dynamic

        Client Registration 1.0, 2. Client
        Metadata](https://openid.net/specs/openid-connect-registration-1_0.html#ClientMetadata).
      enum:
        - NONE
        - CLIENT_SECRET_BASIC
        - CLIENT_SECRET_POST
        - CLIENT_SECRET_JWT
        - PRIVATE_KEY_JWT
        - TLS_CLIENT_AUTH
        - SELF_SIGNED_TLS_CLIENT_AUTH
    ServiceCreateApiResponse200Json1AccessTokenSignAlg:
      type: string
      description: >
        The signature algorithm for JWT. This value is represented on 'alg'
        attribute

        of the header of JWT.


        it's semantics depends upon where is this defined, for instance:
          - as service accessTokenSignAlg value, it defines that access token are JWT and the algorithm used to sign it. Check your [KB article](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/jwt-based-access-token).
          - as client authorizationSignAlg value, it represents the signature algorithm used when [creating a JARM response](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/enabling-jarm).
          - or as client requestSignAlg value, it specifies which is the expected signature used by [client on a Request Object](https://kb.authlete.com/en/s/oauth-and-openid-connect/a/request-objects).
      enum:
        - NONE
        - HS256
        - HS384
        - HS512
        - RS256
        - RS384
        - RS512
        - ES256
        - ES384
        - ES512
        - PS256
        - PS384
        - PS512
        - ES256K
        - EdDSA
    ServiceCreateApiResponse200Json1SupportedClaimTypesItems:
      type: string
      enum:
        - NORMAL
        - AGGREGATED
        - DISTRIBUTED
    ServiceCreateApiResponse200Json1SupportedBackchannelTokenDeliveryModesItems:
      type: string
      enum:
        - PING
        - POLL
        - PUSH
    ServiceCreateApiResponse200Json1UserCodeCharset:
      type: string
      description: >
        The character set for end-user verification codes (`user_code`) for
        Device Flow.
      enum:
        - BASE20
        - NUMERIC
    ServiceCreateApiResponse200Json1VerifiedClaimsValidationSchemaSet:
      type: string
      description: |
        OIDC4IDA / verifiedClaimsValidationSchemaSet
      enum:
        - standard
        - standard+id_document
    ServiceCreateApiResponse200Json1SupportedAttachmentsItems:
      type: string
      description: >
        Supported attachment types. This property corresponds to the
        `attachments_supported`
         server metadata which was added by the third implementer's draft of OpenID Connect
         for Identity Assurance 1.0.
      enum:
        - EMBEDDED
        - EXTERNAL
    ServiceCreateApiResponse200Json1SupportedClientRegistrationTypesItems:
      type: string
      description: >
        Values for the `client_registration_types` RP metadata and the
         `client_registration_types_supported` OP metadata that are defined in
         [OpenID Connect Federation 1.0](https://openid.net/specs/openid-connect-federation-1_0.html).
      enum:
        - AUTOMATIC
        - EXPLICIT
    ServiceCreateApiResponse200Json1SupportedPromptValuesItems:
      type: string
      description: >
        The prompt that the UI displayed to the end-user must satisfy as the
        minimum level. This value comes from `prompt` request parameter.


        When the authorization request does not contain `prompt` request
        parameter, `CONSENT` is used as the default value.


        See "[OpenID Connect Core 1.0, 3.1.2.1. Authentication
        Request](https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest),
        prompt" for `prompt` request parameter.
      enum:
        - NONE
        - LOGIN
        - CONSENT
        - SELECT_ACCOUNT
    ServiceCreateApiResponse200Json1FapiModesItems:
      type: string
      enum:
        - FAPI1_ADVANCED
        - FAPI1_BASELINE
        - FAPI2_MESSAGE_SIGNING_AUTH_REQ
        - FAPI2_MESSAGE_SIGNING_AUTH_RES
        - FAPI2_MESSAGE_SIGNING_INTROSPECTION_RES
        - FAPI2_SECURITY
  examples: {}
